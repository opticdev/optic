// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`groupChangesAndRules diffs and groups changes between two open api files: pet store grouped changes 1`] = `
{
  "changesByEndpoint": Map {
    "GET-~_~-/example" => {
      "change": {
        "changeType": "changed",
        "changed": {
          "after": {
            "method": "get",
            "operationId": "get_examples",
            "pathPattern": "/example",
          },
          "before": {
            "method": "get",
            "operationId": "getExamples",
            "pathPattern": "/example",
          },
        },
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": [
            "operations",
            "/example",
            "get",
          ],
          "jsonPath": "/paths/~1example/get",
          "kind": "operation",
        },
      },
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/example",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {
          "status" => {
            "changeType": "changed",
            "changed": {
              "after": {
                "in": "query",
                "name": "status",
                "required": true,
                "schema": {
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
              },
              "before": {
                "in": "query",
                "name": "status",
                "required": true,
                "schema": {
                  "enum": [
                    "available",
                    "sold",
                  ],
                  "type": "string",
                },
              },
            },
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "status",
                },
                "method": "get",
                "path": "/example",
              },
              "conceptualPath": [
                "operations",
                "/example",
                "get",
                "parameters",
                "query",
                "status",
              ],
              "jsonPath": "/paths/~1example/get/parameters/1",
              "kind": "query-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": null,
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": null,
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "allOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "number",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "fulfillmentId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "composedObject",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "allOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "fulfillmentId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "composedObject",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "composedObject",
                      ],
                      "method": "get",
                      "path": "/example",
                    },
                    "conceptualPath": [
                      "operations",
                      "/example",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "composedObject",
                    ],
                    "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "number",
                      },
                      "key": "orderId",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "orderId",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "composedObject",
                        "orderId",
                      ],
                      "method": "get",
                      "path": "/example",
                    },
                    "conceptualPath": [
                      "operations",
                      "/example",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "composedObject",
                      "allOf",
                      "0",
                      "orderId",
                    ],
                    "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "anyOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "order": {
                                "properties": {
                                  "id": {
                                    "type": "string",
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "expandableObject",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "anyOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "expandableObject",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "expandableObject",
                      ],
                      "method": "get",
                      "path": "/example",
                    },
                    "conceptualPath": [
                      "operations",
                      "/example",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "expandableObject",
                    ],
                    "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "object",
                    },
                    "key": "order",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "expandableObject",
                        "order",
                      ],
                      "method": "get",
                      "path": "/example",
                    },
                    "conceptualPath": [
                      "operations",
                      "/example",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "expandableObject",
                      "anyOf",
                      "1",
                      "order",
                    ],
                    "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "expandableObject",
                        "order",
                        "id",
                      ],
                      "method": "get",
                      "path": "/example",
                    },
                    "conceptualPath": [
                      "operations",
                      "/example",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "expandableObject",
                      "anyOf",
                      "1",
                      "order",
                      "id",
                    ],
                    "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                        ],
                      },
                      "key": "stringOrNumberOrObject",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "stringOrNumberOrObject",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "stringOrNumberOrObject",
                      ],
                      "method": "get",
                      "path": "/example",
                    },
                    "conceptualPath": [
                      "operations",
                      "/example",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "stringOrNumberOrObject",
                    ],
                    "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "stringOrNumberOrObject",
                        "orderId",
                      ],
                      "method": "get",
                      "path": "/example",
                    },
                    "conceptualPath": [
                      "operations",
                      "/example",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "stringOrNumberOrObject",
                      "oneOf",
                      "2",
                      "orderId",
                    ],
                    "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2/properties/orderId",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "orderId",
                      "required": false,
                    },
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/example",
                },
                "conceptualPath": [
                  "operations",
                  "/example",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                ],
                "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "200",
        },
      },
    },
    "GET-~_~-/pet" => {
      "change": {
        "changeType": "removed",
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "get",
          ],
          "jsonPath": "/paths/~1pet/get",
          "kind": "operation",
        },
        "removed": {
          "before": {
            "method": "get",
            "pathPattern": "/pet",
          },
        },
      },
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/pet",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "404" => {
          "change": {
            "changeType": "removed",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet/get/responses/404",
              "kind": "response",
            },
            "removed": {
              "before": {
                "description": "Pet not found",
                "statusCode": "404",
              },
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "404",
        },
        "405" => {
          "change": {
            "changeType": "removed",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "get",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "get",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet/get/responses/405",
              "kind": "response",
            },
            "removed": {
              "before": {
                "description": "Validation exception",
                "statusCode": "405",
              },
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "405",
        },
      },
    },
    "POST-~_~-/pet" => {
      "change": {
        "changeType": "changed",
        "changed": {
          "after": {
            "method": "post",
            "operationId": "addPet-change",
            "pathPattern": "/pet",
            "security": [
              {
                "petstore_auth": [
                  "write:pets",
                  "read:pets",
                ],
              },
            ],
            "summary": "Add a new pet to the store",
            "tags": [
              "pet",
            ],
            "x-codegen-request-body-name": "body",
          },
          "before": {
            "method": "post",
            "operationId": "addPet",
            "pathPattern": "/pet",
            "security": [
              {
                "petstore_auth": [
                  "write:pets",
                  "read:pets",
                ],
              },
            ],
            "summary": "Add a new pet to the store",
            "tags": [
              "pet",
            ],
            "x-codegen-request-body-name": "body",
          },
        },
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "post",
          ],
          "jsonPath": "/paths/~1pet/post",
          "kind": "operation",
        },
      },
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "post",
      "path": "/pet",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {
          "application/json" => {
            "bodyChange": null,
            "exampleChanges": [],
            "fieldChanges": [
              {
                "added": {
                  "flatSchema": {
                    "type": "string",
                  },
                  "key": "other",
                  "required": false,
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/json",
                      },
                    },
                    "jsonSchemaTrail": [
                      "category",
                      "other",
                    ],
                    "method": "post",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "post",
                    "application/json",
                    "category",
                    "other",
                  ],
                  "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category/properties/other",
                  "kind": "field",
                },
              },
            ],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "application/json",
                  },
                },
                "method": "post",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "post",
                "application/json",
              ],
              "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json",
              "kind": "body",
            },
          },
        },
        "change": null,
        "hasRules": false,
      },
      "responses": Map {},
    },
    "PUT-~_~-/pet" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "put",
      "path": "/pet",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {
          "application/json" => {
            "bodyChange": null,
            "exampleChanges": [],
            "fieldChanges": [
              {
                "added": {
                  "flatSchema": {
                    "type": "string",
                  },
                  "key": "example",
                  "required": false,
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/json",
                      },
                    },
                    "jsonSchemaTrail": [
                      "example",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/json",
                    "example",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/example",
                  "kind": "field",
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/json",
                      },
                    },
                    "jsonSchemaTrail": [
                      "name",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/json",
                    "name",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/name",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                },
              },
              {
                "added": {
                  "flatSchema": {
                    "type": "string",
                  },
                  "key": "number",
                  "required": true,
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/json",
                      },
                    },
                    "jsonSchemaTrail": [
                      "number",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/json",
                    "number",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/number",
                  "kind": "field",
                },
              },
            ],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "application/json",
                  },
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "application/json",
              ],
              "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json",
              "kind": "body",
            },
          },
          "application/xml" => {
            "bodyChange": {
              "changeType": "removed",
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/xml",
                    },
                  },
                  "method": "put",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "put",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml",
                "kind": "body",
              },
              "removed": {
                "before": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
              },
            },
            "exampleChanges": [],
            "fieldChanges": [
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "category",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "category",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "category",
                      "id",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "category",
                    "id",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category/properties/id",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "category",
                      "name",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "category",
                    "name",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category/properties/name",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "id",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "id",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/id",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "name",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "name",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/name",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "photoUrls",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "photoUrls",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/photoUrls",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "status",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "status",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/status",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "tags",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "tags",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "tags",
                      "items",
                      "id",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "tags",
                    "items",
                    "id",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags/items/properties/id",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/xml",
                      },
                    },
                    "jsonSchemaTrail": [
                      "tags",
                      "items",
                      "name",
                    ],
                    "method": "put",
                    "path": "/pet",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet",
                    "put",
                    "application/xml",
                    "tags",
                    "items",
                    "name",
                  ],
                  "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags/items/properties/name",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
              },
            ],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "application/xml",
                  },
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "application/xml",
              ],
              "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml",
              "kind": "body",
            },
          },
        },
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "400" => {
          "change": {
            "changeType": "removed",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet/put/responses/400",
              "kind": "response",
            },
            "removed": {
              "before": {
                "description": "Invalid ID supplied",
                "statusCode": "400",
              },
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "400",
        },
      },
    },
    "GET-~_~-/pet/findByStatus" => {
      "change": {
        "added": {
          "description": "Multiple status values can be provided with comma separated strings",
          "method": "get",
          "operationId": "findPetsByStatus",
          "pathPattern": "/pet/findByStatus",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Finds Pets by status",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/findByStatus",
          },
          "conceptualPath": [
            "operations",
            "/pet/findByStatus",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1findByStatus/get",
          "kind": "operation",
        },
      },
      "cookieParameters": {
        "changes": Map {
          "debug" => {
            "added": {
              "description": "A debug token",
              "in": "cookie",
              "name": "debug",
              "required": false,
              "schema": {
                "enum": [
                  0,
                  1,
                ],
                "type": "integer",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "cookie": "debug",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "parameters",
                "cookie",
                "debug",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/parameters/1",
              "kind": "cookie-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/pet/findByStatus",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {
          "status" => {
            "added": {
              "description": "Status values that need to be considered for filter",
              "explode": true,
              "in": "query",
              "name": "status",
              "required": true,
              "schema": {
                "items": {
                  "default": "available",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "style": "form",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "status",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "parameters",
                "query",
                "status",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/parameters/0",
              "kind": "query-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": {
            "added": {
              "description": "successful operation",
              "statusCode": "200",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200",
              "kind": "response",
            },
          },
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "array",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByStatus",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByStatus",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "photoUrls",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/photoUrls",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "status",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/pet/findByStatus",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/findByStatus",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json",
                "kind": "body",
              },
            },
            "application/xml" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "array",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByStatus",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByStatus",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "photoUrls",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/photoUrls",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "status",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByStatus",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByStatus",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/pet/findByStatus",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/findByStatus",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "200",
        },
        "400" => {
          "change": {
            "added": {
              "description": "Invalid status value",
              "statusCode": "400",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/responses/400",
              "kind": "response",
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "400",
        },
      },
    },
    "GET-~_~-/pet/findByTags" => {
      "change": {
        "added": {
          "deprecated": true,
          "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
          "method": "get",
          "operationId": "findPetsByTags",
          "pathPattern": "/pet/findByTags",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Finds Pets by tags",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/findByTags",
          },
          "conceptualPath": [
            "operations",
            "/pet/findByTags",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1findByTags/get",
          "kind": "operation",
        },
      },
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/pet/findByTags",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {
          "tags" => {
            "added": {
              "description": "Tags to filter by",
              "explode": true,
              "in": "query",
              "name": "tags",
              "required": true,
              "schema": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "style": "form",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "tags",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "parameters",
                "query",
                "tags",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/parameters/0",
              "kind": "query-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": {
            "added": {
              "description": "successful operation",
              "statusCode": "200",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/responses/200",
              "kind": "response",
            },
          },
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "array",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByTags",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByTags",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "photoUrls",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/photoUrls",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "status",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "items",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/pet/findByTags",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/findByTags",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json",
                "kind": "body",
              },
            },
            "application/xml" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "array",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByTags",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByTags",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "category",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "photoUrls",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/photoUrls",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "status",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/findByTags",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/findByTags",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "items",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/pet/findByTags",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/findByTags",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "200",
        },
        "400" => {
          "change": {
            "added": {
              "description": "Invalid tag value",
              "statusCode": "400",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/responses/400",
              "kind": "response",
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "400",
        },
      },
    },
    "DELETE-~_~-/pet/{petId}" => {
      "change": {
        "added": {
          "method": "delete",
          "operationId": "deletePet",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Deletes a pet",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "delete",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "delete",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/delete",
          "kind": "operation",
        },
      },
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {
          "api_key" => {
            "added": {
              "in": "header",
              "name": "api_key",
              "schema": {
                "type": "string",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "header": "api_key",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "parameters",
                "header",
                "api_key",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/parameters/0",
              "kind": "header-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "method": "delete",
      "path": "/pet/{petId}",
      "pathParameters": {
        "changes": Map {
          "petId" => {
            "added": {
              "description": "Pet id to delete",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/parameters/1",
              "kind": "path-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "400" => {
          "change": {
            "added": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/responses/400",
              "kind": "response",
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "400",
        },
        "404" => {
          "change": {
            "added": {
              "description": "Pet not found",
              "statusCode": "404",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/responses/404",
              "kind": "response",
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "404",
        },
      },
    },
    "GET-~_~-/pet/{petId}" => {
      "change": {
        "added": {
          "description": "Returns a single pet",
          "method": "get",
          "operationId": "getPetById",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "api_key": [],
            },
          ],
          "summary": "Find pet by ID",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/get",
          "kind": "operation",
        },
      },
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/pet/{petId}",
      "pathParameters": {
        "changes": Map {
          "petId" => {
            "added": {
              "description": "ID of pet to return",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/parameters/0",
              "kind": "path-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": {
            "added": {
              "description": "successful operation",
              "statusCode": "200",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/200",
              "kind": "response",
            },
          },
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/{petId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/photoUrls",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/pet/{petId}",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json",
                "kind": "body",
              },
            },
            "application/xml" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/{petId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/name",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/photoUrls",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "get",
                      "path": "/pet/{petId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/pet/{petId}",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "200",
        },
        "400" => {
          "change": {
            "added": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/400",
              "kind": "response",
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "400",
        },
        "404" => {
          "change": {
            "added": {
              "description": "Pet not found",
              "statusCode": "404",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/404",
              "kind": "response",
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "404",
        },
      },
    },
    "POST-~_~-/pet/{petId}" => {
      "change": {
        "added": {
          "method": "post",
          "operationId": "updatePetWithForm",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Updates a pet in the store with form data",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "post",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/post",
          "kind": "operation",
        },
      },
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "post",
      "path": "/pet/{petId}",
      "pathParameters": {
        "changes": Map {
          "petId" => {
            "added": {
              "description": "ID of pet that needs to be updated",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "post",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "post",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/post/parameters/0",
              "kind": "path-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {
          "application/x-www-form-urlencoded" => {
            "bodyChange": {
              "added": {
                "contentType": "application/x-www-form-urlencoded",
                "flatSchema": {},
              },
              "changeType": "added",
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/x-www-form-urlencoded",
                    },
                  },
                  "method": "post",
                  "path": "/pet/{petId}",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}",
                  "post",
                  "application/x-www-form-urlencoded",
                ],
                "jsonPath": "/paths/~1pet~1{petId}/post/requestBody/content/application~1x-www-form-urlencoded",
                "kind": "body",
              },
            },
            "exampleChanges": [
              {
                "added": {
                  "contentType": "application/x-www-form-urlencoded",
                  "name": "new name",
                  "status": "available",
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/x-www-form-urlencoded",
                      },
                    },
                    "method": "post",
                    "name": "available",
                    "path": "/pet/{petId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}",
                    "post",
                    "application/x-www-form-urlencoded",
                    "examples",
                    "available",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}/post/requestBody/content/application~1x-www-form-urlencoded/examples/available",
                  "kind": "body-example",
                },
              },
              {
                "added": {
                  "contentType": "application/x-www-form-urlencoded",
                  "name": "good boy",
                  "status": "sold",
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "application/x-www-form-urlencoded",
                      },
                    },
                    "method": "post",
                    "name": "sold",
                    "path": "/pet/{petId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}",
                    "post",
                    "application/x-www-form-urlencoded",
                    "examples",
                    "sold",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}/post/requestBody/content/application~1x-www-form-urlencoded/examples/sold",
                  "kind": "body-example",
                },
              },
            ],
            "fieldChanges": [],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "application/x-www-form-urlencoded",
                  },
                },
                "method": "post",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "post",
                "application/x-www-form-urlencoded",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/post/requestBody/content/application~1x-www-form-urlencoded",
              "kind": "body",
            },
          },
        },
        "change": {
          "added": {},
          "changeType": "added",
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/pet/{petId}",
            },
            "conceptualPath": [
              "operations",
              "/pet/{}",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet~1{petId}/post/requestBody",
            "kind": "request",
          },
        },
        "hasRules": false,
      },
      "responses": Map {
        "405" => {
          "change": {
            "added": {
              "description": "Invalid input",
              "statusCode": "405",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "post",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "post",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/post/responses/405",
              "kind": "response",
            },
          },
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "405",
        },
      },
    },
    "POST-~_~-/pet/{petId}/uploadImage" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {
          "debug" => {
            "changeType": "changed",
            "changed": {
              "after": {
                "description": "A debug token",
                "in": "cookie",
                "name": "debug",
                "required": false,
                "schema": {
                  "enum": [
                    0,
                    1,
                  ],
                  "type": "integer",
                },
              },
              "before": {
                "description": "A debug token",
                "in": "cookie",
                "name": "debug",
                "required": false,
                "schema": {
                  "type": "integer",
                },
              },
            },
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "cookie": "debug",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "parameters",
                "cookie",
                "debug",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/parameters/1",
              "kind": "cookie-parameter",
            },
          },
        },
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "post",
      "path": "/pet/{petId}/uploadImage",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": {
            "changeType": "removed",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200",
              "kind": "response",
            },
            "removed": {
              "before": {
                "description": "successful operation",
                "statusCode": "200",
              },
            },
          },
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json",
                  "kind": "body",
                },
                "removed": {
                  "before": {
                    "contentType": "application/json",
                    "flatSchema": {
                      "type": "object",
                    },
                  },
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "code",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "200",
                      "application/json",
                      "code",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/code",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                },
                {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "message",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "200",
                      "application/json",
                      "message",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/message",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                },
                {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "type",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "200",
                      "application/json",
                      "type",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/type",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "method": "post",
                  "path": "/pet/{petId}/uploadImage",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}/uploadImage",
                  "post",
                  "responses",
                  "200",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "200",
        },
        "201" => {
          "change": {
            "added": {
              "description": "successful operation",
              "statusCode": "201",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "201",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "201",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201",
              "kind": "response",
            },
          },
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "201",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "201",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "code",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "201",
                      },
                      "jsonSchemaTrail": [
                        "code",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "201",
                      "application/json",
                      "code",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/code",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "message",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "201",
                      },
                      "jsonSchemaTrail": [
                        "message",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "201",
                      "application/json",
                      "message",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/message",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "type",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "201",
                      },
                      "jsonSchemaTrail": [
                        "type",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "201",
                      "application/json",
                      "type",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/type",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "201",
                  },
                  "method": "post",
                  "path": "/pet/{petId}/uploadImage",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}/uploadImage",
                  "post",
                  "responses",
                  "201",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "201",
        },
        "404" => {
          "change": {
            "added": {
              "description": "Pet not found",
              "statusCode": "404",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404",
              "kind": "response",
            },
          },
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "code",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "code",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "404",
                      "application/json",
                      "code",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/code",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "message",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "message",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "404",
                      "application/json",
                      "message",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/message",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "type",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "type",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "404",
                      "application/json",
                      "type",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/type",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "404",
                  },
                  "method": "post",
                  "path": "/pet/{petId}/uploadImage",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}/uploadImage",
                  "post",
                  "responses",
                  "404",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "404",
        },
        "default" => {
          "change": null,
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": null,
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "integer",
                      },
                      "key": "type",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "default",
                      },
                      "jsonSchemaTrail": [
                        "type",
                      ],
                      "method": "post",
                      "path": "/pet/{petId}/uploadImage",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet/{}/uploadImage",
                      "post",
                      "responses",
                      "default",
                      "application/json",
                      "type",
                    ],
                    "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/type",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "default",
                  },
                  "method": "post",
                  "path": "/pet/{petId}/uploadImage",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}/uploadImage",
                  "post",
                  "responses",
                  "default",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "default",
        },
      },
    },
    "GET-~_~-/store/inventory" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/store/inventory",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {},
    },
    "POST-~_~-/store/order" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "post",
      "path": "/store/order",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {
          "*/*" => {
            "bodyChange": null,
            "exampleChanges": [],
            "fieldChanges": [
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "description": "Order Status",
                      "enum": [
                        "placed",
                        "delivered",
                        "canceled",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                  "before": {
                    "flatSchema": {
                      "description": "Order Status",
                      "enum": [
                        "placed",
                        "approved",
                        "delivered",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "status",
                    ],
                    "method": "post",
                    "path": "/store/order",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order",
                    "post",
                    "*/*",
                    "status",
                  ],
                  "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/status",
                  "kind": "field",
                },
              },
              {
                "added": {
                  "flatSchema": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                  "key": "summary",
                  "required": false,
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "summary",
                    ],
                    "method": "post",
                    "path": "/store/order",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order",
                    "post",
                    "*/*",
                    "summary",
                  ],
                  "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/summary",
                  "kind": "field",
                },
              },
            ],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "*/*",
                  },
                },
                "method": "post",
                "path": "/store/order",
              },
              "conceptualPath": [
                "operations",
                "/store/order",
                "post",
                "*/*",
              ],
              "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*",
              "kind": "body",
            },
          },
        },
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": null,
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": null,
              "exampleChanges": [
                {
                  "added": {
                    "contentType": "application/json",
                    "name": undefined,
                    "value": {
                      "complete": false,
                      "id": 458102,
                      "petId": 581231,
                      "quantity": 31,
                      "shipDate": "2022-03-04T22:54:32.631Z",
                      "status": "delivered",
                      "summary": "31 boxes of dog food",
                    },
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "method": "post",
                      "path": "/store/order",
                      "singular": true,
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "responses",
                      "200",
                      "application/json",
                      "example",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/example",
                    "kind": "body-example",
                  },
                },
              ],
              "fieldChanges": [
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "responses",
                      "200",
                      "application/json",
                      "status",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "Human readable summary of order",
                      "type": "string",
                    },
                    "key": "summary",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "summary",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "responses",
                      "200",
                      "application/json",
                      "summary",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/summary",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "method": "post",
                  "path": "/store/order",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order",
                  "post",
                  "responses",
                  "200",
                  "application/json",
                ],
                "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json",
                "kind": "body",
              },
            },
            "application/xml" => {
              "bodyChange": null,
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "responses",
                      "200",
                      "application/xml",
                      "status",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "Human readable summary of order",
                      "type": "string",
                    },
                    "key": "summary",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "summary",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "responses",
                      "200",
                      "application/xml",
                      "summary",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/summary",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "method": "post",
                  "path": "/store/order",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order",
                  "post",
                  "responses",
                  "200",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "200",
        },
      },
    },
    "DELETE-~_~-/store/order/{orderId}" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "delete",
      "path": "/store/order/{orderId}",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "404" => {
          "change": null,
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "delete",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "delete",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "code",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "code",
                      ],
                      "method": "delete",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "delete",
                      "responses",
                      "404",
                      "application/json",
                      "code",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/code",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "message",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "message",
                      ],
                      "method": "delete",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "delete",
                      "responses",
                      "404",
                      "application/json",
                      "message",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/message",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "type",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "type",
                      ],
                      "method": "delete",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "delete",
                      "responses",
                      "404",
                      "application/json",
                      "type",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/type",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "404",
                  },
                  "method": "delete",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "delete",
                  "responses",
                  "404",
                  "application/json",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "404",
        },
      },
    },
    "GET-~_~-/store/order/{orderId}" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/store/order/{orderId}",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": null,
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": null,
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "get",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "status",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "Human readable summary of order",
                      "type": "string",
                    },
                    "key": "summary",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "summary",
                      ],
                      "method": "get",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "summary",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/summary",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json",
                "kind": "body",
              },
            },
            "application/xml" => {
              "bodyChange": null,
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "petId",
                      ],
                      "method": "get",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "petId",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "get",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "status",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "description": "Human readable summary of order",
                      "type": "string",
                    },
                    "key": "summary",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "summary",
                      ],
                      "method": "get",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "summary",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/summary",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "200",
        },
        "404" => {
          "change": null,
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "get",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "get",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "code",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "code",
                      ],
                      "method": "get",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "get",
                      "responses",
                      "404",
                      "application/json",
                      "code",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/code",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "message",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "message",
                      ],
                      "method": "get",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "get",
                      "responses",
                      "404",
                      "application/json",
                      "message",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/message",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "type",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "type",
                      ],
                      "method": "get",
                      "path": "/store/order/{orderId}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order/{}",
                      "get",
                      "responses",
                      "404",
                      "application/json",
                      "type",
                    ],
                    "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/type",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "404",
                  },
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "404",
                  "application/json",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "404",
        },
      },
    },
    "POST-~_~-/user" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "post",
      "path": "/user",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {
          "*/*" => {
            "bodyChange": null,
            "exampleChanges": [],
            "fieldChanges": [
              {
                "added": {
                  "flatSchema": {
                    "type": "string",
                  },
                  "key": "bio",
                  "required": false,
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "bio",
                    ],
                    "method": "post",
                    "path": "/user",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user",
                    "post",
                    "*/*",
                    "bio",
                  ],
                  "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/bio",
                  "kind": "field",
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": false,
                  },
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": true,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "lastName",
                    ],
                    "method": "post",
                    "path": "/user",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user",
                    "post",
                    "*/*",
                    "lastName",
                  ],
                  "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/lastName",
                  "kind": "field",
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "phone",
                    ],
                    "method": "post",
                    "path": "/user",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user",
                    "post",
                    "*/*",
                    "phone",
                  ],
                  "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/phone",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "phone",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "description": "User Status",
                      "enum": [
                        "activation-pending",
                        "activated",
                        "blocked",
                      ],
                      "type": "string",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                  "before": {
                    "flatSchema": {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "userStatus",
                    ],
                    "method": "post",
                    "path": "/user",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user",
                    "post",
                    "*/*",
                    "userStatus",
                  ],
                  "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/userStatus",
                  "kind": "field",
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": true,
                  },
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": false,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "username",
                    ],
                    "method": "post",
                    "path": "/user",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user",
                    "post",
                    "*/*",
                    "username",
                  ],
                  "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/username",
                  "kind": "field",
                },
              },
            ],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "*/*",
                  },
                },
                "method": "post",
                "path": "/user",
              },
              "conceptualPath": [
                "operations",
                "/user",
                "post",
                "*/*",
              ],
              "jsonPath": "/paths/~1user/post/requestBody/content/*~1*",
              "kind": "body",
            },
          },
        },
        "change": null,
        "hasRules": false,
      },
      "responses": Map {},
    },
    "POST-~_~-/user/createWithArray" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "post",
      "path": "/user/createWithArray",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {
          "*/*" => {
            "bodyChange": null,
            "exampleChanges": [],
            "fieldChanges": [
              {
                "added": {
                  "flatSchema": {
                    "type": "string",
                  },
                  "key": "bio",
                  "required": false,
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "bio",
                    ],
                    "method": "post",
                    "path": "/user/createWithArray",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithArray",
                    "post",
                    "*/*",
                    "items",
                    "bio",
                  ],
                  "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/bio",
                  "kind": "field",
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": false,
                  },
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": true,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "lastName",
                    ],
                    "method": "post",
                    "path": "/user/createWithArray",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithArray",
                    "post",
                    "*/*",
                    "items",
                    "lastName",
                  ],
                  "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/lastName",
                  "kind": "field",
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "phone",
                    ],
                    "method": "post",
                    "path": "/user/createWithArray",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithArray",
                    "post",
                    "*/*",
                    "items",
                    "phone",
                  ],
                  "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/phone",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "phone",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "description": "User Status",
                      "enum": [
                        "activation-pending",
                        "activated",
                        "blocked",
                      ],
                      "type": "string",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                  "before": {
                    "flatSchema": {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "userStatus",
                    ],
                    "method": "post",
                    "path": "/user/createWithArray",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithArray",
                    "post",
                    "*/*",
                    "items",
                    "userStatus",
                  ],
                  "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/userStatus",
                  "kind": "field",
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": true,
                  },
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": false,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "username",
                    ],
                    "method": "post",
                    "path": "/user/createWithArray",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithArray",
                    "post",
                    "*/*",
                    "items",
                    "username",
                  ],
                  "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/username",
                  "kind": "field",
                },
              },
            ],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "*/*",
                  },
                },
                "method": "post",
                "path": "/user/createWithArray",
              },
              "conceptualPath": [
                "operations",
                "/user/createWithArray",
                "post",
                "*/*",
              ],
              "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*",
              "kind": "body",
            },
          },
        },
        "change": null,
        "hasRules": false,
      },
      "responses": Map {},
    },
    "POST-~_~-/user/createWithList" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "post",
      "path": "/user/createWithList",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {
          "*/*" => {
            "bodyChange": null,
            "exampleChanges": [],
            "fieldChanges": [
              {
                "added": {
                  "flatSchema": {
                    "type": "string",
                  },
                  "key": "bio",
                  "required": false,
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "bio",
                    ],
                    "method": "post",
                    "path": "/user/createWithList",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithList",
                    "post",
                    "*/*",
                    "items",
                    "bio",
                  ],
                  "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/bio",
                  "kind": "field",
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": false,
                  },
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": true,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "lastName",
                    ],
                    "method": "post",
                    "path": "/user/createWithList",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithList",
                    "post",
                    "*/*",
                    "items",
                    "lastName",
                  ],
                  "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/lastName",
                  "kind": "field",
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "phone",
                    ],
                    "method": "post",
                    "path": "/user/createWithList",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithList",
                    "post",
                    "*/*",
                    "items",
                    "phone",
                  ],
                  "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/phone",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "phone",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "description": "User Status",
                      "enum": [
                        "activation-pending",
                        "activated",
                        "blocked",
                      ],
                      "type": "string",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                  "before": {
                    "flatSchema": {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "userStatus",
                    ],
                    "method": "post",
                    "path": "/user/createWithList",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithList",
                    "post",
                    "*/*",
                    "items",
                    "userStatus",
                  ],
                  "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/userStatus",
                  "kind": "field",
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": true,
                  },
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": false,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "items",
                      "username",
                    ],
                    "method": "post",
                    "path": "/user/createWithList",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/createWithList",
                    "post",
                    "*/*",
                    "items",
                    "username",
                  ],
                  "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/username",
                  "kind": "field",
                },
              },
            ],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "*/*",
                  },
                },
                "method": "post",
                "path": "/user/createWithList",
              },
              "conceptualPath": [
                "operations",
                "/user/createWithList",
                "post",
                "*/*",
              ],
              "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*",
              "kind": "body",
            },
          },
        },
        "change": null,
        "hasRules": false,
      },
      "responses": Map {},
    },
    "GET-~_~-/user/login" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/user/login",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": null,
          "contentTypes": Map {},
          "hasRules": false,
          "headers": {
            "changes": Map {
              "X-Expires-After" => {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "description": "date in UTC when token expires",
                    "name": "X-Expires-After",
                    "schema": {
                      "format": "date-time",
                      "type": "string",
                    },
                  },
                  "before": {
                    "description": "date in UTC when token expires",
                    "name": "X-Expires-After",
                    "schema": {
                      "type": "number",
                    },
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "X-Expires-After",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "X-Expires-After",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Expires-After",
                  "kind": "response-header",
                },
              },
              "X-Rate-Limit" => {
                "added": {
                  "description": "calls per hour allowed by the user",
                  "name": "X-Rate-Limit",
                  "schema": {
                    "format": "int32",
                    "type": "integer",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "X-Rate-Limit",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "X-Rate-Limit",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Rate-Limit",
                  "kind": "response-header",
                },
              },
              "content-type" => {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "content-type",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "content-type",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/content-type",
                  "kind": "response-header",
                },
                "removed": {
                  "before": {
                    "description": "the description goes here",
                    "name": "content-type",
                    "schema": {
                      "type": "string",
                    },
                  },
                },
              },
            },
            "hasRules": false,
          },
          "statusCode": "200",
        },
      },
    },
    "GET-~_~-/user/{username}" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "get",
      "path": "/user/{username}",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {},
        "change": null,
        "hasRules": false,
      },
      "responses": Map {
        "200" => {
          "change": null,
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "contentType": "application/json",
                    "flatSchema": {
                      "example": {
                        "email": "hello@123.com",
                        "id": 12,
                        "lastName": "me",
                        "userStatus": 2,
                      },
                      "type": "object",
                      "xml": {
                        "name": "User",
                      },
                    },
                  },
                  "before": {
                    "contentType": "application/json",
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "User",
                      },
                    },
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "bio",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/bio",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "lastName",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/lastName",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "phone",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/phone",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "phone",
                      "required": false,
                    },
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "userStatus",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/userStatus",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "username",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/json",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/username",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/user/{username}",
                },
                "conceptualPath": [
                  "operations",
                  "/user/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                ],
                "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json",
                "kind": "body",
              },
            },
            "application/xml" => {
              "bodyChange": null,
              "exampleChanges": [
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "contentType": "application/xml",
                      "email": "hello@123.com",
                      "id": 12,
                      "lastName": "me",
                      "name": "One",
                      "userStatus": 2,
                    },
                    "before": {
                      "contentType": "application/xml",
                      "email": "hello@123.com",
                      "id": 12,
                      "lastName": "me",
                      "name": "One",
                      "userStatus": 1,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "method": "get",
                      "name": "One",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "examples",
                      "One",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/examples/One",
                    "kind": "body-example",
                  },
                },
              ],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "bio",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/bio",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "lastName",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/lastName",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "phone",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/phone",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "phone",
                      "required": false,
                    },
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "userStatus",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/userStatus",
                    "kind": "field",
                  },
                },
                {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/xml",
                        },
                        "statusCode": "200",
                      },
                      "jsonSchemaTrail": [
                        "username",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "200",
                      "application/xml",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/username",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "method": "get",
                  "path": "/user/{username}",
                },
                "conceptualPath": [
                  "operations",
                  "/user/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "200",
        },
        "404" => {
          "change": null,
          "contentTypes": Map {
            "application/json" => {
              "bodyChange": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "get",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "get",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json",
                  "kind": "body",
                },
              },
              "exampleChanges": [],
              "fieldChanges": [
                {
                  "added": {
                    "flatSchema": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "code",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "code",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "404",
                      "application/json",
                      "code",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/code",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "message",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "message",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "404",
                      "application/json",
                      "message",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/message",
                    "kind": "field",
                  },
                },
                {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "type",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inResponse": {
                        "body": {
                          "contentType": "application/json",
                        },
                        "statusCode": "404",
                      },
                      "jsonSchemaTrail": [
                        "type",
                      ],
                      "method": "get",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "get",
                      "responses",
                      "404",
                      "application/json",
                      "type",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/type",
                    "kind": "field",
                  },
                },
              ],
              "hasRules": false,
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "404",
                  },
                  "method": "get",
                  "path": "/user/{username}",
                },
                "conceptualPath": [
                  "operations",
                  "/user/{}",
                  "get",
                  "responses",
                  "404",
                  "application/json",
                ],
                "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json",
                "kind": "body",
              },
            },
          },
          "hasRules": false,
          "headers": {
            "changes": Map {},
            "hasRules": false,
          },
          "statusCode": "404",
        },
      },
    },
    "PUT-~_~-/user/{username}" => {
      "change": null,
      "cookieParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "hasRules": false,
      "headers": {
        "changes": Map {},
        "hasRules": false,
      },
      "method": "put",
      "path": "/user/{username}",
      "pathParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "queryParameters": {
        "changes": Map {},
        "hasRules": false,
      },
      "request": {
        "bodyChanges": Map {
          "*/*" => {
            "bodyChange": null,
            "exampleChanges": [],
            "fieldChanges": [
              {
                "added": {
                  "flatSchema": {
                    "type": "string",
                  },
                  "key": "bio",
                  "required": false,
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "bio",
                    ],
                    "method": "put",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "put",
                    "*/*",
                    "bio",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/bio",
                  "kind": "field",
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": false,
                  },
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": true,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "lastName",
                    ],
                    "method": "put",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "put",
                    "*/*",
                    "lastName",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/lastName",
                  "kind": "field",
                },
              },
              {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "phone",
                    ],
                    "method": "put",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "put",
                    "*/*",
                    "phone",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/phone",
                  "kind": "field",
                },
                "removed": {
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "phone",
                    "required": false,
                  },
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "description": "User Status",
                      "enum": [
                        "activation-pending",
                        "activated",
                        "blocked",
                      ],
                      "type": "string",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                  "before": {
                    "flatSchema": {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "userStatus",
                    ],
                    "method": "put",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "put",
                    "*/*",
                    "userStatus",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/userStatus",
                  "kind": "field",
                },
              },
              {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": true,
                  },
                  "before": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": false,
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inRequest": {
                      "body": {
                        "contentType": "*/*",
                      },
                    },
                    "jsonSchemaTrail": [
                      "username",
                    ],
                    "method": "put",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "put",
                    "*/*",
                    "username",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/username",
                  "kind": "field",
                },
              },
            ],
            "hasRules": false,
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "body": {
                    "contentType": "*/*",
                  },
                },
                "method": "put",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "put",
                "*/*",
              ],
              "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*",
              "kind": "body",
            },
          },
        },
        "change": null,
        "hasRules": false,
      },
      "responses": Map {},
    },
  },
  "specification": {
    "changes": [
      {
        "changeType": "changed",
        "changed": {
          "after": {
            "externalDocs": {
              "description": "Find out more about Swagger",
              "url": "http://swagger.io",
            },
            "info": {
              "contact": {
                "email": "apiteam@swagger.io",
              },
              "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
              "license": {
                "name": "Apache 2.0",
                "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
              },
              "termsOfService": "http://swagger.io/terms/",
              "title": "Swagger Petstore Updated",
              "version": "1.0.0",
            },
            "openapi": "3.0.1",
            "servers": [
              {
                "url": "https://petstore.swagger.io/v2",
              },
              {
                "url": "http://petstore.swagger.io/v2",
              },
              {
                "url": "http://petstore.swagger.io/v3",
              },
            ],
            "tags": [
              {
                "description": "Everything about your Pets",
                "externalDocs": {
                  "description": "Find out more",
                  "url": "http://swagger.io",
                },
                "name": "pet",
              },
              {
                "description": "Access to Petstore orders",
                "name": "store",
              },
              {
                "description": "Operations about user",
                "externalDocs": {
                  "description": "Find out more about our store",
                  "url": "http://swagger.io",
                },
                "name": "user",
              },
            ],
          },
          "before": {
            "externalDocs": {
              "description": "Find out more about Swagger",
              "url": "http://swagger.io",
            },
            "info": {
              "contact": {
                "email": "apiteam@swagger.io",
              },
              "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
              "license": {
                "name": "Apache 2.0",
                "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
              },
              "termsOfService": "http://swagger.io/terms/",
              "title": "Swagger Petstore",
              "version": "1.0.0",
            },
            "openapi": "3.0.1",
            "servers": [
              {
                "url": "https://petstore.swagger.io/v2",
              },
              {
                "url": "http://petstore.swagger.io/v2",
              },
            ],
            "tags": [
              {
                "description": "Everything about your Pets",
                "externalDocs": {
                  "description": "Find out more",
                  "url": "http://swagger.io",
                },
                "name": "pet",
              },
              {
                "description": "Access to Petstore orders",
                "name": "store",
              },
              {
                "description": "Operations about user",
                "externalDocs": {
                  "description": "Find out more about our store",
                  "url": "http://swagger.io",
                },
                "name": "user",
              },
            ],
          },
        },
        "location": {
          "conceptualLocation": {},
          "conceptualPath": [],
          "jsonPath": "",
          "kind": "specification",
        },
      },
    ],
    "hasRules": false,
  },
}
`;
