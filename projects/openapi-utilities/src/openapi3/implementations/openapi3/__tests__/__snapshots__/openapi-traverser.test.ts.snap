// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can extract body example facts from specs 1`] = `
[
  {
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": {
      "info": {
        "title": "Simple API overview",
        "version": "2.0.0",
      },
      "openapi": "3.0.0",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/",
      },
      "conceptualPath": [
        "operations",
        "/",
        "get",
      ],
      "jsonPath": "/paths/~1/get",
      "kind": "operation",
    },
    "value": {
      "method": "get",
      "operationId": "listVersionsv2",
      "pathPattern": "/",
      "summary": "List API versions",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "name": "foo",
        "path": "/",
      },
      "conceptualPath": [
        "operations",
        "/",
        "get",
        "responses",
        "200",
        "application/json",
        "examples",
        "foo",
      ],
      "jsonPath": "/paths/~1/get/responses/200/content/application~1json/examples/foo",
      "kind": "body-example",
    },
    "value": {
      "contentType": "application/json",
      "name": "foo",
      "value": {
        "versions": [
          {
            "id": "v2.0",
            "links": [
              {
                "href": "http://127.0.0.1:8774/v2/",
                "rel": "self",
              },
            ],
            "status": "CURRENT",
            "updated": "2011-01-21T11:33:21Z",
          },
          {
            "id": "v3.0",
            "links": [
              {
                "href": "http://127.0.0.1:8774/v3/",
                "rel": "self",
              },
            ],
            "status": "EXPERIMENTAL",
            "updated": "2013-07-23T11:33:21Z",
          },
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/",
      },
      "conceptualPath": [
        "operations",
        "/",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1/get/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "200 response",
      "statusCode": "200",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "300",
        },
        "method": "get",
        "name": "foo",
        "path": "/",
      },
      "conceptualPath": [
        "operations",
        "/",
        "get",
        "responses",
        "300",
        "application/json",
        "examples",
        "foo",
      ],
      "jsonPath": "/paths/~1/get/responses/300/content/application~1json/examples/foo",
      "kind": "body-example",
    },
    "value": {
      "contentType": "application/json",
      "name": "foo",
      "value": "{
 "versions": [
       {
         "status": "CURRENT",
         "updated": "2011-01-21T11:33:21Z",
         "id": "v2.0",
         "links": [
             {
                 "href": "http://127.0.0.1:8774/v2/",
                 "rel": "self"
             }
         ]
     },
     {
         "status": "EXPERIMENTAL",
         "updated": "2013-07-23T11:33:21Z",
         "id": "v3.0",
         "links": [
             {
                 "href": "http://127.0.0.1:8774/v3/",
                 "rel": "self"
             }
         ]
     }
 ]
}
",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "300",
        },
        "method": "get",
        "path": "/",
      },
      "conceptualPath": [
        "operations",
        "/",
        "get",
        "responses",
        "300",
      ],
      "jsonPath": "/paths/~1/get/responses/300",
      "kind": "response",
    },
    "value": {
      "description": "300 response",
      "statusCode": "300",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/v2",
      },
      "conceptualPath": [
        "operations",
        "/v2",
        "get",
      ],
      "jsonPath": "/paths/~1v2/get",
      "kind": "operation",
    },
    "value": {
      "method": "get",
      "operationId": "getVersionDetailsv2",
      "pathPattern": "/v2",
      "summary": "Show API version details",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "name": "foo",
        "path": "/v2",
      },
      "conceptualPath": [
        "operations",
        "/v2",
        "get",
        "responses",
        "200",
        "application/json",
        "examples",
        "foo",
      ],
      "jsonPath": "/paths/~1v2/get/responses/200/content/application~1json/examples/foo",
      "kind": "body-example",
    },
    "value": {
      "contentType": "application/json",
      "name": "foo",
      "value": {
        "version": {
          "id": "v2.0",
          "links": [
            {
              "href": "http://127.0.0.1:8774/v2/",
              "rel": "self",
            },
            {
              "href": "http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf",
              "rel": "describedby",
              "type": "application/pdf",
            },
            {
              "href": "http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl",
              "rel": "describedby",
              "type": "application/vnd.sun.wadl+xml",
            },
            {
              "href": "http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl",
              "rel": "describedby",
              "type": "application/vnd.sun.wadl+xml",
            },
          ],
          "media-types": [
            {
              "base": "application/xml",
              "type": "application/vnd.openstack.compute+xml;version=2",
            },
            {
              "base": "application/json",
              "type": "application/vnd.openstack.compute+json;version=2",
            },
          ],
          "status": "CURRENT",
          "updated": "2011-01-21T11:33:21Z",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v2",
      },
      "conceptualPath": [
        "operations",
        "/v2",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1v2/get/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "200 response",
      "statusCode": "200",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "203",
        },
        "method": "get",
        "name": "foo",
        "path": "/v2",
      },
      "conceptualPath": [
        "operations",
        "/v2",
        "get",
        "responses",
        "203",
        "application/json",
        "examples",
        "foo",
      ],
      "jsonPath": "/paths/~1v2/get/responses/203/content/application~1json/examples/foo",
      "kind": "body-example",
    },
    "value": {
      "contentType": "application/json",
      "name": "foo",
      "value": {
        "version": {
          "id": "v2.0",
          "links": [
            {
              "href": "http://23.253.228.211:8774/v2/",
              "rel": "self",
            },
            {
              "href": "http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf",
              "rel": "describedby",
              "type": "application/pdf",
            },
            {
              "href": "http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl",
              "rel": "describedby",
              "type": "application/vnd.sun.wadl+xml",
            },
          ],
          "media-types": [
            {
              "base": "application/xml",
              "type": "application/vnd.openstack.compute+xml;version=2",
            },
            {
              "base": "application/json",
              "type": "application/vnd.openstack.compute+json;version=2",
            },
          ],
          "status": "CURRENT",
          "updated": "2011-01-21T11:33:21Z",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "203",
        },
        "method": "get",
        "path": "/v2",
        "singular": true,
      },
      "conceptualPath": [
        "operations",
        "/v2",
        "get",
        "responses",
        "203",
        "application/json",
        "example",
      ],
      "jsonPath": "/paths/~1v2/get/responses/203/content/application~1json/example",
      "kind": "body-example",
    },
    "value": {
      "contentType": "application/json",
      "name": undefined,
      "value": {
        "id": "v2.0",
        "links": [
          {
            "href": "http://23.253.228.211:8774/v2/",
            "rel": "self",
          },
          {
            "href": "http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf",
            "rel": "describedby",
            "type": "application/pdf",
          },
          {
            "href": "http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl",
            "rel": "describedby",
            "type": "application/vnd.sun.wadl+xml",
          },
        ],
        "media-types": [
          {
            "base": "application/xml",
            "type": "application/vnd.openstack.compute+xml;version=2",
          },
          {
            "base": "application/json",
            "type": "application/vnd.openstack.compute+json;version=2",
          },
        ],
        "status": "CURRENT",
        "updated": "2011-01-21T11:33:21Z",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "203",
        },
        "method": "get",
        "path": "/v2",
      },
      "conceptualPath": [
        "operations",
        "/v2",
        "get",
        "responses",
        "203",
      ],
      "jsonPath": "/paths/~1v2/get/responses/203",
      "kind": "response",
    },
    "value": {
      "description": "203 response",
      "statusCode": "203",
    },
  },
]
`;

exports[`can extract component schema example facts from specs 1`] = `
[
  {
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": {
      "info": {
        "title": "Simple API overview",
        "version": "2.0.0",
      },
      "openapi": "3.0.0",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inComponentSchema": {
          "schemaName": "ObjectSchema",
        },
      },
      "conceptualPath": [
        "components",
        "schemas",
        "ObjectSchema",
        "example",
      ],
      "jsonPath": "/components/schemas/ObjectSchema/example",
      "kind": "component-schema-example",
    },
    "value": {
      "version": {
        "id": "v2.0",
        "links": [
          {
            "href": "http://127.0.0.1:8774/v2/",
            "rel": "self",
          },
          {
            "href": "http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf",
            "rel": "describedby",
            "type": "application/pdf",
          },
          {
            "href": "http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl",
            "rel": "describedby",
            "type": "application/vnd.sun.wadl+xml",
          },
          {
            "href": "http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl",
            "rel": "describedby",
            "type": "application/vnd.sun.wadl+xml",
          },
        ],
        "media-types": [
          {
            "base": "application/xml",
            "type": "application/vnd.openstack.compute+xml;version=2",
          },
          {
            "base": "application/json",
            "type": "application/vnd.openstack.compute+json;version=2",
          },
        ],
        "status": "CURRENT",
        "updated": "2011-01-21T11:33:21Z",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inComponentSchema": {
          "schemaName": "UntypedSchema",
        },
      },
      "conceptualPath": [
        "components",
        "schemas",
        "UntypedSchema",
        "example",
      ],
      "jsonPath": "/components/schemas/UntypedSchema/example",
      "kind": "component-schema-example",
    },
    "value": {
      "version": {
        "id": "v2.0",
        "links": [
          {
            "href": "http://127.0.0.1:8774/v2/",
            "rel": "self",
          },
          {
            "href": "http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf",
            "rel": "describedby",
            "type": "application/pdf",
          },
          {
            "href": "http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl",
            "rel": "describedby",
            "type": "application/vnd.sun.wadl+xml",
          },
          {
            "href": "http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl",
            "rel": "describedby",
            "type": "application/vnd.sun.wadl+xml",
          },
        ],
        "media-types": [
          {
            "base": "application/xml",
            "type": "application/vnd.openstack.compute+xml;version=2",
          },
          {
            "base": "application/json",
            "type": "application/vnd.openstack.compute+json;version=2",
          },
        ],
        "status": "CURRENT",
        "updated": "2011-01-21T11:33:21Z",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inComponentSchema": {
          "schemaName": "MistypedSchema",
        },
      },
      "conceptualPath": [
        "components",
        "schemas",
        "MistypedSchema",
        "example",
      ],
      "jsonPath": "/components/schemas/MistypedSchema/example",
      "kind": "component-schema-example",
    },
    "value": 31,
  },
]
`;

exports[`can extract facts from specs 1`] = `
[
  {
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": {
      "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io",
      },
      "info": {
        "contact": {
          "email": "apiteam@swagger.io",
        },
        "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
        "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
        },
        "termsOfService": "http://swagger.io/terms/",
        "title": "Swagger Petstore",
        "version": "1.0.0",
      },
      "openapi": "3.0.1",
      "servers": [
        {
          "url": "https://petstore.swagger.io/v2",
        },
        {
          "url": "http://petstore.swagger.io/v2",
        },
      ],
      "tags": [
        {
          "description": "Everything about your Pets",
          "externalDocs": {
            "description": "Find out more",
            "url": "http://swagger.io",
          },
          "name": "pet",
        },
        {
          "description": "Access to Petstore orders",
          "name": "store",
        },
        {
          "description": "Operations about user",
          "externalDocs": {
            "description": "Find out more about our store",
            "url": "http://swagger.io",
          },
          "name": "user",
        },
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post",
      "kind": "operation",
    },
    "value": {
      "method": "post",
      "operationId": "uploadFile",
      "pathPattern": "/pet/{petId}/uploadImage",
      "security": [
        {
          "petstore_auth": [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "uploads an image",
      "tags": [
        "pet",
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "path": "petId",
        },
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "parameters",
        "path",
        "petId",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/parameters/0",
      "kind": "path-parameter",
    },
    "value": {
      "description": "ID of pet to update",
      "in": "path",
      "name": "petId",
      "required": true,
      "schema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "cookie": "debug",
        },
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "parameters",
        "cookie",
        "debug",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/parameters/1",
      "kind": "cookie-parameter",
    },
    "value": {
      "description": "A debug token",
      "in": "cookie",
      "name": "debug",
      "schema": {
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inRequest": {
          "body": {
            "contentType": "multipart/form-data",
          },
        },
        "jsonSchemaTrail": [],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "multipart/form-data",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/requestBody/content/multipart~1form-data/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {},
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "multipart/form-data",
          },
        },
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "multipart/form-data",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/requestBody/content/multipart~1form-data",
      "kind": "body",
    },
    "value": {
      "contentType": "multipart/form-data",
      "flatSchema": {},
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {},
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "requestBody",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/requestBody",
      "kind": "request",
    },
    "value": {},
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "code",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "code",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "code",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/code",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "code",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "code",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/code",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
      "key": "code",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "type",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "type",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "type",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/type",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "type",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "type",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/type",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "type",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "message",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "message",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "message",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/message",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "message",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "message",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/message",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "message",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/store/inventory",
      },
      "conceptualPath": [
        "operations",
        "/store/inventory",
        "get",
      ],
      "jsonPath": "/paths/~1store~1inventory/get",
      "kind": "operation",
    },
    "value": {
      "description": "Returns a map of status codes to quantities",
      "method": "get",
      "operationId": "getInventory",
      "pathPattern": "/store/inventory",
      "security": [
        {
          "api_key": [],
        },
      ],
      "summary": "Returns pet inventories by status",
      "tags": [
        "store",
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/store/inventory",
      },
      "conceptualPath": [
        "operations",
        "/store/inventory",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1inventory/get/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "additionalProperties": {
          "format": "int32",
          "type": "integer",
        },
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/inventory",
      },
      "conceptualPath": [
        "operations",
        "/store/inventory",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1inventory/get/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "additionalProperties": {
          "format": "int32",
          "type": "integer",
        },
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/inventory",
      },
      "conceptualPath": [
        "operations",
        "/store/inventory",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1store~1inventory/get/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
      ],
      "jsonPath": "/paths/~1store~1order/post",
      "kind": "operation",
    },
    "value": {
      "method": "post",
      "operationId": "placeOrder",
      "pathPattern": "/store/order",
      "summary": "Place an order for a pet",
      "tags": [
        "store",
      ],
      "x-codegen-request-body-name": "body",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*",
      "kind": "body",
    },
    "value": {
      "contentType": "*/*",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "petId",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/petId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/petId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "quantity",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/quantity",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/quantity",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "shipDate",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/shipDate",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/shipDate",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "status",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/status",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/status",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "complete",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/complete",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "*/*",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/complete",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {},
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "requestBody",
      ],
      "jsonPath": "/paths/~1store~1order/post/requestBody",
      "kind": "request",
    },
    "value": {
      "description": "order placed for purchasing the pet",
      "required": true,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml",
      "kind": "body",
    },
    "value": {
      "contentType": "application/xml",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "petId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/petId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/petId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "quantity",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/quantity",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/quantity",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "shipDate",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/shipDate",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/shipDate",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "status",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/status",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/status",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "complete",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/complete",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/complete",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "petId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/petId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/petId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "quantity",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/quantity",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/quantity",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "shipDate",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/shipDate",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/shipDate",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "status",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/status",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/status",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "complete",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/complete",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/complete",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "400",
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": [
        "operations",
        "/store/order",
        "post",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/400",
      "kind": "response",
    },
    "value": {
      "description": "Invalid Order",
      "statusCode": "400",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get",
      "kind": "operation",
    },
    "value": {
      "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
      "method": "get",
      "operationId": "getOrderById",
      "pathPattern": "/store/order/{orderId}",
      "summary": "Find purchase order by ID",
      "tags": [
        "store",
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "path": "orderId",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "parameters",
        "path",
        "orderId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": {
      "description": "ID of pet that needs to be fetched",
      "in": "path",
      "name": "orderId",
      "required": true,
      "schema": {
        "format": "int64",
        "maximum": 10,
        "minimum": 1,
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml",
      "kind": "body",
    },
    "value": {
      "contentType": "application/xml",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "petId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "quantity",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "shipDate",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "status",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "complete",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "Order",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "petId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "petId",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "quantity",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "quantity",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "shipDate",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "shipDate",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "status",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "status",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "Order Status",
        "enum": [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "complete",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "complete",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/400",
      "kind": "response",
    },
    "value": {
      "description": "Invalid ID supplied",
      "statusCode": "400",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "404",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404",
      "kind": "response",
    },
    "value": {
      "description": "Order not found",
      "statusCode": "404",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "delete",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "delete",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/delete",
      "kind": "operation",
    },
    "value": {
      "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
      "method": "delete",
      "operationId": "deleteOrder",
      "pathPattern": "/store/order/{orderId}",
      "summary": "Delete purchase order by ID",
      "tags": [
        "store",
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "path": "orderId",
        },
        "method": "delete",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "delete",
        "parameters",
        "path",
        "orderId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/parameters/0",
      "kind": "path-parameter",
    },
    "value": {
      "description": "ID of the order that needs to be deleted",
      "in": "path",
      "name": "orderId",
      "required": true,
      "schema": {
        "format": "int64",
        "minimum": 1,
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "400",
        },
        "method": "delete",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "delete",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/400",
      "kind": "response",
    },
    "value": {
      "description": "Invalid ID supplied",
      "statusCode": "400",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "404",
        },
        "method": "delete",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": [
        "operations",
        "/store/order/{}",
        "delete",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404",
      "kind": "response",
    },
    "value": {
      "description": "Order not found",
      "statusCode": "404",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
      ],
      "jsonPath": "/paths/~1user/post",
      "kind": "operation",
    },
    "value": {
      "description": "This can only be done by the logged in user.",
      "method": "post",
      "operationId": "createUser",
      "pathPattern": "/user",
      "summary": "Create user",
      "tags": [
        "user",
      ],
      "x-codegen-request-body-name": "body",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*",
      "kind": "body",
    },
    "value": {
      "contentType": "*/*",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "id",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "id",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "username",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "username",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "username",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/username",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "username",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "username",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/username",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "username",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "firstName",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "firstName",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "firstName",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/firstName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "firstName",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "firstName",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/firstName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "firstName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "lastName",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "lastName",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "lastName",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/lastName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "lastName",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "lastName",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/lastName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "lastName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "email",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "email",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "email",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/email",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "email",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "email",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/email",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "email",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "password",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "password",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "password",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/password",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "password",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "password",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/password",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "password",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "phone",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "phone",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "phone",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/phone",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "phone",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "phone",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/phone",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "phone",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "userStatus",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "userStatus",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/userStatus",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "userStatus",
        ],
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "*/*",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/userStatus",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
      "key": "userStatus",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {},
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "requestBody",
      ],
      "jsonPath": "/paths/~1user/post/requestBody",
      "kind": "request",
    },
    "value": {
      "description": "Created user object",
      "required": true,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "default",
        },
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": [
        "operations",
        "/user",
        "post",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1user/post/responses/default",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "default",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post",
      "kind": "operation",
    },
    "value": {
      "method": "post",
      "operationId": "createUsersWithArrayInput",
      "pathPattern": "/user/createWithArray",
      "summary": "Creates list of users with given input array",
      "tags": [
        "user",
      ],
      "x-codegen-request-body-name": "body",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "array",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*",
      "kind": "body",
    },
    "value": {
      "contentType": "*/*",
      "flatSchema": {
        "type": "array",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "array",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "id",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "id",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "username",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "username",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "username",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/username",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "username",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "username",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/username",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "username",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "firstName",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "firstName",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/firstName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "firstName",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/firstName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "firstName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "lastName",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "lastName",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/lastName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "lastName",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/lastName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "lastName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "email",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "email",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "email",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/email",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "email",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "email",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/email",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "email",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "password",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "password",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "password",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/password",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "password",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "password",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/password",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "password",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "phone",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "phone",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/phone",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "phone",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/phone",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "phone",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "userStatus",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "userStatus",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/userStatus",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "userStatus",
        ],
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "*/*",
        "items",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/userStatus",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
      "key": "userStatus",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {},
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "requestBody",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/requestBody",
      "kind": "request",
    },
    "value": {
      "description": "List of user object",
      "required": true,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "default",
        },
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithArray",
        "post",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/responses/default",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "default",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post",
      "kind": "operation",
    },
    "value": {
      "method": "post",
      "operationId": "createUsersWithListInput",
      "pathPattern": "/user/createWithList",
      "summary": "Creates list of users with given input array",
      "tags": [
        "user",
      ],
      "x-codegen-request-body-name": "body",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "array",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*",
      "kind": "body",
    },
    "value": {
      "contentType": "*/*",
      "flatSchema": {
        "type": "array",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "array",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "id",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "id",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "username",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "username",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "username",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/username",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "username",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "username",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/username",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "username",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "firstName",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "firstName",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/firstName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "firstName",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/firstName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "firstName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "lastName",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "lastName",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/lastName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "lastName",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/lastName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "lastName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "email",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "email",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "email",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/email",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "email",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "email",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/email",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "email",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "password",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "password",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "password",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/password",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "password",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "password",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/password",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "password",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "phone",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "phone",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/phone",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "phone",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/phone",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "phone",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "userStatus",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "userStatus",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/userStatus",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "items",
          "userStatus",
        ],
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "*/*",
        "items",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/userStatus",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
      "key": "userStatus",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {},
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "requestBody",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/requestBody",
      "kind": "request",
    },
    "value": {
      "description": "List of user object",
      "required": true,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "default",
        },
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": [
        "operations",
        "/user/createWithList",
        "post",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/responses/default",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "default",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
      ],
      "jsonPath": "/paths/~1user~1login/get",
      "kind": "operation",
    },
    "value": {
      "method": "get",
      "operationId": "loginUser",
      "pathPattern": "/user/login",
      "summary": "Logs user into the system",
      "tags": [
        "user",
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "query": "username",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "parameters",
        "query",
        "username",
      ],
      "jsonPath": "/paths/~1user~1login/get/parameters/0",
      "kind": "query-parameter",
    },
    "value": {
      "description": "The user name for login",
      "in": "query",
      "name": "username",
      "required": true,
      "schema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "query": "password",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "parameters",
        "query",
        "password",
      ],
      "jsonPath": "/paths/~1user~1login/get/parameters/1",
      "kind": "query-parameter",
    },
    "value": {
      "description": "The password for login in clear text",
      "in": "query",
      "name": "password",
      "required": true,
      "schema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "header": "X-Rate-Limit",
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "headers",
        "X-Rate-Limit",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Rate-Limit",
      "kind": "response-header",
    },
    "value": {
      "description": "calls per hour allowed by the user",
      "name": "X-Rate-Limit",
      "schema": {
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "header": "X-Expires-After",
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "headers",
        "X-Expires-After",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Expires-After",
      "kind": "response-header",
    },
    "value": {
      "description": "date in UTC when token expires",
      "name": "X-Expires-After",
      "schema": {
        "format": "date-time",
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200/content/application~1xml/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200/content/application~1xml",
      "kind": "body",
    },
    "value": {
      "contentType": "application/xml",
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": [
        "operations",
        "/user/login",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/400",
      "kind": "response",
    },
    "value": {
      "description": "Invalid username/password supplied",
      "statusCode": "400",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/user/logout",
      },
      "conceptualPath": [
        "operations",
        "/user/logout",
        "get",
      ],
      "jsonPath": "/paths/~1user~1logout/get",
      "kind": "operation",
    },
    "value": {
      "method": "get",
      "operationId": "logoutUser",
      "pathPattern": "/user/logout",
      "summary": "Logs out current logged in user session",
      "tags": [
        "user",
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "default",
        },
        "method": "get",
        "path": "/user/logout",
      },
      "conceptualPath": [
        "operations",
        "/user/logout",
        "get",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1user~1logout/get/responses/default",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "default",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
      ],
      "jsonPath": "/paths/~1user~1{username}/get",
      "kind": "operation",
    },
    "value": {
      "method": "get",
      "operationId": "getUserByName",
      "pathPattern": "/user/{username}",
      "summary": "Get user by user name",
      "tags": [
        "user",
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "path": "username",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "parameters",
        "path",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": {
      "description": "The name that needs to be fetched. Use user1 for testing. ",
      "in": "path",
      "name": "username",
      "required": true,
      "schema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml",
      "kind": "body",
    },
    "value": {
      "contentType": "application/xml",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "username",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "username",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/username",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "username",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/username",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "username",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "firstName",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "firstName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/firstName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "firstName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/firstName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "firstName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "lastName",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "lastName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/lastName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "lastName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/lastName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "lastName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "email",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "email",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "email",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/email",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "email",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "email",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/email",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "email",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "password",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "password",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "password",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/password",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "password",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "password",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/password",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "password",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "phone",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "phone",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/phone",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "phone",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/phone",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "phone",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "userStatus",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "userStatus",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/userStatus",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "userStatus",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/userStatus",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
      "key": "userStatus",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "username",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "username",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/username",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "username",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/username",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "username",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "firstName",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "firstName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/firstName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "firstName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/firstName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "firstName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "lastName",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "lastName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/lastName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "lastName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/lastName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "lastName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "email",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "email",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "email",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/email",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "email",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "email",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/email",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "email",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "password",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "password",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "password",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/password",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "password",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "password",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/password",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "password",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "phone",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "phone",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/phone",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "phone",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/phone",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "phone",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "userStatus",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "userStatus",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/userStatus",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "userStatus",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/userStatus",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
      "key": "userStatus",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/400",
      "kind": "response",
    },
    "value": {
      "description": "Invalid username supplied",
      "statusCode": "400",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "404",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/404",
      "kind": "response",
    },
    "value": {
      "description": "User not found",
      "statusCode": "404",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
      ],
      "jsonPath": "/paths/~1user~1{username}/put",
      "kind": "operation",
    },
    "value": {
      "description": "This can only be done by the logged in user.",
      "method": "put",
      "operationId": "updateUser",
      "pathPattern": "/user/{username}",
      "summary": "Updated user",
      "tags": [
        "user",
      ],
      "x-codegen-request-body-name": "body",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "path": "username",
        },
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "parameters",
        "path",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/parameters/0",
      "kind": "path-parameter",
    },
    "value": {
      "description": "name that need to be updated",
      "in": "path",
      "name": "username",
      "required": true,
      "schema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*",
      "kind": "body",
    },
    "value": {
      "contentType": "*/*",
      "flatSchema": {
        "type": "object",
        "xml": {
          "name": "User",
        },
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "id",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "id",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "id",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "username",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "username",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/username",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "username",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/username",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "username",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "firstName",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "firstName",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/firstName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "firstName",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/firstName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "firstName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "lastName",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "lastName",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/lastName",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "lastName",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/lastName",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "lastName",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "email",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "email",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "email",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/email",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "email",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "email",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/email",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "email",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "password",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "password",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "password",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/password",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "password",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "password",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/password",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "password",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "phone",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "phone",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/phone",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "phone",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/phone",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "phone",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "userStatus",
          "required": false,
          "type": "field",
        },
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "userStatus",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/userStatus",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "body": {
            "contentType": "*/*",
          },
        },
        "jsonSchemaTrail": [
          "userStatus",
        ],
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "*/*",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/userStatus",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
      "key": "userStatus",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {},
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "requestBody",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/requestBody",
      "kind": "request",
    },
    "value": {
      "description": "Updated user object",
      "required": true,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "400",
        },
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/responses/400",
      "kind": "response",
    },
    "value": {
      "description": "Invalid user supplied",
      "statusCode": "400",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "404",
        },
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "put",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/responses/404",
      "kind": "response",
    },
    "value": {
      "description": "User not found",
      "statusCode": "404",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "delete",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "delete",
      ],
      "jsonPath": "/paths/~1user~1{username}/delete",
      "kind": "operation",
    },
    "value": {
      "description": "This can only be done by the logged in user.",
      "method": "delete",
      "operationId": "deleteUser",
      "pathPattern": "/user/{username}",
      "summary": "Delete user",
      "tags": [
        "user",
      ],
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inRequest": {
          "path": "username",
        },
        "method": "delete",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "delete",
        "parameters",
        "path",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/delete/parameters/0",
      "kind": "path-parameter",
    },
    "value": {
      "description": "The name that needs to be deleted",
      "in": "path",
      "name": "username",
      "required": true,
      "schema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "400",
        },
        "method": "delete",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "delete",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1user~1{username}/delete/responses/400",
      "kind": "response",
    },
    "value": {
      "description": "Invalid username supplied",
      "statusCode": "400",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "404",
        },
        "method": "delete",
        "path": "/user/{username}",
      },
      "conceptualPath": [
        "operations",
        "/user/{}",
        "delete",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1user~1{username}/delete/responses/404",
      "kind": "response",
    },
    "value": {
      "description": "User not found",
      "statusCode": "404",
    },
  },
]
`;

exports[`handles example schemas as strings 1`] = `
[
  {
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.0.1",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "patch",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "patch",
      ],
      "jsonPath": "/paths/~1example/patch",
      "kind": "operation",
    },
    "value": {
      "method": "patch",
      "pathPattern": "/example",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "patch",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "patch",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1example/patch/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "patch",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "patch",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1example/patch/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "patch",
        "path": "/example",
        "singular": true,
      },
      "conceptualPath": [
        "operations",
        "/example",
        "patch",
        "responses",
        "200",
        "application/json",
        "example",
      ],
      "jsonPath": "/paths/~1example/patch/responses/200/content/application~1json/example",
      "kind": "body-example",
    },
    "value": {
      "contentType": "application/json",
      "name": undefined,
      "value": "hello",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "patch",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "patch",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1example/patch/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "hello",
      "statusCode": "200",
    },
  },
]
`;

exports[`will extract facts for oneOf, allOf or anyOf schemas 1`] = `
[
  {
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": {
      "info": {
        "contact": {
          "email": "apiteam@swagger.io",
        },
        "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
        },
        "termsOfService": "http://swagger.io/terms/",
        "title": "Simple",
        "version": "0.0.0",
      },
      "openapi": "3.0.1",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
      ],
      "jsonPath": "/paths/~1example/get",
      "kind": "operation",
    },
    "value": {
      "method": "get",
      "operationId": "getExamples",
      "pathPattern": "/example",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "stringOrNumberOrObject",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "oneOf": [
          {
            "type": "string",
          },
          {
            "type": "number",
          },
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "oneOf": [
          {
            "type": "string",
          },
          {
            "type": "number",
          },
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
        ],
      },
      "key": "stringOrNumberOrObject",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "oneOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "0",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/0",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "oneOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "1",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/1",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "number",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "oneOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "2",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "orderId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "2",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2/properties/orderId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "2",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2/properties/orderId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "orderId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "composedObject",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "allOf": [
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
          {
            "properties": {
              "fulfillmentId": {
                "nullable": true,
                "type": "string",
              },
            },
            "type": "object",
          },
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "allOf": [
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
          {
            "properties": {
              "fulfillmentId": {
                "nullable": true,
                "type": "string",
              },
            },
            "type": "object",
          },
        ],
      },
      "key": "composedObject",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "allOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "0",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "orderId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "0",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "0",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "orderId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "allOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "1",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "fulfillmentId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
          "fulfillmentId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "1",
        "fulfillmentId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1/properties/fulfillmentId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": [
          "string",
          "null",
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
          "fulfillmentId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "1",
        "fulfillmentId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1/properties/fulfillmentId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": [
          "string",
          "null",
        ],
      },
      "key": "fulfillmentId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "expandableObject",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "anyOf": [
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
          {
            "properties": {
              "order": {
                "properties": {
                  "id": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "anyOf": [
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
          {
            "properties": {
              "order": {
                "properties": {
                  "id": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        ],
      },
      "key": "expandableObject",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "anyOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "0",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "orderId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "0",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0/properties/orderId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "0",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0/properties/orderId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "orderId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "anyOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "order",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "order",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
        "order",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "order",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
        "order",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
      "key": "order",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "order",
          "id",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
        "order",
        "id",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "order",
          "id",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
        "order",
        "id",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1example/get/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "succesful",
      "statusCode": "200",
    },
  },
]
`;

exports[`will work with 3.1 schemas 1`] = `
[
  {
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": {
      "info": {
        "contact": {
          "email": "apiteam@swagger.io",
        },
        "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
        },
        "termsOfService": "http://swagger.io/terms/",
        "title": "Simple",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
      ],
      "jsonPath": "/paths/~1example/get",
      "kind": "operation",
    },
    "value": {
      "method": "get",
      "operationId": "getExamples",
      "pathPattern": "/example",
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "body",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
      "kind": "body",
    },
    "value": {
      "contentType": "application/json",
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "typearray",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "typearray",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "typearray",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/typearray",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "items": {
          "properties": {
            "id": {
              "type": "string",
            },
          },
          "type": "object",
        },
        "type": [
          "object",
          "array",
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "typearray",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "typearray",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/typearray",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "items": {
          "properties": {
            "id": {
              "type": "string",
            },
          },
          "type": "object",
        },
        "type": [
          "object",
          "array",
        ],
      },
      "key": "typearray",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "typearray",
          "id",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "typearray",
        "id",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/typearray/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "typearray",
          "id",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "typearray",
        "id",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/typearray/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "array",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "typearray",
          "items",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "typearray",
        "items",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/typearray/items",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "typearray",
          "items",
          "id",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "typearray",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/typearray/items/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "typearray",
          "items",
          "id",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "typearray",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/typearray/items/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "stringOrNumberOrObject",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "oneOf": [
          {
            "type": "string",
          },
          {
            "type": "number",
          },
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "oneOf": [
          {
            "type": "string",
          },
          {
            "type": "number",
          },
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
        ],
      },
      "key": "stringOrNumberOrObject",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "oneOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "0",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/0",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "oneOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "1",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/1",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "number",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "oneOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "2",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "orderId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "2",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2/properties/orderId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "stringOrNumberOrObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "stringOrNumberOrObject",
        "oneOf",
        "2",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2/properties/orderId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "orderId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "composedObject",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "allOf": [
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
          {
            "properties": {
              "fulfillmentId": {
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "type": "object",
          },
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "allOf": [
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
          {
            "properties": {
              "fulfillmentId": {
                "type": [
                  "string",
                  "null",
                ],
              },
            },
            "type": "object",
          },
        ],
      },
      "key": "composedObject",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "allOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "0",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "orderId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "0",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "0",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "orderId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "allOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "1",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "fulfillmentId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
          "fulfillmentId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "1",
        "fulfillmentId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1/properties/fulfillmentId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": [
          "string",
          "null",
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "composedObject",
          "fulfillmentId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "composedObject",
        "allOf",
        "1",
        "fulfillmentId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1/properties/fulfillmentId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": [
          "string",
          "null",
        ],
      },
      "key": "fulfillmentId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "expandableObject",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "anyOf": [
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
          {
            "properties": {
              "order": {
                "properties": {
                  "id": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        ],
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "anyOf": [
          {
            "properties": {
              "orderId": {
                "type": "string",
              },
            },
            "type": "object",
          },
          {
            "properties": {
              "order": {
                "properties": {
                  "id": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        ],
      },
      "key": "expandableObject",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "anyOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "0",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "orderId",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "0",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0/properties/orderId",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "orderId",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "0",
        "orderId",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0/properties/orderId",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "orderId",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "type": "anyOf",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "order",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "order",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
        "order",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "order",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
        "order",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "object",
      },
      "key": "order",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "context": {
          "key": "id",
          "required": false,
          "type": "field",
        },
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "order",
          "id",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
        "order",
        "id",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order/properties/id",
      "kind": "schema",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "body": {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": [
          "expandableObject",
          "order",
          "id",
        ],
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
        "application/json",
        "expandableObject",
        "anyOf",
        "1",
        "order",
        "id",
      ],
      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order/properties/id",
      "kind": "field",
    },
    "value": {
      "flatSchema": {
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  {
    "location": {
      "conceptualLocation": {
        "inResponse": {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/example",
      },
      "conceptualPath": [
        "operations",
        "/example",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1example/get/responses/200",
      "kind": "response",
    },
    "value": {
      "description": "succesful",
      "statusCode": "200",
    },
  },
]
`;
