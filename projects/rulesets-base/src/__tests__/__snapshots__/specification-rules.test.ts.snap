// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SpecificationRule custom matchers matches failing assertion 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "info": {
          "title": "Empty",
          "version": "0.0.0",
        },
        "openapi": "3.1.0",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "Expected a partial match",
    "exempted": false,
    "expected": "{"info":{"license":{}}}",
    "isMust": true,
    "isShould": false,
    "name": "operation description",
    "passed": false,
    "received": "{"openapi":"3.1.0","paths":{},"info":{"version":"0.0.0","title":"Empty"}}",
    "severity": 2,
    "type": "requirement",
    "where": "specification",
  },
]
`;

exports[`SpecificationRule custom matchers matches inverted assertion 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "info": {
          "title": "Empty",
          "version": "0.0.0",
        },
        "openapi": "3.1.0",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation description",
    "passed": true,
    "received": undefined,
    "severity": 2,
    "type": "requirement",
    "where": "specification",
  },
]
`;

exports[`SpecificationRule custom matchers matches passing assertion 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "info": {
          "license": {
            "name": "MIT",
            "url": "some-url",
          },
          "title": "Empty",
          "version": "0.0.0",
        },
        "openapi": "3.1.0",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation description",
    "passed": true,
    "received": undefined,
    "severity": 2,
    "type": "requirement",
    "where": "specification",
  },
]
`;

exports[`SpecificationRule custom matchers matchesOneOf failing assertion 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "info": {
          "title": "Empty",
          "version": "0.0.0",
        },
        "openapi": "3.1.0",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "Expected at least one partial match",
    "exempted": false,
    "expected": "[{"info":{"license":{}}},{"security":[]}]",
    "isMust": true,
    "isShould": false,
    "name": "operation description",
    "passed": false,
    "received": "{"openapi":"3.1.0","paths":{},"info":{"version":"0.0.0","title":"Empty"}}",
    "severity": 2,
    "type": "requirement",
    "where": "specification",
  },
]
`;

exports[`SpecificationRule custom matchers matchesOneOf inverted assertion 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "info": {
          "title": "Empty",
          "version": "0.0.0",
        },
        "openapi": "3.1.0",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation description",
    "passed": true,
    "received": undefined,
    "severity": 2,
    "type": "requirement",
    "where": "specification",
  },
]
`;

exports[`SpecificationRule custom matchers matchesOneOf passing assertion 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "info": {
          "license": {
            "name": "MIT",
            "url": "some-url",
          },
          "title": "Empty",
          "version": "0.0.0",
        },
        "openapi": "3.1.0",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation description",
    "passed": true,
    "received": undefined,
    "severity": 2,
    "type": "requirement",
    "where": "specification",
  },
]
`;

exports[`SpecificationRule requirement failing assertion 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "info": {
          "title": "Empty",
          "version": "0.0.0",
        },
        "openapi": "3.1.0",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "spec does not have x-stability",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation description",
    "passed": false,
    "received": undefined,
    "severity": 2,
    "type": "requirement",
    "where": "specification",
  },
]
`;

exports[`SpecificationRule requirement passing assertion 1`] = `
[
  {
    "change": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "info": {
          "title": "Empty",
          "version": "0.0.0",
        },
        "openapi": "3.1.0",
        "x-stability": "abc",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "operation description",
    "passed": true,
    "received": undefined,
    "severity": 2,
    "type": "requirement",
    "where": "specification",
  },
]
`;

exports[`SpecificationRule rulesContext after 1`] = `
{
  "custom": {},
  "operation": {
    "change": null,
    "cookieParameters": Map {},
    "headerParameters": Map {},
    "location": {
      "conceptualLocation": {
        "method": "",
        "path": "",
      },
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "operation",
    },
    "method": "",
    "path": "",
    "pathParameters": Map {},
    "polymorphicSchemas": {
      "after": Set {},
      "before": Set {},
    },
    "queryParameters": Map {},
    "raw": {
      "responses": {},
    },
    "requests": [],
    "responses": Map {},
    "security": null,
    "value": {
      "method": "",
      "pathPattern": "",
    },
  },
  "specification": {
    "change": "changed",
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "raw": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
      "paths": {
        "/api/users": {
          "get": {
            "description": "hello",
            "responses": {},
          },
        },
      },
      "servers": [
        {
          "url": "http://optic.com",
        },
      ],
    },
    "value": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
      "servers": [
        {
          "url": "http://optic.com",
        },
      ],
    },
    "versionChange": null,
  },
}
`;

exports[`SpecificationRule rulesContext after is empty spec 1`] = `
{
  "custom": {},
  "operation": {
    "change": null,
    "cookieParameters": Map {},
    "headerParameters": Map {},
    "location": {
      "conceptualLocation": {
        "method": "",
        "path": "",
      },
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "operation",
    },
    "method": "",
    "path": "",
    "pathParameters": Map {},
    "polymorphicSchemas": {
      "after": Set {},
      "before": Set {},
    },
    "queryParameters": Map {},
    "raw": {
      "responses": {},
    },
    "requests": [],
    "responses": Map {},
    "security": null,
    "value": {
      "method": "",
      "pathPattern": "",
    },
  },
  "specification": {
    "change": "removed",
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "raw": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
      "paths": {
        "/api/users": {
          "get": {
            "description": "hello",
            "responses": {},
          },
        },
      },
      "servers": [
        {
          "url": "http://optic.com",
        },
      ],
    },
    "value": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
      "servers": [
        {
          "url": "http://optic.com",
        },
      ],
    },
    "versionChange": null,
  },
}
`;

exports[`SpecificationRule rulesContext before 1`] = `
{
  "custom": {},
  "operation": {
    "change": null,
    "cookieParameters": Map {},
    "headerParameters": Map {},
    "location": {
      "conceptualLocation": {
        "method": "",
        "path": "",
      },
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "operation",
    },
    "method": "",
    "path": "",
    "pathParameters": Map {},
    "polymorphicSchemas": {
      "after": Set {},
      "before": Set {},
    },
    "queryParameters": Map {},
    "raw": {
      "responses": {},
    },
    "requests": [],
    "responses": Map {},
    "security": null,
    "value": {
      "method": "",
      "pathPattern": "",
    },
  },
  "specification": {
    "change": "removed",
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "raw": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
      "paths": {
        "/api/users": {
          "get": {
            "description": "hello",
            "responses": {},
          },
        },
      },
      "servers": [
        {
          "url": "http://optic.com",
        },
      ],
    },
    "value": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
      "servers": [
        {
          "url": "http://optic.com",
        },
      ],
    },
    "versionChange": null,
  },
}
`;

exports[`SpecificationRule rulesContext before is empty spec 1`] = `
{
  "custom": {},
  "operation": {
    "change": null,
    "cookieParameters": Map {},
    "headerParameters": Map {},
    "location": {
      "conceptualLocation": {
        "method": "",
        "path": "",
      },
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "operation",
    },
    "method": "",
    "path": "",
    "pathParameters": Map {},
    "polymorphicSchemas": {
      "after": Set {},
      "before": Set {},
    },
    "queryParameters": Map {},
    "raw": {
      "responses": {},
    },
    "requests": [],
    "responses": Map {},
    "security": null,
    "value": {
      "method": "",
      "pathPattern": "",
    },
  },
  "specification": {
    "change": "added",
    "location": {
      "conceptualLocation": {},
      "conceptualPath": [],
      "jsonPath": "",
      "kind": "specification",
    },
    "raw": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
      "paths": {
        "/api/users": {
          "get": {
            "description": "hello",
            "responses": {},
          },
        },
      },
      "servers": [
        {
          "url": "http://optic.com",
        },
      ],
    },
    "value": {
      "info": {
        "title": "Empty",
        "version": "0.0.0",
      },
      "openapi": "3.1.0",
      "servers": [
        {
          "url": "http://optic.com",
        },
      ],
    },
    "versionChange": null,
  },
}
`;
