// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createOperation with after key 1`] = `
{
  "cookieParameters": Map {},
  "headerParameters": Map {},
  "location": {
    "conceptualLocation": {
      "method": "get",
      "path": "/store/order/{orderId}",
    },
    "conceptualPath": [
      "operations",
      "/store/order/{}",
      "get",
    ],
    "jsonPath": "/paths/~1store~1order~1{orderId}/get",
    "kind": "operation",
  },
  "method": "get",
  "path": "/store/order/{orderId}",
  "pathParameters": Map {
    "orderId" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "orderId",
          },
          "method": "get",
          "path": "/store/order/{orderId}",
        },
        "conceptualPath": [
          "operations",
          "/store/order/{}",
          "get",
          "parameters",
          "path",
          "orderId",
        ],
        "jsonPath": "/paths/~1store~1order~1{orderId}/get/parameters/0",
        "kind": "path-parameter",
      },
      "raw": {
        "description": "ID of pet that needs to be fetched",
        "in": "path",
        "name": "orderId",
        "required": true,
        "schema": {
          "format": "int64",
          "maximum": 10,
          "minimum": 1,
          "type": "integer",
        },
      },
      "value": {
        "description": "ID of pet that needs to be fetched",
        "in": "path",
        "name": "orderId",
        "required": true,
        "schema": {
          "format": "int64",
          "maximum": 10,
          "minimum": 1,
          "type": "integer",
        },
      },
    },
  },
  "polymorphicSchemas": {
    "after": Set {},
    "before": Set {},
  },
  "queryParameters": Map {},
  "raw": {
    "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
    "operationId": "getOrderById",
    "parameters": [
      {
        "description": "ID of pet that needs to be fetched",
        "in": "path",
        "name": "orderId",
        "required": true,
        "schema": {
          "format": "int64",
          "maximum": 10,
          "minimum": 1,
          "type": "integer",
        },
      },
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                  "type": "string",
                },
                "summary": {
                  "description": "Human readable summary of order",
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
          "application/xml": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                  "type": "string",
                },
                "summary": {
                  "description": "Human readable summary of order",
                  "type": "string",
                },
              },
              "required": [
                "id",
              ],
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
        "description": "successful operation",
      },
      "400": {
        "content": {},
        "description": "Invalid ID supplied",
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "code": {
                  "format": "int32",
                  "type": "integer",
                },
                "message": {
                  "type": "string",
                },
                "type": {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
        },
        "description": "Order not found",
      },
    },
    "summary": "Find purchase order by ID",
    "tags": [
      "store",
    ],
  },
  "requests": [],
  "responses": Map {
    "200" => {
      "bodies": [
        {
          "contentType": "application/xml",
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "method": "get",
              "path": "/store/order/{orderId}",
            },
            "conceptualPath": [
              "operations",
              "/store/order/{}",
              "get",
              "responses",
              "200",
              "application/xml",
            ],
            "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml",
            "kind": "body",
          },
          "properties": Map {
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "id",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "id",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int64",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int64",
                  "type": "integer",
                },
                "key": "id",
                "required": true,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "petId",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "petId",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int64",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int64",
                  "type": "integer",
                },
                "key": "petId",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "quantity",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "quantity",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int32",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int32",
                  "type": "integer",
                },
                "key": "quantity",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "shipDate",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "shipDate",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "date-time",
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "format": "date-time",
                  "type": "string",
                },
                "key": "shipDate",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "status",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "status",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "description": "Order Status",
                "enum": [
                  "placed",
                  "delivered",
                  "canceled",
                ],
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                  "type": "string",
                },
                "key": "status",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "complete",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "complete",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "default": false,
                "type": "boolean",
              },
              "value": {
                "flatSchema": {
                  "default": false,
                  "type": "boolean",
                },
                "key": "complete",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/summary" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "summary",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "summary",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/summary",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "description": "Human readable summary of order",
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "description": "Human readable summary of order",
                  "type": "string",
                },
                "key": "summary",
                "required": false,
              },
            },
          },
          "raw": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                  "type": "string",
                },
                "summary": {
                  "description": "Human readable summary of order",
                  "type": "string",
                },
              },
              "required": [
                "id",
              ],
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
          "schemas": Map {},
          "statusCode": "200",
          "value": {
            "contentType": "application/xml",
            "flatSchema": {
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
        {
          "contentType": "application/json",
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "method": "get",
              "path": "/store/order/{orderId}",
            },
            "conceptualPath": [
              "operations",
              "/store/order/{}",
              "get",
              "responses",
              "200",
              "application/json",
            ],
            "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json",
            "kind": "body",
          },
          "properties": Map {
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "id",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "id",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int64",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int64",
                  "type": "integer",
                },
                "key": "id",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "petId",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "petId",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int64",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int64",
                  "type": "integer",
                },
                "key": "petId",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "quantity",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "quantity",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int32",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int32",
                  "type": "integer",
                },
                "key": "quantity",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "shipDate",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "shipDate",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "date-time",
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "format": "date-time",
                  "type": "string",
                },
                "key": "shipDate",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "status",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "status",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "description": "Order Status",
                "enum": [
                  "placed",
                  "delivered",
                  "canceled",
                ],
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                  "type": "string",
                },
                "key": "status",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "complete",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "complete",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "default": false,
                "type": "boolean",
              },
              "value": {
                "flatSchema": {
                  "default": false,
                  "type": "boolean",
                },
                "key": "complete",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/summary" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "summary",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "summary",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/summary",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                    "type": "string",
                  },
                  "summary": {
                    "description": "Human readable summary of order",
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "description": "Human readable summary of order",
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "description": "Human readable summary of order",
                  "type": "string",
                },
                "key": "summary",
                "required": false,
              },
            },
          },
          "raw": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                  "type": "string",
                },
                "summary": {
                  "description": "Human readable summary of order",
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
          "schemas": Map {},
          "statusCode": "200",
          "value": {
            "contentType": "application/json",
            "flatSchema": {
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
      ],
      "headers": Map {},
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/store/order/{orderId}",
        },
        "conceptualPath": [
          "operations",
          "/store/order/{}",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200",
        "kind": "response",
      },
      "raw": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                  "type": "string",
                },
                "summary": {
                  "description": "Human readable summary of order",
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
          "application/xml": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                  "type": "string",
                },
                "summary": {
                  "description": "Human readable summary of order",
                  "type": "string",
                },
              },
              "required": [
                "id",
              ],
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
        "description": "successful operation",
      },
      "statusCode": "200",
      "value": {
        "description": "successful operation",
        "statusCode": "200",
      },
    },
    "400" => {
      "bodies": [],
      "headers": Map {},
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "statusCode": "400",
          },
          "method": "get",
          "path": "/store/order/{orderId}",
        },
        "conceptualPath": [
          "operations",
          "/store/order/{}",
          "get",
          "responses",
          "400",
        ],
        "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/400",
        "kind": "response",
      },
      "raw": {
        "content": {},
        "description": "Invalid ID supplied",
      },
      "statusCode": "400",
      "value": {
        "description": "Invalid ID supplied",
        "statusCode": "400",
      },
    },
    "404" => {
      "bodies": [
        {
          "contentType": "application/json",
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "404",
              },
              "method": "get",
              "path": "/store/order/{orderId}",
            },
            "conceptualPath": [
              "operations",
              "/store/order/{}",
              "get",
              "responses",
              "404",
              "application/json",
            ],
            "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json",
            "kind": "body",
          },
          "properties": Map {
            "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/code" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "404",
                  },
                  "jsonSchemaTrail": [
                    "code",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "404",
                  "application/json",
                  "code",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/code",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "code": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "message": {
                    "type": "string",
                  },
                  "type": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "raw": {
                "format": "int32",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int32",
                  "type": "integer",
                },
                "key": "code",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/type" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "404",
                  },
                  "jsonSchemaTrail": [
                    "type",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "404",
                  "application/json",
                  "type",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/type",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "code": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "message": {
                    "type": "string",
                  },
                  "type": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "raw": {
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "type": "string",
                },
                "key": "type",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/message" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "404",
                  },
                  "jsonSchemaTrail": [
                    "message",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "404",
                  "application/json",
                  "message",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/message",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "code": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "message": {
                    "type": "string",
                  },
                  "type": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "raw": {
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "type": "string",
                },
                "key": "message",
                "required": false,
              },
            },
          },
          "raw": {
            "schema": {
              "properties": {
                "code": {
                  "format": "int32",
                  "type": "integer",
                },
                "message": {
                  "type": "string",
                },
                "type": {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "schemas": Map {},
          "statusCode": "404",
          "value": {
            "contentType": "application/json",
            "flatSchema": {
              "type": "object",
            },
          },
        },
      ],
      "headers": Map {},
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "statusCode": "404",
          },
          "method": "get",
          "path": "/store/order/{orderId}",
        },
        "conceptualPath": [
          "operations",
          "/store/order/{}",
          "get",
          "responses",
          "404",
        ],
        "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404",
        "kind": "response",
      },
      "raw": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "code": {
                  "format": "int32",
                  "type": "integer",
                },
                "message": {
                  "type": "string",
                },
                "type": {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
        },
        "description": "Order not found",
      },
      "statusCode": "404",
      "value": {
        "description": "Order not found",
        "statusCode": "404",
      },
    },
  },
  "security": [
    {
      "AuthScope": [
        "admin",
      ],
    },
  ],
  "value": {
    "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
    "method": "get",
    "operationId": "getOrderById",
    "pathPattern": "/store/order/{orderId}",
    "summary": "Find purchase order by ID",
    "tags": [
      "store",
    ],
  },
}
`;

exports[`createOperation with before key 1`] = `
{
  "cookieParameters": Map {},
  "headerParameters": Map {},
  "location": {
    "conceptualLocation": {
      "method": "get",
      "path": "/store/order/{orderId}",
    },
    "conceptualPath": [
      "operations",
      "/store/order/{}",
      "get",
    ],
    "jsonPath": "/paths/~1store~1order~1{orderId}/get",
    "kind": "operation",
  },
  "method": "get",
  "path": "/store/order/{orderId}",
  "pathParameters": Map {
    "orderId" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "path": "orderId",
          },
          "method": "get",
          "path": "/store/order/{orderId}",
        },
        "conceptualPath": [
          "operations",
          "/store/order/{}",
          "get",
          "parameters",
          "path",
          "orderId",
        ],
        "jsonPath": "/paths/~1store~1order~1{orderId}/get/parameters/0",
        "kind": "path-parameter",
      },
      "raw": {
        "description": "ID of pet that needs to be fetched",
        "in": "path",
        "name": "orderId",
        "required": true,
        "schema": {
          "format": "int64",
          "maximum": 10,
          "minimum": 1,
          "type": "integer",
        },
      },
      "value": {
        "description": "ID of pet that needs to be fetched",
        "in": "path",
        "name": "orderId",
        "required": true,
        "schema": {
          "format": "int64",
          "maximum": 10,
          "minimum": 1,
          "type": "integer",
        },
      },
    },
  },
  "polymorphicSchemas": {
    "after": Set {},
    "before": Set {},
  },
  "queryParameters": Map {},
  "raw": {
    "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
    "operationId": "getOrderById",
    "parameters": [
      {
        "description": "ID of pet that needs to be fetched",
        "in": "path",
        "name": "orderId",
        "required": true,
        "schema": {
          "format": "int64",
          "maximum": 10,
          "minimum": 1,
          "type": "integer",
        },
      },
    ],
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
          "application/xml": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "required": [
                "id",
                "petId",
              ],
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
        "description": "successful operation",
      },
      "400": {
        "content": {},
        "description": "Invalid ID supplied",
      },
      "404": {
        "content": {},
        "description": "Order not found",
      },
    },
    "summary": "Find purchase order by ID",
    "tags": [
      "store",
    ],
  },
  "requests": [],
  "responses": Map {
    "200" => {
      "bodies": [
        {
          "contentType": "application/xml",
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "method": "get",
              "path": "/store/order/{orderId}",
            },
            "conceptualPath": [
              "operations",
              "/store/order/{}",
              "get",
              "responses",
              "200",
              "application/xml",
            ],
            "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml",
            "kind": "body",
          },
          "properties": Map {
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "id",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "id",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "petId",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int64",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int64",
                  "type": "integer",
                },
                "key": "id",
                "required": true,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "petId",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "petId",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "petId",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int64",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int64",
                  "type": "integer",
                },
                "key": "petId",
                "required": true,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "quantity",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "quantity",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "petId",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int32",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int32",
                  "type": "integer",
                },
                "key": "quantity",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "shipDate",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "shipDate",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "petId",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "date-time",
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "format": "date-time",
                  "type": "string",
                },
                "key": "shipDate",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "status",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "status",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "petId",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "description": "Order Status",
                "enum": [
                  "placed",
                  "approved",
                  "delivered",
                ],
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
                "key": "status",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/xml",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "complete",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/xml",
                  "complete",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                  "petId",
                ],
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "default": false,
                "type": "boolean",
              },
              "value": {
                "flatSchema": {
                  "default": false,
                  "type": "boolean",
                },
                "key": "complete",
                "required": false,
              },
            },
          },
          "raw": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "required": [
                "id",
                "petId",
              ],
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
          "schemas": Map {},
          "statusCode": "200",
          "value": {
            "contentType": "application/xml",
            "flatSchema": {
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
        {
          "contentType": "application/json",
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "method": "get",
              "path": "/store/order/{orderId}",
            },
            "conceptualPath": [
              "operations",
              "/store/order/{}",
              "get",
              "responses",
              "200",
              "application/json",
            ],
            "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json",
            "kind": "body",
          },
          "properties": Map {
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "id",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "id",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int64",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int64",
                  "type": "integer",
                },
                "key": "id",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "petId",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "petId",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int64",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int64",
                  "type": "integer",
                },
                "key": "petId",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "quantity",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "quantity",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "int32",
                "type": "integer",
              },
              "value": {
                "flatSchema": {
                  "format": "int32",
                  "type": "integer",
                },
                "key": "quantity",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "shipDate",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "shipDate",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "format": "date-time",
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "format": "date-time",
                  "type": "string",
                },
                "key": "shipDate",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "status",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "status",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "description": "Order Status",
                "enum": [
                  "placed",
                  "approved",
                  "delivered",
                ],
                "type": "string",
              },
              "value": {
                "flatSchema": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
                "key": "status",
                "required": false,
              },
            },
            "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete" => {
              "location": {
                "conceptualLocation": {
                  "inResponse": {
                    "body": {
                      "contentType": "application/json",
                    },
                    "statusCode": "200",
                  },
                  "jsonSchemaTrail": [
                    "complete",
                  ],
                  "method": "get",
                  "path": "/store/order/{orderId}",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order/{}",
                  "get",
                  "responses",
                  "200",
                  "application/json",
                  "complete",
                ],
                "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete",
                "kind": "field",
              },
              "parent": {
                "properties": {
                  "complete": {
                    "default": false,
                    "type": "boolean",
                  },
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "petId": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "quantity": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "shipDate": {
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Order",
                },
              },
              "raw": {
                "default": false,
                "type": "boolean",
              },
              "value": {
                "flatSchema": {
                  "default": false,
                  "type": "boolean",
                },
                "key": "complete",
                "required": false,
              },
            },
          },
          "raw": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
          "schemas": Map {},
          "statusCode": "200",
          "value": {
            "contentType": "application/json",
            "flatSchema": {
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
      ],
      "headers": Map {},
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "statusCode": "200",
          },
          "method": "get",
          "path": "/store/order/{orderId}",
        },
        "conceptualPath": [
          "operations",
          "/store/order/{}",
          "get",
          "responses",
          "200",
        ],
        "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200",
        "kind": "response",
      },
      "raw": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
          "application/xml": {
            "schema": {
              "properties": {
                "complete": {
                  "default": false,
                  "type": "boolean",
                },
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "petId": {
                  "format": "int64",
                  "type": "integer",
                },
                "quantity": {
                  "format": "int32",
                  "type": "integer",
                },
                "shipDate": {
                  "format": "date-time",
                  "type": "string",
                },
                "status": {
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                  "type": "string",
                },
              },
              "required": [
                "id",
                "petId",
              ],
              "type": "object",
              "xml": {
                "name": "Order",
              },
            },
          },
        },
        "description": "successful operation",
      },
      "statusCode": "200",
      "value": {
        "description": "successful operation",
        "statusCode": "200",
      },
    },
    "400" => {
      "bodies": [],
      "headers": Map {},
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "statusCode": "400",
          },
          "method": "get",
          "path": "/store/order/{orderId}",
        },
        "conceptualPath": [
          "operations",
          "/store/order/{}",
          "get",
          "responses",
          "400",
        ],
        "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/400",
        "kind": "response",
      },
      "raw": {
        "content": {},
        "description": "Invalid ID supplied",
      },
      "statusCode": "400",
      "value": {
        "description": "Invalid ID supplied",
        "statusCode": "400",
      },
    },
    "404" => {
      "bodies": [],
      "headers": Map {},
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "statusCode": "404",
          },
          "method": "get",
          "path": "/store/order/{orderId}",
        },
        "conceptualPath": [
          "operations",
          "/store/order/{}",
          "get",
          "responses",
          "404",
        ],
        "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404",
        "kind": "response",
      },
      "raw": {
        "content": {},
        "description": "Order not found",
      },
      "statusCode": "404",
      "value": {
        "description": "Order not found",
        "statusCode": "404",
      },
    },
  },
  "security": null,
  "value": {
    "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
    "method": "get",
    "operationId": "getOrderById",
    "pathPattern": "/store/order/{orderId}",
    "summary": "Find purchase order by ID",
    "tags": [
      "store",
    ],
  },
}
`;

exports[`createRequest request with after key 1`] = `
{
  "contentType": "application/json",
  "location": {
    "conceptualLocation": {
      "inRequest": {
        "body": {
          "contentType": "application/json",
        },
      },
      "method": "put",
      "path": "/pet",
    },
    "conceptualPath": [
      "operations",
      "/pet",
      "put",
      "application/json",
    ],
    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json",
    "kind": "body",
  },
  "properties": Map {
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/id" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "id",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/id",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "number": {
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "number",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "format": "int64",
        "type": "integer",
      },
      "value": {
        "flatSchema": {
          "format": "int64",
          "type": "integer",
        },
        "key": "id",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "category",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "category",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "number": {
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "number",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Category",
        },
      },
      "value": {
        "flatSchema": {
          "type": "object",
          "xml": {
            "name": "Category",
          },
        },
        "key": "category",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/id" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "category",
            "id",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "category",
          "id",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/id",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Category",
        },
      },
      "raw": {
        "format": "int64",
        "type": "integer",
      },
      "value": {
        "flatSchema": {
          "format": "int64",
          "type": "integer",
        },
        "key": "id",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/name" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "category",
            "name",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "category",
          "name",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/name",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Category",
        },
      },
      "raw": {
        "type": "string",
      },
      "value": {
        "flatSchema": {
          "type": "string",
        },
        "key": "name",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/photoUrls" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "photoUrls",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "photoUrls",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/photoUrls",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "number": {
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "number",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "items": {
          "type": "string",
        },
        "type": "array",
        "xml": {
          "name": "photoUrl",
          "wrapped": true,
        },
      },
      "value": {
        "flatSchema": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true,
          },
        },
        "key": "photoUrls",
        "required": true,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "tags",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "tags",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "number": {
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "number",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "items": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
          },
          "type": "object",
          "xml": {
            "name": "Tag",
          },
        },
        "type": "array",
        "xml": {
          "name": "tag",
          "wrapped": true,
        },
      },
      "value": {
        "flatSchema": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true,
          },
        },
        "key": "tags",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/id" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "tags",
            "items",
            "id",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "tags",
          "items",
          "id",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/id",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Tag",
        },
      },
      "raw": {
        "format": "int64",
        "type": "integer",
      },
      "value": {
        "flatSchema": {
          "format": "int64",
          "type": "integer",
        },
        "key": "id",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/name" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "tags",
            "items",
            "name",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "tags",
          "items",
          "name",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/name",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Tag",
        },
      },
      "raw": {
        "type": "string",
      },
      "value": {
        "flatSchema": {
          "type": "string",
        },
        "key": "name",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/status" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "status",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "status",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/status",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "number": {
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "number",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "description": "pet status in the store",
        "enum": [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "value": {
        "flatSchema": {
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold",
          ],
          "type": "string",
        },
        "key": "status",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/number" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "number",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "number",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/number",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "number": {
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "number",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "type": "string",
      },
      "value": {
        "flatSchema": {
          "type": "string",
        },
        "key": "number",
        "required": true,
      },
    },
  },
  "raw": {
    "schema": {
      "properties": {
        "category": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
          },
          "type": "object",
          "xml": {
            "name": "Category",
          },
        },
        "id": {
          "format": "int64",
          "type": "integer",
        },
        "number": {
          "type": "string",
        },
        "photoUrls": {
          "items": {
            "type": "string",
          },
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true,
          },
        },
        "status": {
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold",
          ],
          "type": "string",
        },
        "tags": {
          "items": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Tag",
            },
          },
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true,
          },
        },
      },
      "required": [
        "number",
        "photoUrls",
      ],
      "type": "object",
      "xml": {
        "name": "Pet",
      },
    },
  },
  "required": true,
  "schemas": Map {},
  "value": {
    "contentType": "application/json",
    "flatSchema": {
      "type": "object",
      "xml": {
        "name": "Pet",
      },
    },
  },
}
`;

exports[`createRequest request with before key 1`] = `
{
  "contentType": "application/json",
  "location": {
    "conceptualLocation": {
      "inRequest": {
        "body": {
          "contentType": "application/json",
        },
      },
      "method": "put",
      "path": "/pet",
    },
    "conceptualPath": [
      "operations",
      "/pet",
      "put",
      "application/json",
    ],
    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json",
    "kind": "body",
  },
  "properties": Map {
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/id" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "id",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/id",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "example": "doggie",
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "name",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "format": "int64",
        "type": "integer",
      },
      "value": {
        "flatSchema": {
          "format": "int64",
          "type": "integer",
        },
        "key": "id",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "category",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "category",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "example": "doggie",
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "name",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Category",
        },
      },
      "value": {
        "flatSchema": {
          "type": "object",
          "xml": {
            "name": "Category",
          },
        },
        "key": "category",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/id" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "category",
            "id",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "category",
          "id",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/id",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Category",
        },
      },
      "raw": {
        "format": "int64",
        "type": "integer",
      },
      "value": {
        "flatSchema": {
          "format": "int64",
          "type": "integer",
        },
        "key": "id",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/name" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "category",
            "name",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "category",
          "name",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/name",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Category",
        },
      },
      "raw": {
        "type": "string",
      },
      "value": {
        "flatSchema": {
          "type": "string",
        },
        "key": "name",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/name" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "name",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "name",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/name",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "example": "doggie",
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "name",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "example": "doggie",
        "type": "string",
      },
      "value": {
        "flatSchema": {
          "example": "doggie",
          "type": "string",
        },
        "key": "name",
        "required": true,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/photoUrls" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "photoUrls",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "photoUrls",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/photoUrls",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "example": "doggie",
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "name",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "items": {
          "type": "string",
        },
        "type": "array",
        "xml": {
          "name": "photoUrl",
          "wrapped": true,
        },
      },
      "value": {
        "flatSchema": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true,
          },
        },
        "key": "photoUrls",
        "required": true,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "tags",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "tags",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "example": "doggie",
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "name",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "items": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
          },
          "type": "object",
          "xml": {
            "name": "Tag",
          },
        },
        "type": "array",
        "xml": {
          "name": "tag",
          "wrapped": true,
        },
      },
      "value": {
        "flatSchema": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true,
          },
        },
        "key": "tags",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/id" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "tags",
            "items",
            "id",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "tags",
          "items",
          "id",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/id",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Tag",
        },
      },
      "raw": {
        "format": "int64",
        "type": "integer",
      },
      "value": {
        "flatSchema": {
          "format": "int64",
          "type": "integer",
        },
        "key": "id",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/name" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "tags",
            "items",
            "name",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "tags",
          "items",
          "name",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/name",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "type": "string",
          },
        },
        "type": "object",
        "xml": {
          "name": "Tag",
        },
      },
      "raw": {
        "type": "string",
      },
      "value": {
        "flatSchema": {
          "type": "string",
        },
        "key": "name",
        "required": false,
      },
    },
    "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/status" => {
      "location": {
        "conceptualLocation": {
          "inRequest": {
            "body": {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": [
            "status",
          ],
          "method": "put",
          "path": "/pet",
        },
        "conceptualPath": [
          "operations",
          "/pet",
          "put",
          "application/json",
          "status",
        ],
        "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/status",
        "kind": "field",
      },
      "parent": {
        "properties": {
          "category": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "id": {
            "format": "int64",
            "type": "integer",
          },
          "name": {
            "example": "doggie",
            "type": "string",
          },
          "photoUrls": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "status": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "tags": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
        },
        "required": [
          "name",
          "photoUrls",
        ],
        "type": "object",
        "xml": {
          "name": "Pet",
        },
      },
      "raw": {
        "description": "pet status in the store",
        "enum": [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "value": {
        "flatSchema": {
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold",
          ],
          "type": "string",
        },
        "key": "status",
        "required": false,
      },
    },
  },
  "raw": {
    "schema": {
      "properties": {
        "category": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer",
            },
            "name": {
              "type": "string",
            },
          },
          "type": "object",
          "xml": {
            "name": "Category",
          },
        },
        "id": {
          "format": "int64",
          "type": "integer",
        },
        "name": {
          "example": "doggie",
          "type": "string",
        },
        "photoUrls": {
          "items": {
            "type": "string",
          },
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true,
          },
        },
        "status": {
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold",
          ],
          "type": "string",
        },
        "tags": {
          "items": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Tag",
            },
          },
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true,
          },
        },
      },
      "required": [
        "name",
        "photoUrls",
      ],
      "type": "object",
      "xml": {
        "name": "Pet",
      },
    },
  },
  "required": undefined,
  "schemas": Map {},
  "value": {
    "contentType": "application/json",
    "flatSchema": {
      "type": "object",
      "xml": {
        "name": "Pet",
      },
    },
  },
}
`;

exports[`createResponse response with after key 1`] = `
{
  "bodies": [
    {
      "contentType": "application/xml",
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "body": {
              "contentType": "application/xml",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/pet/findByStatus",
        },
        "conceptualPath": [
          "operations",
          "/pet/findByStatus",
          "get",
          "responses",
          "200",
          "application/xml",
        ],
        "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml",
        "kind": "body",
      },
      "properties": Map {
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/id" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "id",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "id",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/id",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "format": "int64",
            "type": "integer",
          },
          "value": {
            "flatSchema": {
              "format": "int64",
              "type": "integer",
            },
            "key": "id",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "category",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "category",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "value": {
            "flatSchema": {
              "type": "object",
              "xml": {
                "name": "Category",
              },
            },
            "key": "category",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "category",
                "id",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "category",
              "id",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "raw": {
            "format": "int64",
            "type": "integer",
          },
          "value": {
            "flatSchema": {
              "format": "int64",
              "type": "integer",
            },
            "key": "id",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "category",
                "name",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "category",
              "name",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "raw": {
            "type": "string",
          },
          "value": {
            "flatSchema": {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/name" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "name",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "name",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/name",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "example": "doggie",
            "type": "string",
          },
          "value": {
            "flatSchema": {
              "example": "doggie",
              "type": "string",
            },
            "key": "name",
            "required": true,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/photoUrls" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "photoUrls",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "photoUrls",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/photoUrls",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "value": {
            "flatSchema": {
              "type": "array",
              "xml": {
                "name": "photoUrl",
                "wrapped": true,
              },
            },
            "key": "photoUrls",
            "required": true,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "tags",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "tags",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
          "value": {
            "flatSchema": {
              "type": "array",
              "xml": {
                "name": "tag",
                "wrapped": true,
              },
            },
            "key": "tags",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "tags",
                "items",
                "id",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "tags",
              "items",
              "id",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Tag",
            },
          },
          "raw": {
            "format": "int64",
            "type": "integer",
          },
          "value": {
            "flatSchema": {
              "format": "int64",
              "type": "integer",
            },
            "key": "id",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "tags",
                "items",
                "name",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "tags",
              "items",
              "name",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Tag",
            },
          },
          "raw": {
            "type": "string",
          },
          "value": {
            "flatSchema": {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/status" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/xml",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "status",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/xml",
              "items",
              "status",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/status",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "value": {
            "flatSchema": {
              "description": "pet status in the store",
              "enum": [
                "available",
                "pending",
                "sold",
              ],
              "type": "string",
            },
            "key": "status",
            "required": false,
          },
        },
      },
      "raw": {
        "schema": {
          "items": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "type": "array",
        },
      },
      "schemas": Map {},
      "statusCode": "200",
      "value": {
        "contentType": "application/xml",
        "flatSchema": {
          "type": "array",
        },
      },
    },
    {
      "contentType": "application/json",
      "location": {
        "conceptualLocation": {
          "inResponse": {
            "body": {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/pet/findByStatus",
        },
        "conceptualPath": [
          "operations",
          "/pet/findByStatus",
          "get",
          "responses",
          "200",
          "application/json",
        ],
        "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json",
        "kind": "body",
      },
      "properties": Map {
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/id" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "id",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "id",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/id",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "format": "int64",
            "type": "integer",
          },
          "value": {
            "flatSchema": {
              "format": "int64",
              "type": "integer",
            },
            "key": "id",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "category",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "category",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "value": {
            "flatSchema": {
              "type": "object",
              "xml": {
                "name": "Category",
              },
            },
            "key": "category",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/id" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "category",
                "id",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "category",
              "id",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/id",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "raw": {
            "format": "int64",
            "type": "integer",
          },
          "value": {
            "flatSchema": {
              "format": "int64",
              "type": "integer",
            },
            "key": "id",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/name" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "category",
                "name",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "category",
              "name",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/name",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Category",
            },
          },
          "raw": {
            "type": "string",
          },
          "value": {
            "flatSchema": {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/name" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "name",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "name",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/name",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "example": "doggie",
            "type": "string",
          },
          "value": {
            "flatSchema": {
              "example": "doggie",
              "type": "string",
            },
            "key": "name",
            "required": true,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/photoUrls" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "photoUrls",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "photoUrls",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/photoUrls",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "items": {
              "type": "string",
            },
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true,
            },
          },
          "value": {
            "flatSchema": {
              "type": "array",
              "xml": {
                "name": "photoUrl",
                "wrapped": true,
              },
            },
            "key": "photoUrls",
            "required": true,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "tags",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "tags",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "items": {
              "properties": {
                "id": {
                  "format": "int64",
                  "type": "integer",
                },
                "name": {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": {
                "name": "Tag",
              },
            },
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true,
            },
          },
          "value": {
            "flatSchema": {
              "type": "array",
              "xml": {
                "name": "tag",
                "wrapped": true,
              },
            },
            "key": "tags",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "tags",
                "items",
                "id",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "tags",
              "items",
              "id",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Tag",
            },
          },
          "raw": {
            "format": "int64",
            "type": "integer",
          },
          "value": {
            "flatSchema": {
              "format": "int64",
              "type": "integer",
            },
            "key": "id",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "tags",
                "items",
                "name",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "tags",
              "items",
              "name",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "type": "string",
              },
            },
            "type": "object",
            "xml": {
              "name": "Tag",
            },
          },
          "raw": {
            "type": "string",
          },
          "value": {
            "flatSchema": {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
        "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/status" => {
          "location": {
            "conceptualLocation": {
              "inResponse": {
                "body": {
                  "contentType": "application/json",
                },
                "statusCode": "200",
              },
              "jsonSchemaTrail": [
                "items",
                "status",
              ],
              "method": "get",
              "path": "/pet/findByStatus",
            },
            "conceptualPath": [
              "operations",
              "/pet/findByStatus",
              "get",
              "responses",
              "200",
              "application/json",
              "items",
              "status",
            ],
            "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/status",
            "kind": "field",
          },
          "parent": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "raw": {
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold",
            ],
            "type": "string",
          },
          "value": {
            "flatSchema": {
              "description": "pet status in the store",
              "enum": [
                "available",
                "pending",
                "sold",
              ],
              "type": "string",
            },
            "key": "status",
            "required": false,
          },
        },
      },
      "raw": {
        "schema": {
          "items": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "type": "array",
        },
      },
      "schemas": Map {},
      "statusCode": "200",
      "value": {
        "contentType": "application/json",
        "flatSchema": {
          "type": "array",
        },
      },
    },
  ],
  "headers": Map {},
  "location": {
    "conceptualLocation": {
      "inResponse": {
        "statusCode": "200",
      },
      "method": "get",
      "path": "/pet/findByStatus",
    },
    "conceptualPath": [
      "operations",
      "/pet/findByStatus",
      "get",
      "responses",
      "200",
    ],
    "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200",
    "kind": "response",
  },
  "raw": {
    "content": {
      "application/json": {
        "schema": {
          "items": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "type": "array",
        },
      },
      "application/xml": {
        "schema": {
          "items": {
            "properties": {
              "category": {
                "properties": {
                  "id": {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": {
                  "name": "Category",
                },
              },
              "id": {
                "format": "int64",
                "type": "integer",
              },
              "name": {
                "example": "doggie",
                "type": "string",
              },
              "photoUrls": {
                "items": {
                  "type": "string",
                },
                "type": "array",
                "xml": {
                  "name": "photoUrl",
                  "wrapped": true,
                },
              },
              "status": {
                "description": "pet status in the store",
                "enum": [
                  "available",
                  "pending",
                  "sold",
                ],
                "type": "string",
              },
              "tags": {
                "items": {
                  "properties": {
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": {
                    "name": "Tag",
                  },
                },
                "type": "array",
                "xml": {
                  "name": "tag",
                  "wrapped": true,
                },
              },
            },
            "required": [
              "name",
              "photoUrls",
            ],
            "type": "object",
            "xml": {
              "name": "Pet",
            },
          },
          "type": "array",
        },
      },
    },
    "description": "successful operation",
  },
  "statusCode": "200",
  "value": {
    "description": "successful operation",
    "statusCode": "200",
  },
}
`;

exports[`createResponse response with before key 1`] = `null`;

exports[`createSpecification specification with after key 1`] = `
{
  "location": {
    "conceptualLocation": {},
    "conceptualPath": [],
    "jsonPath": "",
    "kind": "specification",
  },
  "raw": {
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io",
    },
    "info": {
      "contact": {
        "email": "apiteam@swagger.io",
      },
      "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
      },
      "termsOfService": "http://swagger.io/terms/",
      "title": "Swagger Petstore Updated",
      "version": "1.0.0",
    },
    "openapi": "3.0.1",
    "paths": {
      "/example": {
        "get": {
          "operationId": "getExamples",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "composedObject": {
                        "allOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "number",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "fulfillmentId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "expandableObject": {
                        "anyOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "order": {
                                "properties": {
                                  "id": {
                                    "type": "string",
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "stringOrNumberOrObject": {
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "succesful",
            },
          },
          "security": [
            {
              "LocalAuthScope": [
                "admin",
              ],
            },
          ],
        },
      },
      "/pet": {
        "put": {
          "operationId": "putpet-change",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "category": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "number": {
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "xml": {
                          "name": "Tag",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "number",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "description": "Pet object that needs to be added to the store",
            "required": true,
          },
          "responses": {
            "404": {
              "content": {},
              "description": "Pet not found",
            },
            "405": {
              "content": {},
              "description": "Validation exception",
            },
          },
          "summary": "Add a new pet to the store",
          "tags": [
            "pet",
          ],
        },
      },
      "/pet/findByStatus": {
        "get": {
          "description": "Multiple status values can be provided with comma separated strings",
          "operationId": "findPetsByStatus",
          "parameters": [
            {
              "description": "Status values that need to be considered for filter",
              "explode": true,
              "in": "query",
              "name": "status",
              "required": true,
              "schema": {
                "items": {
                  "default": "available",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "style": "form",
            },
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "properties": {
                        "category": {
                          "properties": {
                            "id": {
                              "format": "int64",
                              "type": "integer",
                            },
                            "name": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "xml": {
                            "name": "Category",
                          },
                        },
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "example": "doggie",
                          "type": "string",
                        },
                        "photoUrls": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "xml": {
                            "name": "photoUrl",
                            "wrapped": true,
                          },
                        },
                        "status": {
                          "description": "pet status in the store",
                          "enum": [
                            "available",
                            "pending",
                            "sold",
                          ],
                          "type": "string",
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Tag",
                            },
                          },
                          "type": "array",
                          "xml": {
                            "name": "tag",
                            "wrapped": true,
                          },
                        },
                      },
                      "required": [
                        "name",
                        "photoUrls",
                      ],
                      "type": "object",
                      "xml": {
                        "name": "Pet",
                      },
                    },
                    "type": "array",
                  },
                },
                "application/xml": {
                  "schema": {
                    "items": {
                      "properties": {
                        "category": {
                          "properties": {
                            "id": {
                              "format": "int64",
                              "type": "integer",
                            },
                            "name": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "xml": {
                            "name": "Category",
                          },
                        },
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "example": "doggie",
                          "type": "string",
                        },
                        "photoUrls": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "xml": {
                            "name": "photoUrl",
                            "wrapped": true,
                          },
                        },
                        "status": {
                          "description": "pet status in the store",
                          "enum": [
                            "available",
                            "pending",
                            "sold",
                          ],
                          "type": "string",
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Tag",
                            },
                          },
                          "type": "array",
                          "xml": {
                            "name": "tag",
                            "wrapped": true,
                          },
                        },
                      },
                      "required": [
                        "name",
                        "photoUrls",
                      ],
                      "type": "object",
                      "xml": {
                        "name": "Pet",
                      },
                    },
                    "type": "array",
                  },
                },
              },
              "description": "successful operation",
            },
            "400": {
              "content": {},
              "description": "Invalid status value",
            },
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Finds Pets by status",
          "tags": [
            "pet",
          ],
        },
      },
      "/pet/findByTags": {
        "get": {
          "deprecated": true,
          "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
          "operationId": "findPetsByTags",
          "parameters": [
            {
              "description": "Tags to filter by",
              "explode": true,
              "in": "query",
              "name": "tags",
              "required": true,
              "schema": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "style": "form",
            },
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "properties": {
                        "category": {
                          "properties": {
                            "id": {
                              "format": "int64",
                              "type": "integer",
                            },
                            "name": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "xml": {
                            "name": "Category",
                          },
                        },
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "example": "doggie",
                          "type": "string",
                        },
                        "photoUrls": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "xml": {
                            "name": "photoUrl",
                            "wrapped": true,
                          },
                        },
                        "status": {
                          "description": "pet status in the store",
                          "enum": [
                            "available",
                            "pending",
                            "sold",
                          ],
                          "type": "string",
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Tag",
                            },
                          },
                          "type": "array",
                          "xml": {
                            "name": "tag",
                            "wrapped": true,
                          },
                        },
                      },
                      "required": [
                        "name",
                        "photoUrls",
                      ],
                      "type": "object",
                      "xml": {
                        "name": "Pet",
                      },
                    },
                    "type": "array",
                  },
                },
                "application/xml": {
                  "schema": {
                    "items": {
                      "properties": {
                        "category": {
                          "properties": {
                            "id": {
                              "format": "int64",
                              "type": "integer",
                            },
                            "name": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "xml": {
                            "name": "Category",
                          },
                        },
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "example": "doggie",
                          "type": "string",
                        },
                        "photoUrls": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "xml": {
                            "name": "photoUrl",
                            "wrapped": true,
                          },
                        },
                        "status": {
                          "description": "pet status in the store",
                          "enum": [
                            "available",
                            "pending",
                            "sold",
                          ],
                          "type": "string",
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Tag",
                            },
                          },
                          "type": "array",
                          "xml": {
                            "name": "tag",
                            "wrapped": true,
                          },
                        },
                      },
                      "required": [
                        "name",
                        "photoUrls",
                      ],
                      "type": "object",
                      "xml": {
                        "name": "Pet",
                      },
                    },
                    "type": "array",
                  },
                },
              },
              "description": "successful operation",
            },
            "400": {
              "content": {},
              "description": "Invalid tag value",
            },
          },
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Finds Pets by tags",
          "tags": [
            "pet",
          ],
        },
      },
      "/store/order/{orderId}": {
        "delete": {
          "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
          "operationId": "deleteOrder",
          "parameters": [
            {
              "description": "ID of the order that needs to be deleted",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": {
                "format": "int64",
                "minimum": 1,
                "type": "integer",
              },
            },
          ],
          "responses": {
            "400": {
              "content": {},
              "description": "Invalid ID supplied",
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "code": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "message": {
                        "type": "string",
                      },
                      "type": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "Order not found",
            },
          },
          "summary": "Delete purchase order by ID",
          "tags": [
            "store",
          ],
        },
        "get": {
          "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
          "operationId": "getOrderById",
          "parameters": [
            {
              "description": "ID of pet that needs to be fetched",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": {
                "format": "int64",
                "maximum": 10,
                "minimum": 1,
                "type": "integer",
              },
            },
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "complete": {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "summary": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
                "application/xml": {
                  "schema": {
                    "properties": {
                      "complete": {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "summary": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                    },
                    "required": [
                      "id",
                    ],
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "description": "successful operation",
            },
            "400": {
              "content": {},
              "description": "Invalid ID supplied",
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "code": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "message": {
                        "type": "string",
                      },
                      "type": {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "Order not found",
            },
          },
          "summary": "Find purchase order by ID",
          "tags": [
            "store",
          ],
        },
      },
      "/user/createWithArray": {
        "post": {
          "operationId": "createUsersWithArrayInput",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "properties": {
                      "bio": {
                        "type": "string",
                      },
                      "email": {
                        "type": "string",
                      },
                      "firstName": {
                        "type": "string",
                      },
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": {
                        "type": "string",
                      },
                      "password": {
                        "type": "string",
                      },
                      "userStatus": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "username": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "id",
                      "email",
                      "username",
                      "userStatus",
                    ],
                    "type": "object",
                    "xml": {
                      "name": "User",
                    },
                  },
                  "type": "array",
                },
              },
            },
            "description": "List of user object",
            "required": true,
          },
          "responses": {
            "default": {
              "content": {},
              "description": "successful operation",
            },
          },
          "summary": "Creates list of users with given input array",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
    },
    "security": [
      {
        "AuthScope": [
          "admin",
        ],
      },
    ],
    "servers": [
      {
        "url": "https://petstore.swagger.io/v2",
      },
      {
        "url": "http://petstore.swagger.io/v2",
      },
      {
        "url": "http://petstore.swagger.io/v3",
      },
    ],
    "tags": [
      {
        "description": "Everything about your Pets",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io",
        },
        "name": "pet",
      },
      {
        "description": "Access to Petstore orders",
        "name": "store",
      },
      {
        "description": "Operations about user",
        "externalDocs": {
          "description": "Find out more about our store",
          "url": "http://swagger.io",
        },
        "name": "user",
      },
    ],
  },
  "value": {
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io",
    },
    "info": {
      "contact": {
        "email": "apiteam@swagger.io",
      },
      "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
      },
      "termsOfService": "http://swagger.io/terms/",
      "title": "Swagger Petstore Updated",
      "version": "1.0.0",
    },
    "openapi": "3.0.1",
    "servers": [
      {
        "url": "https://petstore.swagger.io/v2",
      },
      {
        "url": "http://petstore.swagger.io/v2",
      },
      {
        "url": "http://petstore.swagger.io/v3",
      },
    ],
    "tags": [
      {
        "description": "Everything about your Pets",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io",
        },
        "name": "pet",
      },
      {
        "description": "Access to Petstore orders",
        "name": "store",
      },
      {
        "description": "Operations about user",
        "externalDocs": {
          "description": "Find out more about our store",
          "url": "http://swagger.io",
        },
        "name": "user",
      },
    ],
  },
}
`;

exports[`createSpecification specification with before key 1`] = `
{
  "location": {
    "conceptualLocation": {},
    "conceptualPath": [],
    "jsonPath": "",
    "kind": "specification",
  },
  "raw": {
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io",
    },
    "info": {
      "contact": {
        "email": "apiteam@swagger.io",
      },
      "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
      },
      "termsOfService": "http://swagger.io/terms/",
      "title": "Swagger Petstore",
      "version": "1.0.0",
    },
    "openapi": "3.0.1",
    "paths": {
      "/example": {
        "get": {
          "operationId": "getExamples",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "composedObject": {
                        "allOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "fulfillmentId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "expandableObject": {
                        "anyOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "stringOrNumberOrObject": {
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "succesful",
            },
          },
        },
      },
      "/pet": {
        "put": {
          "operationId": "putpet",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "category": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "xml": {
                          "name": "Tag",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
              "application/xml": {
                "schema": {
                  "properties": {
                    "category": {
                      "properties": {
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "id": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "name": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "photoUrls": {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "status": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "tags": {
                      "items": {
                        "properties": {
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "xml": {
                          "name": "Tag",
                        },
                      },
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                  },
                  "required": [
                    "name",
                    "photoUrls",
                  ],
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "description": "Pet object that needs to be added to the store",
          },
          "responses": {
            "400": {
              "content": {},
              "description": "Invalid ID supplied",
            },
            "404": {
              "content": {},
              "description": "Pet not found",
            },
            "405": {
              "content": {},
              "description": "Validation exception",
            },
          },
        },
      },
      "/store/order/{orderId}": {
        "delete": {
          "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
          "operationId": "deleteOrder",
          "parameters": [
            {
              "description": "ID of the order that needs to be deleted",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": {
                "format": "int64",
                "minimum": 1,
                "type": "integer",
              },
            },
          ],
          "responses": {
            "400": {
              "content": {},
              "description": "Invalid ID supplied",
            },
            "404": {
              "content": {},
              "description": "Order not found",
            },
          },
          "summary": "Delete purchase order by ID",
          "tags": [
            "store",
          ],
        },
        "get": {
          "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
          "operationId": "getOrderById",
          "parameters": [
            {
              "description": "ID of pet that needs to be fetched",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": {
                "format": "int64",
                "maximum": 10,
                "minimum": 1,
                "type": "integer",
              },
            },
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "complete": {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
                "application/xml": {
                  "schema": {
                    "properties": {
                      "complete": {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "required": [
                      "id",
                      "petId",
                    ],
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "description": "successful operation",
            },
            "400": {
              "content": {},
              "description": "Invalid ID supplied",
            },
            "404": {
              "content": {},
              "description": "Order not found",
            },
          },
          "summary": "Find purchase order by ID",
          "tags": [
            "store",
          ],
        },
      },
      "/user/createWithArray": {
        "post": {
          "operationId": "createUsersWithArrayInput",
          "requestBody": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "properties": {
                      "email": {
                        "type": "string",
                      },
                      "firstName": {
                        "type": "string",
                      },
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": {
                        "type": "string",
                      },
                      "password": {
                        "type": "string",
                      },
                      "phone": {
                        "type": "string",
                      },
                      "userStatus": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "id",
                      "email",
                      "lastName",
                      "userStatus",
                    ],
                    "type": "object",
                    "xml": {
                      "name": "User",
                    },
                  },
                  "type": "array",
                },
              },
            },
            "description": "List of user object",
            "required": true,
          },
          "responses": {
            "default": {
              "content": {},
              "description": "successful operation",
            },
          },
          "summary": "Creates list of users with given input array",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
    },
    "servers": [
      {
        "url": "https://petstore.swagger.io/v2",
      },
      {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "tags": [
      {
        "description": "Everything about your Pets",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io",
        },
        "name": "pet",
      },
      {
        "description": "Access to Petstore orders",
        "name": "store",
      },
      {
        "description": "Operations about user",
        "externalDocs": {
          "description": "Find out more about our store",
          "url": "http://swagger.io",
        },
        "name": "user",
      },
    ],
  },
  "value": {
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io",
    },
    "info": {
      "contact": {
        "email": "apiteam@swagger.io",
      },
      "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
      },
      "termsOfService": "http://swagger.io/terms/",
      "title": "Swagger Petstore",
      "version": "1.0.0",
    },
    "openapi": "3.0.1",
    "servers": [
      {
        "url": "https://petstore.swagger.io/v2",
      },
      {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "tags": [
      {
        "description": "Everything about your Pets",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io",
        },
        "name": "pet",
      },
      {
        "description": "Access to Petstore orders",
        "name": "store",
      },
      {
        "description": "Operations about user",
        "externalDocs": {
          "description": "Find out more about our store",
          "url": "http://swagger.io",
        },
        "name": "user",
      },
    ],
  },
}
`;
