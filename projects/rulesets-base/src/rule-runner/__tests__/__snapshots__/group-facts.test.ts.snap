// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`groupFacts for petstore example 1`] = `
{
  "endpoints": Map {
    "get /example" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": [
            "operations",
            "/example",
            "get",
          ],
          "jsonPath": "/paths/~1example/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "operationId": "getExamples",
          "pathPattern": "/example",
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": [
            "operations",
            "/example",
            "get",
          ],
          "jsonPath": "/paths/~1example/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "operationId": "getExamples",
          "pathPattern": "/example",
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/example",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {
          "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
        },
        "before": Set {
          "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
          "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
        },
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/example",
              },
              "conceptualPath": [
                "operations",
                "/example",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1example/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "succesful",
              "statusCode": "200",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/example",
              },
              "conceptualPath": [
                "operations",
                "/example",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1example/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "succesful",
              "statusCode": "200",
            },
          },
          "bodies": Map {
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/example",
                  },
                  "conceptualPath": [
                    "operations",
                    "/example",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/example",
                  },
                  "conceptualPath": [
                    "operations",
                    "/example",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1example/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "change": null,
              "fields": Map {
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "stringOrNumberOrObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "stringOrNumberOrObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                        ],
                      },
                      "key": "stringOrNumberOrObject",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "stringOrNumberOrObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "stringOrNumberOrObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "type": "number",
                          },
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "stringOrNumberOrObject",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "oneOf": [
                            {
                              "type": "string",
                            },
                            {
                              "type": "number",
                            },
                          ],
                        },
                        "key": "stringOrNumberOrObject",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "oneOf": [
                            {
                              "type": "string",
                            },
                            {
                              "type": "number",
                            },
                            {
                              "properties": {
                                "orderId": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          ],
                        },
                        "key": "stringOrNumberOrObject",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "stringOrNumberOrObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "stringOrNumberOrObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2/properties/orderId" => {
                  "after": null,
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "stringOrNumberOrObject",
                          "orderId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "stringOrNumberOrObject",
                        "oneOf",
                        "2",
                        "orderId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2/properties/orderId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "orderId",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "removed",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "stringOrNumberOrObject",
                          "orderId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "stringOrNumberOrObject",
                        "oneOf",
                        "2",
                        "orderId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/stringOrNumberOrObject/oneOf/2/properties/orderId",
                      "kind": "field",
                    },
                    "removed": {
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "orderId",
                        "required": false,
                      },
                    },
                  },
                },
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "composedObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "composedObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "allOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "number",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "fulfillmentId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "composedObject",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "composedObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "composedObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "allOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "fulfillmentId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "composedObject",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "allOf": [
                            {
                              "properties": {
                                "orderId": {
                                  "type": "number",
                                },
                              },
                              "type": "object",
                            },
                            {
                              "properties": {
                                "fulfillmentId": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          ],
                        },
                        "key": "composedObject",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "allOf": [
                            {
                              "properties": {
                                "orderId": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            {
                              "properties": {
                                "fulfillmentId": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          ],
                        },
                        "key": "composedObject",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "composedObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "composedObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "composedObject",
                          "orderId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "composedObject",
                        "allOf",
                        "0",
                        "orderId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "number",
                      },
                      "key": "orderId",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "composedObject",
                          "orderId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "composedObject",
                        "allOf",
                        "0",
                        "orderId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "orderId",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "type": "number",
                        },
                        "key": "orderId",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "orderId",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "composedObject",
                          "orderId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "composedObject",
                        "allOf",
                        "0",
                        "orderId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/0/properties/orderId",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1/properties/fulfillmentId" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "composedObject",
                          "fulfillmentId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "composedObject",
                        "allOf",
                        "1",
                        "fulfillmentId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1/properties/fulfillmentId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "fulfillmentId",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "composedObject",
                          "fulfillmentId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "composedObject",
                        "allOf",
                        "1",
                        "fulfillmentId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/composedObject/allOf/1/properties/fulfillmentId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "fulfillmentId",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "anyOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          {
                            "properties": {
                              "order": {
                                "properties": {
                                  "id": {
                                    "type": "string",
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "expandableObject",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "anyOf": [
                          {
                            "properties": {
                              "orderId": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": "expandableObject",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "anyOf": [
                            {
                              "properties": {
                                "orderId": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            {
                              "properties": {
                                "order": {
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                              },
                              "type": "object",
                            },
                          ],
                        },
                        "key": "expandableObject",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "anyOf": [
                            {
                              "properties": {
                                "orderId": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          ],
                        },
                        "key": "expandableObject",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0/properties/orderId" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                          "orderId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                        "anyOf",
                        "0",
                        "orderId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0/properties/orderId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "orderId",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                          "orderId",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                        "anyOf",
                        "0",
                        "orderId",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/0/properties/orderId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "orderId",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                          "order",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                        "anyOf",
                        "1",
                        "order",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "object",
                      },
                      "key": "order",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "object",
                      },
                      "key": "order",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                          "order",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                        "anyOf",
                        "1",
                        "order",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                          "order",
                          "id",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                        "anyOf",
                        "1",
                        "order",
                        "id",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "expandableObject",
                          "order",
                          "id",
                        ],
                        "method": "get",
                        "path": "/example",
                      },
                      "conceptualPath": [
                        "operations",
                        "/example",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "expandableObject",
                        "anyOf",
                        "1",
                        "order",
                        "id",
                      ],
                      "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/expandableObject/anyOf/1/properties/order/properties/id",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "200",
        },
      },
    },
    "get /pet" => {
      "after": null,
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "get",
          ],
          "jsonPath": "/paths/~1pet/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "pathPattern": "/pet",
        },
      },
      "change": {
        "changeType": "removed",
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "get",
          ],
          "jsonPath": "/paths/~1pet/get",
          "kind": "operation",
        },
        "removed": {
          "before": {
            "method": "get",
            "pathPattern": "/pet",
          },
        },
      },
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/pet",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "404" => {
          "after": null,
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet/get/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Pet not found",
              "statusCode": "404",
            },
          },
          "bodies": Map {},
          "change": {
            "changeType": "removed",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet/get/responses/404",
              "kind": "response",
            },
            "removed": {
              "before": {
                "description": "Pet not found",
                "statusCode": "404",
              },
            },
          },
          "headers": Map {},
          "statusCode": "404",
        },
        "405" => {
          "after": null,
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "get",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "get",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet/get/responses/405",
              "kind": "response",
            },
            "value": {
              "description": "Validation exception",
              "statusCode": "405",
            },
          },
          "bodies": Map {},
          "change": {
            "changeType": "removed",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "get",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "get",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet/get/responses/405",
              "kind": "response",
            },
            "removed": {
              "before": {
                "description": "Validation exception",
                "statusCode": "405",
              },
            },
          },
          "headers": Map {},
          "statusCode": "405",
        },
      },
    },
    "post /pet" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "post",
          ],
          "jsonPath": "/paths/~1pet/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "addPet-change",
          "pathPattern": "/pet",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Add a new pet to the store",
          "tags": [
            "pet",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "post",
          ],
          "jsonPath": "/paths/~1pet/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "addPet",
          "pathPattern": "/pet",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Add a new pet to the store",
          "tags": [
            "pet",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "change": {
        "changeType": "changed",
        "changed": {
          "after": {
            "method": "post",
            "operationId": "addPet-change",
            "pathPattern": "/pet",
            "security": [
              {
                "petstore_auth": [
                  "write:pets",
                  "read:pets",
                ],
              },
            ],
            "summary": "Add a new pet to the store",
            "tags": [
              "pet",
            ],
            "x-codegen-request-body-name": "body",
          },
          "before": {
            "method": "post",
            "operationId": "addPet",
            "pathPattern": "/pet",
            "security": [
              {
                "petstore_auth": [
                  "write:pets",
                  "read:pets",
                ],
              },
            ],
            "summary": "Add a new pet to the store",
            "tags": [
              "pet",
            ],
            "x-codegen-request-body-name": "body",
          },
        },
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "post",
          ],
          "jsonPath": "/paths/~1pet/post",
          "kind": "operation",
        },
      },
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "post",
      "path": "/pet",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/pet",
            },
            "conceptualPath": [
              "operations",
              "/pet",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "Pet object that needs to be added to the store",
            "required": true,
          },
        },
        "before": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/pet",
            },
            "conceptualPath": [
              "operations",
              "/pet",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "Pet object that needs to be added to the store",
            "required": true,
          },
        },
        "bodies": Map {
          "application/json" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/json",
                    },
                  },
                  "method": "post",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "post",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json",
                "kind": "body",
              },
              "value": {
                "contentType": "application/json",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/json",
                    },
                  },
                  "method": "post",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "post",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json",
                "kind": "body",
              },
              "value": {
                "contentType": "application/json",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "change": null,
            "fields": Map {
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category/properties/name" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/name" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/photoUrls" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/photoUrls",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/photoUrls",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags/items/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags/items/properties/name" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/status" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/json",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1json/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "change": null,
              },
            },
            "schemas": Map {},
          },
          "application/xml" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/xml",
                    },
                  },
                  "method": "post",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "post",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml",
                "kind": "body",
              },
              "value": {
                "contentType": "application/xml",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/xml",
                    },
                  },
                  "method": "post",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "post",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml",
                "kind": "body",
              },
              "value": {
                "contentType": "application/xml",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "change": null,
            "fields": Map {
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category/properties/name" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/name" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/photoUrls" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/photoUrls",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/photoUrls",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags/items/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags/items/properties/name" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/status" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "post",
                      "application/xml",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet/post/requestBody/content/application~1xml/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "change": null,
              },
            },
            "schemas": Map {},
          },
        },
        "change": null,
      },
      "responses": Map {
        "405" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "post",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "post",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet/post/responses/405",
              "kind": "response",
            },
            "value": {
              "description": "Invalid input",
              "statusCode": "405",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "post",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "post",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet/post/responses/405",
              "kind": "response",
            },
            "value": {
              "description": "Invalid input",
              "statusCode": "405",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "405",
        },
      },
    },
    "put /pet" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "put",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "put",
          ],
          "jsonPath": "/paths/~1pet/put",
          "kind": "operation",
        },
        "value": {
          "method": "put",
          "pathPattern": "/pet",
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "put",
            "path": "/pet",
          },
          "conceptualPath": [
            "operations",
            "/pet",
            "put",
          ],
          "jsonPath": "/paths/~1pet/put",
          "kind": "operation",
        },
        "value": {
          "method": "put",
          "pathPattern": "/pet",
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "put",
      "path": "/pet",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "put",
              "path": "/pet",
            },
            "conceptualPath": [
              "operations",
              "/pet",
              "put",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet/put/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "Pet object that needs to be added to the store",
            "required": true,
          },
        },
        "before": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "put",
              "path": "/pet",
            },
            "conceptualPath": [
              "operations",
              "/pet",
              "put",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet/put/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "Pet object that needs to be added to the store",
            "required": true,
          },
        },
        "bodies": Map {
          "application/json" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/json",
                    },
                  },
                  "method": "put",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "put",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json",
                "kind": "body",
              },
              "value": {
                "contentType": "application/json",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/json",
                    },
                  },
                  "method": "put",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "put",
                  "application/json",
                ],
                "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json",
                "kind": "body",
              },
              "value": {
                "contentType": "application/json",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "change": null,
            "fields": Map {
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/name" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/name" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/name",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/photoUrls" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/photoUrls",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/photoUrls",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/name" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/status" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/number" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "number",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "number",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/number",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "number",
                    "required": true,
                  },
                },
                "before": null,
                "change": {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "number",
                    "required": true,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/json",
                        },
                      },
                      "jsonSchemaTrail": [
                        "number",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/json",
                      "number",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1json/schema/properties/number",
                    "kind": "field",
                  },
                },
              },
            },
            "schemas": Map {},
          },
          "application/xml" => {
            "after": null,
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/xml",
                    },
                  },
                  "method": "put",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "put",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml",
                "kind": "body",
              },
              "value": {
                "contentType": "application/xml",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Pet",
                  },
                },
              },
            },
            "change": {
              "changeType": "removed",
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/xml",
                    },
                  },
                  "method": "put",
                  "path": "/pet",
                },
                "conceptualPath": [
                  "operations",
                  "/pet",
                  "put",
                  "application/xml",
                ],
                "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml",
                "kind": "body",
              },
              "removed": {
                "before": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
              },
            },
            "fields": Map {
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/id" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/id",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "object",
                      "xml": {
                        "name": "Category",
                      },
                    },
                    "key": "category",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "category",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category/properties/id" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "category",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category/properties/id",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category/properties/name" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "category",
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "category",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/category/properties/name",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/name" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "example": "doggie",
                      "type": "string",
                    },
                    "key": "name",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/name",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/photoUrls" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/photoUrls",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "photoUrl",
                        "wrapped": true,
                      },
                    },
                    "key": "photoUrls",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "photoUrls",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "photoUrls",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/photoUrls",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "array",
                      "xml": {
                        "name": "tag",
                        "wrapped": true,
                      },
                    },
                    "key": "tags",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "tags",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags/items/properties/id" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "id",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "tags",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags/items/properties/id",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags/items/properties/name" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "name",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "tags",
                        "items",
                        "name",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "tags",
                      "items",
                      "name",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/tags/items/properties/name",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/status" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "pet status in the store",
                      "enum": [
                        "available",
                        "pending",
                        "sold",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "application/xml",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "put",
                      "path": "/pet",
                    },
                    "conceptualPath": [
                      "operations",
                      "/pet",
                      "put",
                      "application/xml",
                      "status",
                    ],
                    "jsonPath": "/paths/~1pet/put/requestBody/content/application~1xml/schema/properties/status",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                },
              },
            },
            "schemas": Map {},
          },
        },
        "change": null,
      },
      "responses": Map {
        "400" => {
          "after": null,
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet/put/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
          },
          "bodies": Map {},
          "change": {
            "changeType": "removed",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet/put/responses/400",
              "kind": "response",
            },
            "removed": {
              "before": {
                "description": "Invalid ID supplied",
                "statusCode": "400",
              },
            },
          },
          "headers": Map {},
          "statusCode": "400",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet/put/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Pet not found",
              "statusCode": "404",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet/put/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Pet not found",
              "statusCode": "404",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "404",
        },
        "405" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet/put/responses/405",
              "kind": "response",
            },
            "value": {
              "description": "Validation exception",
              "statusCode": "405",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "put",
                "path": "/pet",
              },
              "conceptualPath": [
                "operations",
                "/pet",
                "put",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet/put/responses/405",
              "kind": "response",
            },
            "value": {
              "description": "Validation exception",
              "statusCode": "405",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "405",
        },
      },
    },
    "post /pet/{petId}/uploadImage" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet/{petId}/uploadImage",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}/uploadImage",
            "post",
          ],
          "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "uploadFile",
          "pathPattern": "/pet/{petId}/uploadImage",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "uploads an image",
          "tags": [
            "pet",
          ],
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet/{petId}/uploadImage",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}/uploadImage",
            "post",
          ],
          "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "uploadFile",
          "pathPattern": "/pet/{petId}/uploadImage",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "uploads an image",
          "tags": [
            "pet",
          ],
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "post",
      "path": "/pet/{petId}/uploadImage",
      "pathParameters": Map {
        "petId" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "ID of pet to update",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "ID of pet to update",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
          },
          "change": null,
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/pet/{petId}/uploadImage",
            },
            "conceptualPath": [
              "operations",
              "/pet/{}/uploadImage",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/requestBody",
            "kind": "request",
          },
          "value": {},
        },
        "before": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/pet/{petId}/uploadImage",
            },
            "conceptualPath": [
              "operations",
              "/pet/{}/uploadImage",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/requestBody",
            "kind": "request",
          },
          "value": {},
        },
        "bodies": Map {
          "multipart/form-data" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "multipart/form-data",
                    },
                  },
                  "method": "post",
                  "path": "/pet/{petId}/uploadImage",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}/uploadImage",
                  "post",
                  "multipart/form-data",
                ],
                "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/requestBody/content/multipart~1form-data",
                "kind": "body",
              },
              "value": {
                "contentType": "multipart/form-data",
                "flatSchema": {},
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "multipart/form-data",
                    },
                  },
                  "method": "post",
                  "path": "/pet/{petId}/uploadImage",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}/uploadImage",
                  "post",
                  "multipart/form-data",
                ],
                "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/requestBody/content/multipart~1form-data",
                "kind": "body",
              },
              "value": {
                "contentType": "multipart/form-data",
                "flatSchema": {},
              },
            },
            "change": null,
            "fields": Map {},
            "schemas": Map {},
          },
        },
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": null,
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "bodies": Map {
            "application/json" => {
              "after": null,
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "change": {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json",
                  "kind": "body",
                },
                "removed": {
                  "before": {
                    "contentType": "application/json",
                    "flatSchema": {
                      "type": "object",
                    },
                  },
                },
              },
              "fields": Map {
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/code" => {
                  "after": null,
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "removed",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "removed": {
                      "before": {
                        "flatSchema": {
                          "format": "int32",
                          "type": "integer",
                        },
                        "key": "code",
                        "required": false,
                      },
                    },
                  },
                },
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/type" => {
                  "after": null,
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "removed",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "removed": {
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "type",
                        "required": false,
                      },
                    },
                  },
                },
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/message" => {
                  "after": null,
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "removed",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "removed": {
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "message",
                        "required": false,
                      },
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": {
            "changeType": "removed",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200",
              "kind": "response",
            },
            "removed": {
              "before": {
                "description": "successful operation",
                "statusCode": "200",
              },
            },
          },
          "headers": Map {},
          "statusCode": "200",
        },
        "default" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "bodies": Map {
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "default",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "default",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "default",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "default",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "change": null,
              "fields": Map {
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/code" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "default",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "default",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "default",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "default",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/type" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "default",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "default",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "integer",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "default",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "default",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "type": "integer",
                        },
                        "key": "type",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "type",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "default",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "default",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/message" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "default",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "default",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "default",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "default",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/default/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                  "change": null,
                },
              },
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "default",
        },
        "201" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "201",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "201",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "201",
            },
          },
          "before": null,
          "bodies": Map {
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "201",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "201",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "201",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "201",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/code" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "201",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "201",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "201",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "201",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/type" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "201",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "201",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "201",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "201",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/message" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "201",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "201",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "201",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "201",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": {
            "added": {
              "description": "successful operation",
              "statusCode": "201",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "201",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "201",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/201",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "201",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Pet not found",
              "statusCode": "404",
            },
          },
          "before": null,
          "bodies": Map {
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "post",
                    "path": "/pet/{petId}/uploadImage",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}/uploadImage",
                    "post",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/code" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "404",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "404",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/type" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "404",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "404",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/message" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "404",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "post",
                        "path": "/pet/{petId}/uploadImage",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}/uploadImage",
                        "post",
                        "responses",
                        "404",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": {
            "added": {
              "description": "Pet not found",
              "statusCode": "404",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "post",
                "path": "/pet/{petId}/uploadImage",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}/uploadImage",
                "post",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/404",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "404",
        },
      },
    },
    "get /store/inventory" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/store/inventory",
          },
          "conceptualPath": [
            "operations",
            "/store/inventory",
            "get",
          ],
          "jsonPath": "/paths/~1store~1inventory/get",
          "kind": "operation",
        },
        "value": {
          "description": "Returns a map of status codes to quantities",
          "method": "get",
          "operationId": "getInventory",
          "pathPattern": "/store/inventory",
          "security": [
            {
              "api_key": [],
            },
          ],
          "summary": "Returns pet inventories by status",
          "tags": [
            "store",
          ],
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/store/inventory",
          },
          "conceptualPath": [
            "operations",
            "/store/inventory",
            "get",
          ],
          "jsonPath": "/paths/~1store~1inventory/get",
          "kind": "operation",
        },
        "value": {
          "description": "Returns a map of status codes to quantities",
          "method": "get",
          "operationId": "getInventory",
          "pathPattern": "/store/inventory",
          "security": [
            {
              "api_key": [],
            },
          ],
          "summary": "Returns pet inventories by status",
          "tags": [
            "store",
          ],
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/store/inventory",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/store/inventory",
              },
              "conceptualPath": [
                "operations",
                "/store/inventory",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1store~1inventory/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/store/inventory",
              },
              "conceptualPath": [
                "operations",
                "/store/inventory",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1store~1inventory/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "bodies": Map {
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/store/inventory",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/inventory",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1inventory/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "additionalProperties": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "type": "object",
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/store/inventory",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/inventory",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1inventory/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "additionalProperties": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "type": "object",
                  },
                },
              },
              "change": null,
              "fields": Map {},
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "200",
        },
      },
    },
    "post /store/order" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/store/order",
          },
          "conceptualPath": [
            "operations",
            "/store/order",
            "post",
          ],
          "jsonPath": "/paths/~1store~1order/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "placeOrder",
          "pathPattern": "/store/order",
          "summary": "Place an order for a pet",
          "tags": [
            "store",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/store/order",
          },
          "conceptualPath": [
            "operations",
            "/store/order",
            "post",
          ],
          "jsonPath": "/paths/~1store~1order/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "placeOrder",
          "pathPattern": "/store/order",
          "summary": "Place an order for a pet",
          "tags": [
            "store",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "post",
      "path": "/store/order",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/store/order",
            },
            "conceptualPath": [
              "operations",
              "/store/order",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1store~1order/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "order placed for purchasing the pet",
            "required": true,
          },
        },
        "before": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/store/order",
            },
            "conceptualPath": [
              "operations",
              "/store/order",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1store~1order/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "order placed for purchasing the pet",
            "required": true,
          },
        },
        "bodies": Map {
          "*/*" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "post",
                  "path": "/store/order",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order",
                  "post",
                  "*/*",
                ],
                "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Order",
                  },
                },
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "post",
                  "path": "/store/order",
                },
                "conceptualPath": [
                  "operations",
                  "/store/order",
                  "post",
                  "*/*",
                ],
                "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "Order",
                  },
                },
              },
            },
            "change": null,
            "fields": Map {
              "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "id",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "id",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/petId" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "petId",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "petId",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/petId",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "petId",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "petId",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "petId",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/petId",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "petId",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/quantity" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "quantity",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "quantity",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/quantity",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "quantity",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "quantity",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "quantity",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/quantity",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "quantity",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/shipDate" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "shipDate",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "shipDate",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/shipDate",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "date-time",
                      "type": "string",
                    },
                    "key": "shipDate",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "shipDate",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "shipDate",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/shipDate",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "date-time",
                      "type": "string",
                    },
                    "key": "shipDate",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/status" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "status",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "Order Status",
                      "enum": [
                        "placed",
                        "delivered",
                        "canceled",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "status",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/status",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "Order Status",
                      "enum": [
                        "placed",
                        "approved",
                        "delivered",
                      ],
                      "type": "string",
                    },
                    "key": "status",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "status",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "status",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/status",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/complete" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "complete",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "complete",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/complete",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "default": false,
                      "type": "boolean",
                    },
                    "key": "complete",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "complete",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "complete",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/complete",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "default": false,
                      "type": "boolean",
                    },
                    "key": "complete",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/summary" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "summary",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "summary",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/summary",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "Human readable summary of order",
                      "type": "string",
                    },
                    "key": "summary",
                    "required": false,
                  },
                },
                "before": null,
                "change": {
                  "added": {
                    "flatSchema": {
                      "description": "Human readable summary of order",
                      "type": "string",
                    },
                    "key": "summary",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "summary",
                      ],
                      "method": "post",
                      "path": "/store/order",
                    },
                    "conceptualPath": [
                      "operations",
                      "/store/order",
                      "post",
                      "*/*",
                      "summary",
                    ],
                    "jsonPath": "/paths/~1store~1order/post/requestBody/content/*~1*/schema/properties/summary",
                    "kind": "field",
                  },
                },
              },
            },
            "schemas": Map {},
          },
        },
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "post",
                "path": "/store/order",
              },
              "conceptualPath": [
                "operations",
                "/store/order",
                "post",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1store~1order/post/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "post",
                "path": "/store/order",
              },
              "conceptualPath": [
                "operations",
                "/store/order",
                "post",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1store~1order/post/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "bodies": Map {
            "application/xml" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "post",
                    "path": "/store/order",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order",
                    "post",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "post",
                    "path": "/store/order",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order",
                    "post",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "change": null,
              "fields": Map {
                "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "id",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "id",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/petId" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/petId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/petId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/quantity" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "quantity",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "quantity",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/quantity",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "quantity",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "quantity",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "quantity",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/quantity",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "quantity",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/shipDate" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "shipDate",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "shipDate",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/shipDate",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "key": "shipDate",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "shipDate",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "shipDate",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/shipDate",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "key": "shipDate",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "description": "Order Status",
                          "enum": [
                            "placed",
                            "delivered",
                            "canceled",
                          ],
                          "type": "string",
                        },
                        "key": "status",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "description": "Order Status",
                          "enum": [
                            "placed",
                            "approved",
                            "delivered",
                          ],
                          "type": "string",
                        },
                        "key": "status",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/status",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/complete" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "complete",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "complete",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/complete",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "default": false,
                        "type": "boolean",
                      },
                      "key": "complete",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "complete",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "complete",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/complete",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "default": false,
                        "type": "boolean",
                      },
                      "key": "complete",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/summary" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "summary",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "summary",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/summary",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                      "key": "summary",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                      "key": "summary",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "summary",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/xml",
                        "summary",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1xml/schema/properties/summary",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "post",
                    "path": "/store/order",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order",
                    "post",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "post",
                    "path": "/store/order",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order",
                    "post",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "change": null,
              "fields": Map {
                "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "id",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "id",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/petId" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/petId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/petId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/quantity" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "quantity",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "quantity",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/quantity",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "quantity",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "quantity",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "quantity",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/quantity",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "quantity",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/shipDate" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "shipDate",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "shipDate",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/shipDate",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "key": "shipDate",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "shipDate",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "shipDate",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/shipDate",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "key": "shipDate",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "description": "Order Status",
                          "enum": [
                            "placed",
                            "delivered",
                            "canceled",
                          ],
                          "type": "string",
                        },
                        "key": "status",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "description": "Order Status",
                          "enum": [
                            "placed",
                            "approved",
                            "delivered",
                          ],
                          "type": "string",
                        },
                        "key": "status",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/status",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/complete" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "complete",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "complete",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/complete",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "default": false,
                        "type": "boolean",
                      },
                      "key": "complete",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "complete",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "complete",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/complete",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "default": false,
                        "type": "boolean",
                      },
                      "key": "complete",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/summary" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "summary",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "summary",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/summary",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                      "key": "summary",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                      "key": "summary",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "summary",
                        ],
                        "method": "post",
                        "path": "/store/order",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order",
                        "post",
                        "responses",
                        "200",
                        "application/json",
                        "summary",
                      ],
                      "jsonPath": "/paths/~1store~1order/post/responses/200/content/application~1json/schema/properties/summary",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "200",
        },
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "post",
                "path": "/store/order",
              },
              "conceptualPath": [
                "operations",
                "/store/order",
                "post",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1store~1order/post/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid Order",
              "statusCode": "400",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "post",
                "path": "/store/order",
              },
              "conceptualPath": [
                "operations",
                "/store/order",
                "post",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1store~1order/post/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid Order",
              "statusCode": "400",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "400",
        },
      },
    },
    "get /store/order/{orderId}" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/store/order/{orderId}",
          },
          "conceptualPath": [
            "operations",
            "/store/order/{}",
            "get",
          ],
          "jsonPath": "/paths/~1store~1order~1{orderId}/get",
          "kind": "operation",
        },
        "value": {
          "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
          "method": "get",
          "operationId": "getOrderById",
          "pathPattern": "/store/order/{orderId}",
          "summary": "Find purchase order by ID",
          "tags": [
            "store",
          ],
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/store/order/{orderId}",
          },
          "conceptualPath": [
            "operations",
            "/store/order/{}",
            "get",
          ],
          "jsonPath": "/paths/~1store~1order~1{orderId}/get",
          "kind": "operation",
        },
        "value": {
          "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
          "method": "get",
          "operationId": "getOrderById",
          "pathPattern": "/store/order/{orderId}",
          "summary": "Find purchase order by ID",
          "tags": [
            "store",
          ],
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/store/order/{orderId}",
      "pathParameters": Map {
        "orderId" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "orderId",
                },
                "method": "get",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "get",
                "parameters",
                "path",
                "orderId",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/get/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "ID of pet that needs to be fetched",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": {
                "format": "int64",
                "maximum": 10,
                "minimum": 1,
                "type": "integer",
              },
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "orderId",
                },
                "method": "get",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "get",
                "parameters",
                "path",
                "orderId",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/get/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "ID of pet that needs to be fetched",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": {
                "format": "int64",
                "maximum": 10,
                "minimum": 1,
                "type": "integer",
              },
            },
          },
          "change": null,
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "bodies": Map {
            "application/xml" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "change": null,
              "fields": Map {
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "id",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "id",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": true,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": true,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "key": "petId",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "key": "petId",
                        "required": true,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/petId",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "quantity",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "quantity",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "quantity",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "quantity",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "quantity",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/quantity",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "quantity",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "shipDate",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "shipDate",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "key": "shipDate",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "shipDate",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "shipDate",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/shipDate",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "key": "shipDate",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "description": "Order Status",
                          "enum": [
                            "placed",
                            "delivered",
                            "canceled",
                          ],
                          "type": "string",
                        },
                        "key": "status",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "description": "Order Status",
                          "enum": [
                            "placed",
                            "approved",
                            "delivered",
                          ],
                          "type": "string",
                        },
                        "key": "status",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/status",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "complete",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "complete",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "default": false,
                        "type": "boolean",
                      },
                      "key": "complete",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "complete",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "complete",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/complete",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "default": false,
                        "type": "boolean",
                      },
                      "key": "complete",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/summary" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "summary",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "summary",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/summary",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                      "key": "summary",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                      "key": "summary",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "summary",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "summary",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema/properties/summary",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Order",
                    },
                  },
                },
              },
              "change": null,
              "fields": Map {
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "id",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "id",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "petId",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "petId",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/petId",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "petId",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "quantity",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "quantity",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "quantity",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "quantity",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "quantity",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/quantity",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "quantity",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "shipDate",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "shipDate",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "key": "shipDate",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "shipDate",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "shipDate",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/shipDate",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "date-time",
                        "type": "string",
                      },
                      "key": "shipDate",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "delivered",
                          "canceled",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Order Status",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "description": "Order Status",
                          "enum": [
                            "placed",
                            "delivered",
                            "canceled",
                          ],
                          "type": "string",
                        },
                        "key": "status",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "description": "Order Status",
                          "enum": [
                            "placed",
                            "approved",
                            "delivered",
                          ],
                          "type": "string",
                        },
                        "key": "status",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "status",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/status",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "complete",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "complete",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "default": false,
                        "type": "boolean",
                      },
                      "key": "complete",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "complete",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "complete",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/complete",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "default": false,
                        "type": "boolean",
                      },
                      "key": "complete",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/summary" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "summary",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "summary",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/summary",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                      "key": "summary",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "Human readable summary of order",
                        "type": "string",
                      },
                      "key": "summary",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "summary",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "summary",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema/properties/summary",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "200",
        },
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "400",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Order not found",
              "statusCode": "404",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Order not found",
              "statusCode": "404",
            },
          },
          "bodies": Map {
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "get",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "get",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "get",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "get",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/code" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/type" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/message" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "get",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "404",
        },
      },
    },
    "delete /store/order/{orderId}" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "delete",
            "path": "/store/order/{orderId}",
          },
          "conceptualPath": [
            "operations",
            "/store/order/{}",
            "delete",
          ],
          "jsonPath": "/paths/~1store~1order~1{orderId}/delete",
          "kind": "operation",
        },
        "value": {
          "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
          "method": "delete",
          "operationId": "deleteOrder",
          "pathPattern": "/store/order/{orderId}",
          "summary": "Delete purchase order by ID",
          "tags": [
            "store",
          ],
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "delete",
            "path": "/store/order/{orderId}",
          },
          "conceptualPath": [
            "operations",
            "/store/order/{}",
            "delete",
          ],
          "jsonPath": "/paths/~1store~1order~1{orderId}/delete",
          "kind": "operation",
        },
        "value": {
          "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
          "method": "delete",
          "operationId": "deleteOrder",
          "pathPattern": "/store/order/{orderId}",
          "summary": "Delete purchase order by ID",
          "tags": [
            "store",
          ],
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "delete",
      "path": "/store/order/{orderId}",
      "pathParameters": Map {
        "orderId" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "orderId",
                },
                "method": "delete",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "delete",
                "parameters",
                "path",
                "orderId",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/delete/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "ID of the order that needs to be deleted",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": {
                "format": "int64",
                "minimum": 1,
                "type": "integer",
              },
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "orderId",
                },
                "method": "delete",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "delete",
                "parameters",
                "path",
                "orderId",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/delete/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "ID of the order that needs to be deleted",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": {
                "format": "int64",
                "minimum": 1,
                "type": "integer",
              },
            },
          },
          "change": null,
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "delete",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "delete",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "delete",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "delete",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "400",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "delete",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "delete",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Order not found",
              "statusCode": "404",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "delete",
                "path": "/store/order/{orderId}",
              },
              "conceptualPath": [
                "operations",
                "/store/order/{}",
                "delete",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Order not found",
              "statusCode": "404",
            },
          },
          "bodies": Map {
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "delete",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "delete",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "delete",
                    "path": "/store/order/{orderId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/store/order/{}",
                    "delete",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/code" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "delete",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "delete",
                        "responses",
                        "404",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "delete",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "delete",
                        "responses",
                        "404",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/type" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "delete",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "delete",
                        "responses",
                        "404",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "delete",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "delete",
                        "responses",
                        "404",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/message" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "delete",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "delete",
                        "responses",
                        "404",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "delete",
                        "path": "/store/order/{orderId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/store/order/{}",
                        "delete",
                        "responses",
                        "404",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "404",
        },
      },
    },
    "post /user" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/user",
          },
          "conceptualPath": [
            "operations",
            "/user",
            "post",
          ],
          "jsonPath": "/paths/~1user/post",
          "kind": "operation",
        },
        "value": {
          "description": "This can only be done by the logged in user.",
          "method": "post",
          "operationId": "createUser",
          "pathPattern": "/user",
          "summary": "Create user",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/user",
          },
          "conceptualPath": [
            "operations",
            "/user",
            "post",
          ],
          "jsonPath": "/paths/~1user/post",
          "kind": "operation",
        },
        "value": {
          "description": "This can only be done by the logged in user.",
          "method": "post",
          "operationId": "createUser",
          "pathPattern": "/user",
          "summary": "Create user",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "post",
      "path": "/user",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/user",
            },
            "conceptualPath": [
              "operations",
              "/user",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1user/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "Created user object",
            "required": true,
          },
        },
        "before": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/user",
            },
            "conceptualPath": [
              "operations",
              "/user",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1user/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "Created user object",
            "required": true,
          },
        },
        "bodies": Map {
          "*/*" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "post",
                  "path": "/user",
                },
                "conceptualPath": [
                  "operations",
                  "/user",
                  "post",
                  "*/*",
                ],
                "jsonPath": "/paths/~1user/post/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "User",
                  },
                },
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "post",
                  "path": "/user",
                },
                "conceptualPath": [
                  "operations",
                  "/user",
                  "post",
                  "*/*",
                ],
                "jsonPath": "/paths/~1user/post/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "User",
                  },
                },
              },
            },
            "change": null,
            "fields": Map {
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "id",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "id",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/username" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "username",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/username",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "username",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/username",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "username",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/username",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/firstName" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "firstName",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "firstName",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/firstName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "firstName",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "firstName",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "firstName",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/firstName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "firstName",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/lastName" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/lastName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/lastName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/lastName",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/email" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "email",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "email",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/email",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "email",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "email",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "email",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/email",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "email",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/password" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "password",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "password",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/password",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "password",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "password",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "password",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/password",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "password",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/phone" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "phone",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/phone",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "phone",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "phone",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/phone",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "phone",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/userStatus" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/userStatus",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "User Status",
                      "enum": [
                        "activation-pending",
                        "activated",
                        "blocked",
                      ],
                      "type": "string",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/userStatus",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/userStatus",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user/post/requestBody/content/*~1*/schema/properties/bio" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "bio",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/bio",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                },
                "before": null,
                "change": {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "bio",
                      ],
                      "method": "post",
                      "path": "/user",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user",
                      "post",
                      "*/*",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user/post/requestBody/content/*~1*/schema/properties/bio",
                    "kind": "field",
                  },
                },
              },
            },
            "schemas": Map {},
          },
        },
        "change": null,
      },
      "responses": Map {
        "default" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "post",
                "path": "/user",
              },
              "conceptualPath": [
                "operations",
                "/user",
                "post",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1user/post/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "post",
                "path": "/user",
              },
              "conceptualPath": [
                "operations",
                "/user",
                "post",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1user/post/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "default",
        },
      },
    },
    "post /user/createWithArray" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/user/createWithArray",
          },
          "conceptualPath": [
            "operations",
            "/user/createWithArray",
            "post",
          ],
          "jsonPath": "/paths/~1user~1createWithArray/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "createUsersWithArrayInput",
          "pathPattern": "/user/createWithArray",
          "summary": "Creates list of users with given input array",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/user/createWithArray",
          },
          "conceptualPath": [
            "operations",
            "/user/createWithArray",
            "post",
          ],
          "jsonPath": "/paths/~1user~1createWithArray/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "createUsersWithArrayInput",
          "pathPattern": "/user/createWithArray",
          "summary": "Creates list of users with given input array",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "post",
      "path": "/user/createWithArray",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/user/createWithArray",
            },
            "conceptualPath": [
              "operations",
              "/user/createWithArray",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1user~1createWithArray/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "List of user object",
            "required": true,
          },
        },
        "before": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/user/createWithArray",
            },
            "conceptualPath": [
              "operations",
              "/user/createWithArray",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1user~1createWithArray/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "List of user object",
            "required": true,
          },
        },
        "bodies": Map {
          "*/*" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "post",
                  "path": "/user/createWithArray",
                },
                "conceptualPath": [
                  "operations",
                  "/user/createWithArray",
                  "post",
                  "*/*",
                ],
                "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "array",
                },
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "post",
                  "path": "/user/createWithArray",
                },
                "conceptualPath": [
                  "operations",
                  "/user/createWithArray",
                  "post",
                  "*/*",
                ],
                "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "array",
                },
              },
            },
            "change": null,
            "fields": Map {
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "id",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "id",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/username" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "username",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/username",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "username",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/username",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "username",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/username",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/firstName" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "firstName",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "firstName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/firstName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "firstName",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "firstName",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "firstName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/firstName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "firstName",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/lastName" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/lastName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/lastName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/lastName",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/email" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "email",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "email",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/email",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "email",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "email",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "email",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/email",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "email",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/password" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "password",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "password",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/password",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "password",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "password",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "password",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/password",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "password",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/phone" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "phone",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/phone",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "phone",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "phone",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/phone",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "phone",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/userStatus" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/userStatus",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "User Status",
                      "enum": [
                        "activation-pending",
                        "activated",
                        "blocked",
                      ],
                      "type": "string",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/userStatus",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/userStatus",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/bio" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "bio",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/bio",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                },
                "before": null,
                "change": {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "bio",
                      ],
                      "method": "post",
                      "path": "/user/createWithArray",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithArray",
                      "post",
                      "*/*",
                      "items",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items/properties/bio",
                    "kind": "field",
                  },
                },
              },
            },
            "schemas": Map {},
          },
        },
        "change": null,
      },
      "responses": Map {
        "default" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "post",
                "path": "/user/createWithArray",
              },
              "conceptualPath": [
                "operations",
                "/user/createWithArray",
                "post",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1user~1createWithArray/post/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "post",
                "path": "/user/createWithArray",
              },
              "conceptualPath": [
                "operations",
                "/user/createWithArray",
                "post",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1user~1createWithArray/post/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "default",
        },
      },
    },
    "post /user/createWithList" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/user/createWithList",
          },
          "conceptualPath": [
            "operations",
            "/user/createWithList",
            "post",
          ],
          "jsonPath": "/paths/~1user~1createWithList/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "createUsersWithListInput",
          "pathPattern": "/user/createWithList",
          "summary": "Creates list of users with given input array",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/user/createWithList",
          },
          "conceptualPath": [
            "operations",
            "/user/createWithList",
            "post",
          ],
          "jsonPath": "/paths/~1user~1createWithList/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "createUsersWithListInput",
          "pathPattern": "/user/createWithList",
          "summary": "Creates list of users with given input array",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "post",
      "path": "/user/createWithList",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/user/createWithList",
            },
            "conceptualPath": [
              "operations",
              "/user/createWithList",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1user~1createWithList/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "List of user object",
            "required": true,
          },
        },
        "before": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/user/createWithList",
            },
            "conceptualPath": [
              "operations",
              "/user/createWithList",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1user~1createWithList/post/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "List of user object",
            "required": true,
          },
        },
        "bodies": Map {
          "*/*" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "post",
                  "path": "/user/createWithList",
                },
                "conceptualPath": [
                  "operations",
                  "/user/createWithList",
                  "post",
                  "*/*",
                ],
                "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "array",
                },
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "post",
                  "path": "/user/createWithList",
                },
                "conceptualPath": [
                  "operations",
                  "/user/createWithList",
                  "post",
                  "*/*",
                ],
                "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "array",
                },
              },
            },
            "change": null,
            "fields": Map {
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "id",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "id",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "id",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/username" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "username",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/username",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "username",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/username",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "username",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/username",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/firstName" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "firstName",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "firstName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/firstName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "firstName",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "firstName",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "firstName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/firstName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "firstName",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/lastName" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/lastName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/lastName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "lastName",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/lastName",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/email" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "email",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "email",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/email",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "email",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "email",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "email",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/email",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "email",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/password" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "password",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "password",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/password",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "password",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "password",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "password",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/password",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "password",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/phone" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "phone",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/phone",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "phone",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "phone",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/phone",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "phone",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/userStatus" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/userStatus",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "User Status",
                      "enum": [
                        "activation-pending",
                        "activated",
                        "blocked",
                      ],
                      "type": "string",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/userStatus",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "userStatus",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/userStatus",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/bio" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "bio",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/bio",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                },
                "before": null,
                "change": {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "items",
                        "bio",
                      ],
                      "method": "post",
                      "path": "/user/createWithList",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/createWithList",
                      "post",
                      "*/*",
                      "items",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items/properties/bio",
                    "kind": "field",
                  },
                },
              },
            },
            "schemas": Map {},
          },
        },
        "change": null,
      },
      "responses": Map {
        "default" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "post",
                "path": "/user/createWithList",
              },
              "conceptualPath": [
                "operations",
                "/user/createWithList",
                "post",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1user~1createWithList/post/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "post",
                "path": "/user/createWithList",
              },
              "conceptualPath": [
                "operations",
                "/user/createWithList",
                "post",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1user~1createWithList/post/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "default",
        },
      },
    },
    "get /user/login" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/user/login",
          },
          "conceptualPath": [
            "operations",
            "/user/login",
            "get",
          ],
          "jsonPath": "/paths/~1user~1login/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "operationId": "loginUser",
          "pathPattern": "/user/login",
          "summary": "Logs user into the system",
          "tags": [
            "user",
          ],
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/user/login",
          },
          "conceptualPath": [
            "operations",
            "/user/login",
            "get",
          ],
          "jsonPath": "/paths/~1user~1login/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "operationId": "loginUser",
          "pathPattern": "/user/login",
          "summary": "Logs user into the system",
          "tags": [
            "user",
          ],
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/user/login",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {
        "username" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "username",
                },
                "method": "get",
                "path": "/user/login",
              },
              "conceptualPath": [
                "operations",
                "/user/login",
                "get",
                "parameters",
                "query",
                "username",
              ],
              "jsonPath": "/paths/~1user~1login/get/parameters/0",
              "kind": "query-parameter",
            },
            "value": {
              "description": "The user name for login",
              "in": "query",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "username",
                },
                "method": "get",
                "path": "/user/login",
              },
              "conceptualPath": [
                "operations",
                "/user/login",
                "get",
                "parameters",
                "query",
                "username",
              ],
              "jsonPath": "/paths/~1user~1login/get/parameters/0",
              "kind": "query-parameter",
            },
            "value": {
              "description": "The user name for login",
              "in": "query",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "change": null,
        },
        "password" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "password",
                },
                "method": "get",
                "path": "/user/login",
              },
              "conceptualPath": [
                "operations",
                "/user/login",
                "get",
                "parameters",
                "query",
                "password",
              ],
              "jsonPath": "/paths/~1user~1login/get/parameters/1",
              "kind": "query-parameter",
            },
            "value": {
              "description": "The password for login in clear text",
              "in": "query",
              "name": "password",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "password",
                },
                "method": "get",
                "path": "/user/login",
              },
              "conceptualPath": [
                "operations",
                "/user/login",
                "get",
                "parameters",
                "query",
                "password",
              ],
              "jsonPath": "/paths/~1user~1login/get/parameters/1",
              "kind": "query-parameter",
            },
            "value": {
              "description": "The password for login in clear text",
              "in": "query",
              "name": "password",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "change": null,
        },
      },
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/user/login",
              },
              "conceptualPath": [
                "operations",
                "/user/login",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1user~1login/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/user/login",
              },
              "conceptualPath": [
                "operations",
                "/user/login",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1user~1login/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "bodies": Map {
            "application/xml" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "string",
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "string",
                  },
                },
              },
              "change": null,
              "fields": Map {},
              "schemas": Map {},
            },
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "string",
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "string",
                  },
                },
              },
              "change": null,
              "fields": Map {},
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {
            "X-Expires-After" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "X-Expires-After",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "X-Expires-After",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Expires-After",
                  "kind": "response-header",
                },
                "value": {
                  "description": "date in UTC when token expires",
                  "name": "X-Expires-After",
                  "schema": {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "X-Expires-After",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "X-Expires-After",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Expires-After",
                  "kind": "response-header",
                },
                "value": {
                  "description": "date in UTC when token expires",
                  "name": "X-Expires-After",
                  "schema": {
                    "type": "number",
                  },
                },
              },
              "change": {
                "changeType": "changed",
                "changed": {
                  "after": {
                    "description": "date in UTC when token expires",
                    "name": "X-Expires-After",
                    "schema": {
                      "format": "date-time",
                      "type": "string",
                    },
                  },
                  "before": {
                    "description": "date in UTC when token expires",
                    "name": "X-Expires-After",
                    "schema": {
                      "type": "number",
                    },
                  },
                },
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "X-Expires-After",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "X-Expires-After",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Expires-After",
                  "kind": "response-header",
                },
              },
            },
            "content-type" => {
              "after": null,
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "content-type",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "content-type",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/content-type",
                  "kind": "response-header",
                },
                "value": {
                  "description": "the description goes here",
                  "name": "content-type",
                  "schema": {
                    "type": "string",
                  },
                },
              },
              "change": {
                "changeType": "removed",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "content-type",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "content-type",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/content-type",
                  "kind": "response-header",
                },
                "removed": {
                  "before": {
                    "description": "the description goes here",
                    "name": "content-type",
                    "schema": {
                      "type": "string",
                    },
                  },
                },
              },
            },
            "X-Rate-Limit" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "X-Rate-Limit",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "X-Rate-Limit",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Rate-Limit",
                  "kind": "response-header",
                },
                "value": {
                  "description": "calls per hour allowed by the user",
                  "name": "X-Rate-Limit",
                  "schema": {
                    "format": "int32",
                    "type": "integer",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "description": "calls per hour allowed by the user",
                  "name": "X-Rate-Limit",
                  "schema": {
                    "format": "int32",
                    "type": "integer",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "header": "X-Rate-Limit",
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/login",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/login",
                    "get",
                    "responses",
                    "200",
                    "headers",
                    "X-Rate-Limit",
                  ],
                  "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Rate-Limit",
                  "kind": "response-header",
                },
              },
            },
          },
          "statusCode": "200",
        },
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/user/login",
              },
              "conceptualPath": [
                "operations",
                "/user/login",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1user~1login/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid username/password supplied",
              "statusCode": "400",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/user/login",
              },
              "conceptualPath": [
                "operations",
                "/user/login",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1user~1login/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid username/password supplied",
              "statusCode": "400",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "400",
        },
      },
    },
    "get /user/logout" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/user/logout",
          },
          "conceptualPath": [
            "operations",
            "/user/logout",
            "get",
          ],
          "jsonPath": "/paths/~1user~1logout/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "operationId": "logoutUser",
          "pathPattern": "/user/logout",
          "summary": "Logs out current logged in user session",
          "tags": [
            "user",
          ],
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/user/logout",
          },
          "conceptualPath": [
            "operations",
            "/user/logout",
            "get",
          ],
          "jsonPath": "/paths/~1user~1logout/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "operationId": "logoutUser",
          "pathPattern": "/user/logout",
          "summary": "Logs out current logged in user session",
          "tags": [
            "user",
          ],
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/user/logout",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "default" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "get",
                "path": "/user/logout",
              },
              "conceptualPath": [
                "operations",
                "/user/logout",
                "get",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1user~1logout/get/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "default",
                },
                "method": "get",
                "path": "/user/logout",
              },
              "conceptualPath": [
                "operations",
                "/user/logout",
                "get",
                "responses",
                "default",
              ],
              "jsonPath": "/paths/~1user~1logout/get/responses/default",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "default",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "default",
        },
      },
    },
    "get /user/{username}" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/user/{username}",
          },
          "conceptualPath": [
            "operations",
            "/user/{}",
            "get",
          ],
          "jsonPath": "/paths/~1user~1{username}/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "operationId": "getUserByName",
          "pathPattern": "/user/{username}",
          "summary": "Get user by user name",
          "tags": [
            "user",
          ],
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/user/{username}",
          },
          "conceptualPath": [
            "operations",
            "/user/{}",
            "get",
          ],
          "jsonPath": "/paths/~1user~1{username}/get",
          "kind": "operation",
        },
        "value": {
          "method": "get",
          "operationId": "getUserByName",
          "pathPattern": "/user/{username}",
          "summary": "Get user by user name",
          "tags": [
            "user",
          ],
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/user/{username}",
      "pathParameters": Map {
        "username" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "username",
                },
                "method": "get",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "get",
                "parameters",
                "path",
                "username",
              ],
              "jsonPath": "/paths/~1user~1{username}/get/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "username",
                },
                "method": "get",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "get",
                "parameters",
                "path",
                "username",
              ],
              "jsonPath": "/paths/~1user~1{username}/get/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "change": null,
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1user~1{username}/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1user~1{username}/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "bodies": Map {
            "application/xml" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "User",
                    },
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "User",
                    },
                  },
                },
              },
              "change": null,
              "fields": Map {
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "id",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "id",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": true,
                    },
                  },
                  "change": null,
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/username" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "username",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "username",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/username",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "username",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "username",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/username",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "username",
                        "required": true,
                      },
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "username",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "username",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "username",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/username",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/firstName" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "firstName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "firstName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/firstName",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "firstName",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "firstName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "firstName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/firstName",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "firstName",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/lastName" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "lastName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "lastName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/lastName",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "lastName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "lastName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/lastName",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": true,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "lastName",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "lastName",
                        "required": true,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "lastName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "lastName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/lastName",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/email" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "email",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "email",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/email",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "email",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "email",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "email",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/email",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "email",
                      "required": true,
                    },
                  },
                  "change": null,
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/password" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "password",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "password",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/password",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "password",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "password",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "password",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/password",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "password",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/phone" => {
                  "after": null,
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "phone",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "phone",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/phone",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "phone",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "removed",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "phone",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "phone",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/phone",
                      "kind": "field",
                    },
                    "removed": {
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "phone",
                        "required": false,
                      },
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/userStatus" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "userStatus",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "userStatus",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/userStatus",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "userStatus",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "userStatus",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/userStatus",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "description": "User Status",
                          "enum": [
                            "activation-pending",
                            "activated",
                            "blocked",
                          ],
                          "type": "string",
                        },
                        "key": "userStatus",
                        "required": true,
                      },
                      "before": {
                        "flatSchema": {
                          "description": "User Status",
                          "format": "int32",
                          "type": "integer",
                        },
                        "key": "userStatus",
                        "required": true,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "userStatus",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "userStatus",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/userStatus",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/bio" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "bio",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "bio",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/bio",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "bio",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "bio",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "bio",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "bio",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema/properties/bio",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "User",
                    },
                  },
                },
              },
              "before": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "User",
                    },
                  },
                },
              },
              "change": null,
              "fields": Map {
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "id",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "id",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": true,
                    },
                  },
                  "change": null,
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/username" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "username",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "username",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/username",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "username",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "username",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/username",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "username",
                        "required": true,
                      },
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "username",
                        "required": false,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "username",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "username",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/username",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/firstName" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "firstName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "firstName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/firstName",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "firstName",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "firstName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "firstName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/firstName",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "firstName",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/lastName" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "lastName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "lastName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/lastName",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "lastName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "lastName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/lastName",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": true,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "lastName",
                        "required": false,
                      },
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "lastName",
                        "required": true,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "lastName",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "lastName",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/lastName",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/email" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "email",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "email",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/email",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "email",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "email",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "email",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/email",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "email",
                      "required": true,
                    },
                  },
                  "change": null,
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/password" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "password",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "password",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/password",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "password",
                      "required": false,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "password",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "password",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/password",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "password",
                      "required": false,
                    },
                  },
                  "change": null,
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/phone" => {
                  "after": null,
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "phone",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "phone",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/phone",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "phone",
                      "required": false,
                    },
                  },
                  "change": {
                    "changeType": "removed",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "phone",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "phone",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/phone",
                      "kind": "field",
                    },
                    "removed": {
                      "before": {
                        "flatSchema": {
                          "type": "string",
                        },
                        "key": "phone",
                        "required": false,
                      },
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/userStatus" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "userStatus",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "userStatus",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/userStatus",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "before": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "userStatus",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "userStatus",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/userStatus",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "change": {
                    "changeType": "changed",
                    "changed": {
                      "after": {
                        "flatSchema": {
                          "description": "User Status",
                          "enum": [
                            "activation-pending",
                            "activated",
                            "blocked",
                          ],
                          "type": "string",
                        },
                        "key": "userStatus",
                        "required": true,
                      },
                      "before": {
                        "flatSchema": {
                          "description": "User Status",
                          "format": "int32",
                          "type": "integer",
                        },
                        "key": "userStatus",
                        "required": true,
                      },
                    },
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "userStatus",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "userStatus",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/userStatus",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/bio" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "bio",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "bio",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/bio",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "bio",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "bio",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "bio",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "bio",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema/properties/bio",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "200",
        },
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1user~1{username}/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid username supplied",
              "statusCode": "400",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1user~1{username}/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid username supplied",
              "statusCode": "400",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "400",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1user~1{username}/get/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "User not found",
              "statusCode": "404",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1user~1{username}/get/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "User not found",
              "statusCode": "404",
            },
          },
          "bodies": Map {
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "get",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "get",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "404",
                    },
                    "method": "get",
                    "path": "/user/{username}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/user/{}",
                    "get",
                    "responses",
                    "404",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/code" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "code",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "code",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "code",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/code",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/type" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "type",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "type",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "type",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/type",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/message" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "message",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "404",
                        },
                        "jsonSchemaTrail": [
                          "message",
                        ],
                        "method": "get",
                        "path": "/user/{username}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/user/{}",
                        "get",
                        "responses",
                        "404",
                        "application/json",
                        "message",
                      ],
                      "jsonPath": "/paths/~1user~1{username}/get/responses/404/content/application~1json/schema/properties/message",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": null,
          "headers": Map {},
          "statusCode": "404",
        },
      },
    },
    "put /user/{username}" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "put",
            "path": "/user/{username}",
          },
          "conceptualPath": [
            "operations",
            "/user/{}",
            "put",
          ],
          "jsonPath": "/paths/~1user~1{username}/put",
          "kind": "operation",
        },
        "value": {
          "description": "This can only be done by the logged in user.",
          "method": "put",
          "operationId": "updateUser",
          "pathPattern": "/user/{username}",
          "summary": "Updated user",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "put",
            "path": "/user/{username}",
          },
          "conceptualPath": [
            "operations",
            "/user/{}",
            "put",
          ],
          "jsonPath": "/paths/~1user~1{username}/put",
          "kind": "operation",
        },
        "value": {
          "description": "This can only be done by the logged in user.",
          "method": "put",
          "operationId": "updateUser",
          "pathPattern": "/user/{username}",
          "summary": "Updated user",
          "tags": [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "put",
      "path": "/user/{username}",
      "pathParameters": Map {
        "username" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "username",
                },
                "method": "put",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "put",
                "parameters",
                "path",
                "username",
              ],
              "jsonPath": "/paths/~1user~1{username}/put/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "name that need to be updated",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "username",
                },
                "method": "put",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "put",
                "parameters",
                "path",
                "username",
              ],
              "jsonPath": "/paths/~1user~1{username}/put/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "name that need to be updated",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "change": null,
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "put",
              "path": "/user/{username}",
            },
            "conceptualPath": [
              "operations",
              "/user/{}",
              "put",
              "requestBody",
            ],
            "jsonPath": "/paths/~1user~1{username}/put/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "Updated user object",
            "required": true,
          },
        },
        "before": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "put",
              "path": "/user/{username}",
            },
            "conceptualPath": [
              "operations",
              "/user/{}",
              "put",
              "requestBody",
            ],
            "jsonPath": "/paths/~1user~1{username}/put/requestBody",
            "kind": "request",
          },
          "value": {
            "description": "Updated user object",
            "required": true,
          },
        },
        "bodies": Map {
          "*/*" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "put",
                  "path": "/user/{username}",
                },
                "conceptualPath": [
                  "operations",
                  "/user/{}",
                  "put",
                  "*/*",
                ],
                "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "User",
                  },
                },
              },
            },
            "before": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "*/*",
                    },
                  },
                  "method": "put",
                  "path": "/user/{username}",
                },
                "conceptualPath": [
                  "operations",
                  "/user/{}",
                  "put",
                  "*/*",
                ],
                "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*",
                "kind": "body",
              },
              "value": {
                "contentType": "*/*",
                "flatSchema": {
                  "type": "object",
                  "xml": {
                    "name": "User",
                  },
                },
              },
            },
            "change": null,
            "fields": Map {
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/id" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "id",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "id",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "id",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/id",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "format": "int64",
                      "type": "integer",
                    },
                    "key": "id",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/username" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "username",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/username",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "username",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/username",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "username",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "username",
                      "required": false,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "username",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "username",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/username",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/firstName" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "firstName",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "firstName",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/firstName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "firstName",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "firstName",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "firstName",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/firstName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "firstName",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/lastName" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "lastName",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/lastName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "lastName",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/lastName",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "lastName",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": false,
                    },
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "lastName",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "lastName",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "lastName",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/lastName",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/email" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "email",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "email",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/email",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "email",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "email",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "email",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/email",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "email",
                    "required": true,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/password" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "password",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "password",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/password",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "password",
                    "required": false,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "password",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "password",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/password",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "password",
                    "required": false,
                  },
                },
                "change": null,
              },
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/phone" => {
                "after": null,
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "phone",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/phone",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "phone",
                    "required": false,
                  },
                },
                "change": {
                  "changeType": "removed",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "phone",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "phone",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/phone",
                    "kind": "field",
                  },
                  "removed": {
                    "before": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "phone",
                      "required": false,
                    },
                  },
                },
              },
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/userStatus" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "userStatus",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/userStatus",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "User Status",
                      "enum": [
                        "activation-pending",
                        "activated",
                        "blocked",
                      ],
                      "type": "string",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "before": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "userStatus",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/userStatus",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "key": "userStatus",
                    "required": true,
                  },
                },
                "change": {
                  "changeType": "changed",
                  "changed": {
                    "after": {
                      "flatSchema": {
                        "description": "User Status",
                        "enum": [
                          "activation-pending",
                          "activated",
                          "blocked",
                        ],
                        "type": "string",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                    "before": {
                      "flatSchema": {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "key": "userStatus",
                      "required": true,
                    },
                  },
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "userStatus",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "userStatus",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/userStatus",
                    "kind": "field",
                  },
                },
              },
              "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/bio" => {
                "after": {
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "bio",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/bio",
                    "kind": "field",
                  },
                  "value": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                },
                "before": null,
                "change": {
                  "added": {
                    "flatSchema": {
                      "type": "string",
                    },
                    "key": "bio",
                    "required": false,
                  },
                  "changeType": "added",
                  "location": {
                    "conceptualLocation": {
                      "inRequest": {
                        "body": {
                          "contentType": "*/*",
                        },
                      },
                      "jsonSchemaTrail": [
                        "bio",
                      ],
                      "method": "put",
                      "path": "/user/{username}",
                    },
                    "conceptualPath": [
                      "operations",
                      "/user/{}",
                      "put",
                      "*/*",
                      "bio",
                    ],
                    "jsonPath": "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema/properties/bio",
                    "kind": "field",
                  },
                },
              },
            },
            "schemas": Map {},
          },
        },
        "change": null,
      },
      "responses": Map {
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "put",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "put",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1user~1{username}/put/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid user supplied",
              "statusCode": "400",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "put",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "put",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1user~1{username}/put/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid user supplied",
              "statusCode": "400",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "400",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "put",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "put",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1user~1{username}/put/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "User not found",
              "statusCode": "404",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "put",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "put",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1user~1{username}/put/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "User not found",
              "statusCode": "404",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "404",
        },
      },
    },
    "delete /user/{username}" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "delete",
            "path": "/user/{username}",
          },
          "conceptualPath": [
            "operations",
            "/user/{}",
            "delete",
          ],
          "jsonPath": "/paths/~1user~1{username}/delete",
          "kind": "operation",
        },
        "value": {
          "description": "This can only be done by the logged in user.",
          "method": "delete",
          "operationId": "deleteUser",
          "pathPattern": "/user/{username}",
          "summary": "Delete user",
          "tags": [
            "user",
          ],
        },
      },
      "before": {
        "location": {
          "conceptualLocation": {
            "method": "delete",
            "path": "/user/{username}",
          },
          "conceptualPath": [
            "operations",
            "/user/{}",
            "delete",
          ],
          "jsonPath": "/paths/~1user~1{username}/delete",
          "kind": "operation",
        },
        "value": {
          "description": "This can only be done by the logged in user.",
          "method": "delete",
          "operationId": "deleteUser",
          "pathPattern": "/user/{username}",
          "summary": "Delete user",
          "tags": [
            "user",
          ],
        },
      },
      "change": null,
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "delete",
      "path": "/user/{username}",
      "pathParameters": Map {
        "username" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "username",
                },
                "method": "delete",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "delete",
                "parameters",
                "path",
                "username",
              ],
              "jsonPath": "/paths/~1user~1{username}/delete/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "The name that needs to be deleted",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "username",
                },
                "method": "delete",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "delete",
                "parameters",
                "path",
                "username",
              ],
              "jsonPath": "/paths/~1user~1{username}/delete/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "The name that needs to be deleted",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
          },
          "change": null,
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "delete",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "delete",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1user~1{username}/delete/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid username supplied",
              "statusCode": "400",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "delete",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "delete",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1user~1{username}/delete/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid username supplied",
              "statusCode": "400",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "400",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "delete",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "delete",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1user~1{username}/delete/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "User not found",
              "statusCode": "404",
            },
          },
          "before": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "delete",
                "path": "/user/{username}",
              },
              "conceptualPath": [
                "operations",
                "/user/{}",
                "delete",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1user~1{username}/delete/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "User not found",
              "statusCode": "404",
            },
          },
          "bodies": Map {},
          "change": null,
          "headers": Map {},
          "statusCode": "404",
        },
      },
    },
    "get /pet/findByStatus" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/findByStatus",
          },
          "conceptualPath": [
            "operations",
            "/pet/findByStatus",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1findByStatus/get",
          "kind": "operation",
        },
        "value": {
          "description": "Multiple status values can be provided with comma separated strings",
          "method": "get",
          "operationId": "findPetsByStatus",
          "pathPattern": "/pet/findByStatus",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Finds Pets by status",
          "tags": [
            "pet",
          ],
        },
      },
      "before": null,
      "change": {
        "added": {
          "description": "Multiple status values can be provided with comma separated strings",
          "method": "get",
          "operationId": "findPetsByStatus",
          "pathPattern": "/pet/findByStatus",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Finds Pets by status",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/findByStatus",
          },
          "conceptualPath": [
            "operations",
            "/pet/findByStatus",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1findByStatus/get",
          "kind": "operation",
        },
      },
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/pet/findByStatus",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {
        "status" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "status",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "parameters",
                "query",
                "status",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/parameters/0",
              "kind": "query-parameter",
            },
            "value": {
              "description": "Status values that need to be considered for filter",
              "explode": true,
              "in": "query",
              "name": "status",
              "required": true,
              "schema": {
                "items": {
                  "default": "available",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "style": "form",
            },
          },
          "before": null,
          "change": {
            "added": {
              "description": "Status values that need to be considered for filter",
              "explode": true,
              "in": "query",
              "name": "status",
              "required": true,
              "schema": {
                "items": {
                  "default": "available",
                  "enum": [
                    "available",
                    "pending",
                    "sold",
                  ],
                  "type": "string",
                },
                "type": "array",
              },
              "style": "form",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "status",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "parameters",
                "query",
                "status",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/parameters/0",
              "kind": "query-parameter",
            },
          },
        },
      },
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "before": null,
          "bodies": Map {
            "application/xml" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByStatus",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByStatus",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "array",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "array",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByStatus",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByStatus",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/photoUrls" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/photoUrls",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/photoUrls",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1xml/schema/items/properties/status",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByStatus",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByStatus",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "array",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "array",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByStatus",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByStatus",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/category/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/photoUrls" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/photoUrls",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/photoUrls",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/findByStatus",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByStatus",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/content/application~1json/schema/items/properties/status",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": {
            "added": {
              "description": "successful operation",
              "statusCode": "200",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "200",
        },
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid status value",
              "statusCode": "400",
            },
          },
          "before": null,
          "bodies": Map {},
          "change": {
            "added": {
              "description": "Invalid status value",
              "statusCode": "400",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/findByStatus",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByStatus",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1findByStatus/get/responses/400",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "400",
        },
      },
    },
    "get /pet/findByTags" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/findByTags",
          },
          "conceptualPath": [
            "operations",
            "/pet/findByTags",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1findByTags/get",
          "kind": "operation",
        },
        "value": {
          "deprecated": true,
          "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
          "method": "get",
          "operationId": "findPetsByTags",
          "pathPattern": "/pet/findByTags",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Finds Pets by tags",
          "tags": [
            "pet",
          ],
        },
      },
      "before": null,
      "change": {
        "added": {
          "deprecated": true,
          "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
          "method": "get",
          "operationId": "findPetsByTags",
          "pathPattern": "/pet/findByTags",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Finds Pets by tags",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/findByTags",
          },
          "conceptualPath": [
            "operations",
            "/pet/findByTags",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1findByTags/get",
          "kind": "operation",
        },
      },
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/pet/findByTags",
      "pathParameters": Map {},
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {
        "tags" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "tags",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "parameters",
                "query",
                "tags",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/parameters/0",
              "kind": "query-parameter",
            },
            "value": {
              "description": "Tags to filter by",
              "explode": true,
              "in": "query",
              "name": "tags",
              "required": true,
              "schema": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "style": "form",
            },
          },
          "before": null,
          "change": {
            "added": {
              "description": "Tags to filter by",
              "explode": true,
              "in": "query",
              "name": "tags",
              "required": true,
              "schema": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "style": "form",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "query": "tags",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "parameters",
                "query",
                "tags",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/parameters/0",
              "kind": "query-parameter",
            },
          },
        },
      },
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "before": null,
          "bodies": Map {
            "application/xml" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByTags",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByTags",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "array",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "array",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByTags",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByTags",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/category/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/photoUrls" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/photoUrls",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/photoUrls",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "items",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1xml/schema/items/properties/status",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByTags",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByTags",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "array",
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "array",
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/findByTags",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/findByTags",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/category/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/photoUrls" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/photoUrls",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/photoUrls",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "items",
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/findByTags",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/findByTags",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "items",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/content/application~1json/schema/items/properties/status",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": {
            "added": {
              "description": "successful operation",
              "statusCode": "200",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/responses/200",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "200",
        },
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid tag value",
              "statusCode": "400",
            },
          },
          "before": null,
          "bodies": Map {},
          "change": {
            "added": {
              "description": "Invalid tag value",
              "statusCode": "400",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/findByTags",
              },
              "conceptualPath": [
                "operations",
                "/pet/findByTags",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1findByTags/get/responses/400",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "400",
        },
      },
    },
    "get /pet/{petId}" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/get",
          "kind": "operation",
        },
        "value": {
          "description": "Returns a single pet",
          "method": "get",
          "operationId": "getPetById",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "api_key": [],
            },
          ],
          "summary": "Find pet by ID",
          "tags": [
            "pet",
          ],
        },
      },
      "before": null,
      "change": {
        "added": {
          "description": "Returns a single pet",
          "method": "get",
          "operationId": "getPetById",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "api_key": [],
            },
          ],
          "summary": "Find pet by ID",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "get",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "get",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/get",
          "kind": "operation",
        },
      },
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "get",
      "path": "/pet/{petId}",
      "pathParameters": Map {
        "petId" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "ID of pet to return",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
          },
          "before": null,
          "change": {
            "added": {
              "description": "ID of pet to return",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/parameters/0",
              "kind": "path-parameter",
            },
          },
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "200" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/200",
              "kind": "response",
            },
            "value": {
              "description": "successful operation",
              "statusCode": "200",
            },
          },
          "before": null,
          "bodies": Map {
            "application/xml" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/{petId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/xml",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/xml",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/{petId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}",
                    "get",
                    "responses",
                    "200",
                    "application/xml",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/category/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/photoUrls" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/photoUrls",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/photoUrls",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/xml",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/xml",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1xml/schema/properties/status",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
            "application/json" => {
              "after": {
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/{petId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json",
                  "kind": "body",
                },
                "value": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
              },
              "before": null,
              "change": {
                "added": {
                  "contentType": "application/json",
                  "flatSchema": {
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
                "changeType": "added",
                "location": {
                  "conceptualLocation": {
                    "inResponse": {
                      "body": {
                        "contentType": "application/json",
                      },
                      "statusCode": "200",
                    },
                    "method": "get",
                    "path": "/pet/{petId}",
                  },
                  "conceptualPath": [
                    "operations",
                    "/pet/{}",
                    "get",
                    "responses",
                    "200",
                    "application/json",
                  ],
                  "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json",
                  "kind": "body",
                },
              },
              "fields": Map {
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "key": "category",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "category",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "category",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "category",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "category",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/category/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "key": "name",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/photoUrls" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/photoUrls",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "key": "photoUrls",
                      "required": true,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "photoUrls",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "photoUrls",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/photoUrls",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                      "key": "tags",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "tags",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags/items/properties/id" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "key": "id",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                          "items",
                          "id",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "tags",
                        "items",
                        "id",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags/items/properties/id",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags/items/properties/name" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "type": "string",
                      },
                      "key": "name",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "tags",
                          "items",
                          "name",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "tags",
                        "items",
                        "name",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/tags/items/properties/name",
                      "kind": "field",
                    },
                  },
                },
                "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/status" => {
                  "after": {
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/status",
                      "kind": "field",
                    },
                    "value": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                  },
                  "before": null,
                  "change": {
                    "added": {
                      "flatSchema": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "key": "status",
                      "required": false,
                    },
                    "changeType": "added",
                    "location": {
                      "conceptualLocation": {
                        "inResponse": {
                          "body": {
                            "contentType": "application/json",
                          },
                          "statusCode": "200",
                        },
                        "jsonSchemaTrail": [
                          "status",
                        ],
                        "method": "get",
                        "path": "/pet/{petId}",
                      },
                      "conceptualPath": [
                        "operations",
                        "/pet/{}",
                        "get",
                        "responses",
                        "200",
                        "application/json",
                        "status",
                      ],
                      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/content/application~1json/schema/properties/status",
                      "kind": "field",
                    },
                  },
                },
              },
              "schemas": Map {},
            },
          },
          "change": {
            "added": {
              "description": "successful operation",
              "statusCode": "200",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "200",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "200",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/200",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "200",
        },
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
          },
          "before": null,
          "bodies": Map {},
          "change": {
            "added": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/400",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "400",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Pet not found",
              "statusCode": "404",
            },
          },
          "before": null,
          "bodies": Map {},
          "change": {
            "added": {
              "description": "Pet not found",
              "statusCode": "404",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "get",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "get",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/get/responses/404",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "404",
        },
      },
    },
    "post /pet/{petId}" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "post",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/post",
          "kind": "operation",
        },
        "value": {
          "method": "post",
          "operationId": "updatePetWithForm",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Updates a pet in the store with form data",
          "tags": [
            "pet",
          ],
        },
      },
      "before": null,
      "change": {
        "added": {
          "method": "post",
          "operationId": "updatePetWithForm",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Updates a pet in the store with form data",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "post",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "post",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/post",
          "kind": "operation",
        },
      },
      "cookieParameters": Map {},
      "headerParameters": Map {},
      "method": "post",
      "path": "/pet/{petId}",
      "pathParameters": Map {
        "petId" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "post",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "post",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/post/parameters/0",
              "kind": "path-parameter",
            },
            "value": {
              "description": "ID of pet that needs to be updated",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
          },
          "before": null,
          "change": {
            "added": {
              "description": "ID of pet that needs to be updated",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "post",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "post",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/post/parameters/0",
              "kind": "path-parameter",
            },
          },
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": {
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/pet/{petId}",
            },
            "conceptualPath": [
              "operations",
              "/pet/{}",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet~1{petId}/post/requestBody",
            "kind": "request",
          },
          "value": {},
        },
        "before": null,
        "bodies": Map {
          "application/x-www-form-urlencoded" => {
            "after": {
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/x-www-form-urlencoded",
                    },
                  },
                  "method": "post",
                  "path": "/pet/{petId}",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}",
                  "post",
                  "application/x-www-form-urlencoded",
                ],
                "jsonPath": "/paths/~1pet~1{petId}/post/requestBody/content/application~1x-www-form-urlencoded",
                "kind": "body",
              },
              "value": {
                "contentType": "application/x-www-form-urlencoded",
                "flatSchema": {},
              },
            },
            "before": null,
            "change": {
              "added": {
                "contentType": "application/x-www-form-urlencoded",
                "flatSchema": {},
              },
              "changeType": "added",
              "location": {
                "conceptualLocation": {
                  "inRequest": {
                    "body": {
                      "contentType": "application/x-www-form-urlencoded",
                    },
                  },
                  "method": "post",
                  "path": "/pet/{petId}",
                },
                "conceptualPath": [
                  "operations",
                  "/pet/{}",
                  "post",
                  "application/x-www-form-urlencoded",
                ],
                "jsonPath": "/paths/~1pet~1{petId}/post/requestBody/content/application~1x-www-form-urlencoded",
                "kind": "body",
              },
            },
            "fields": Map {},
            "schemas": Map {},
          },
        },
        "change": {
          "added": {},
          "changeType": "added",
          "location": {
            "conceptualLocation": {
              "inRequest": {},
              "method": "post",
              "path": "/pet/{petId}",
            },
            "conceptualPath": [
              "operations",
              "/pet/{}",
              "post",
              "requestBody",
            ],
            "jsonPath": "/paths/~1pet~1{petId}/post/requestBody",
            "kind": "request",
          },
        },
      },
      "responses": Map {
        "405" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "post",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "post",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/post/responses/405",
              "kind": "response",
            },
            "value": {
              "description": "Invalid input",
              "statusCode": "405",
            },
          },
          "before": null,
          "bodies": Map {},
          "change": {
            "added": {
              "description": "Invalid input",
              "statusCode": "405",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "405",
                },
                "method": "post",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "post",
                "responses",
                "405",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/post/responses/405",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "405",
        },
      },
    },
    "delete /pet/{petId}" => {
      "after": {
        "location": {
          "conceptualLocation": {
            "method": "delete",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "delete",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/delete",
          "kind": "operation",
        },
        "value": {
          "method": "delete",
          "operationId": "deletePet",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Deletes a pet",
          "tags": [
            "pet",
          ],
        },
      },
      "before": null,
      "change": {
        "added": {
          "method": "delete",
          "operationId": "deletePet",
          "pathPattern": "/pet/{petId}",
          "security": [
            {
              "petstore_auth": [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "Deletes a pet",
          "tags": [
            "pet",
          ],
        },
        "changeType": "added",
        "location": {
          "conceptualLocation": {
            "method": "delete",
            "path": "/pet/{petId}",
          },
          "conceptualPath": [
            "operations",
            "/pet/{}",
            "delete",
          ],
          "jsonPath": "/paths/~1pet~1{petId}/delete",
          "kind": "operation",
        },
      },
      "cookieParameters": Map {},
      "headerParameters": Map {
        "api_key" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "header": "api_key",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "parameters",
                "header",
                "api_key",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/parameters/0",
              "kind": "header-parameter",
            },
            "value": {
              "in": "header",
              "name": "api_key",
              "schema": {
                "type": "string",
              },
            },
          },
          "before": null,
          "change": {
            "added": {
              "in": "header",
              "name": "api_key",
              "schema": {
                "type": "string",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "header": "api_key",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "parameters",
                "header",
                "api_key",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/parameters/0",
              "kind": "header-parameter",
            },
          },
        },
      },
      "method": "delete",
      "path": "/pet/{petId}",
      "pathParameters": Map {
        "petId" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/parameters/1",
              "kind": "path-parameter",
            },
            "value": {
              "description": "Pet id to delete",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
          },
          "before": null,
          "change": {
            "added": {
              "description": "Pet id to delete",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": {
                "format": "int64",
                "type": "integer",
              },
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inRequest": {
                  "path": "petId",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "parameters",
                "path",
                "petId",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/parameters/1",
              "kind": "path-parameter",
            },
          },
        },
      },
      "polymorphicSchemas": {
        "after": Set {},
        "before": Set {},
      },
      "queryParameters": Map {},
      "request": {
        "after": null,
        "before": null,
        "bodies": Map {},
        "change": null,
      },
      "responses": Map {
        "400" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/responses/400",
              "kind": "response",
            },
            "value": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
          },
          "before": null,
          "bodies": Map {},
          "change": {
            "added": {
              "description": "Invalid ID supplied",
              "statusCode": "400",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "400",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "responses",
                "400",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/responses/400",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "400",
        },
        "404" => {
          "after": {
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/responses/404",
              "kind": "response",
            },
            "value": {
              "description": "Pet not found",
              "statusCode": "404",
            },
          },
          "before": null,
          "bodies": Map {},
          "change": {
            "added": {
              "description": "Pet not found",
              "statusCode": "404",
            },
            "changeType": "added",
            "location": {
              "conceptualLocation": {
                "inResponse": {
                  "statusCode": "404",
                },
                "method": "delete",
                "path": "/pet/{petId}",
              },
              "conceptualPath": [
                "operations",
                "/pet/{}",
                "delete",
                "responses",
                "404",
              ],
              "jsonPath": "/paths/~1pet~1{petId}/delete/responses/404",
              "kind": "response",
            },
          },
          "headers": Map {},
          "statusCode": "404",
        },
      },
    },
  },
  "specification": {
    "after": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "externalDocs": {
          "description": "Find out more about Swagger",
          "url": "http://swagger.io",
        },
        "info": {
          "contact": {
            "email": "apiteam@swagger.io",
          },
          "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
          "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
          },
          "termsOfService": "http://swagger.io/terms/",
          "title": "Swagger Petstore Updated",
          "version": "1.0.0",
        },
        "openapi": "3.0.1",
        "servers": [
          {
            "url": "https://petstore.swagger.io/v2",
          },
          {
            "url": "http://petstore.swagger.io/v2",
          },
          {
            "url": "http://petstore.swagger.io/v3",
          },
        ],
        "tags": [
          {
            "description": "Everything about your Pets",
            "externalDocs": {
              "description": "Find out more",
              "url": "http://swagger.io",
            },
            "name": "pet",
          },
          {
            "description": "Access to Petstore orders",
            "name": "store",
          },
          {
            "description": "Operations about user",
            "externalDocs": {
              "description": "Find out more about our store",
              "url": "http://swagger.io",
            },
            "name": "user",
          },
        ],
      },
    },
    "before": {
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
      "value": {
        "externalDocs": {
          "description": "Find out more about Swagger",
          "url": "http://swagger.io",
        },
        "info": {
          "contact": {
            "email": "apiteam@swagger.io",
          },
          "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
          "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
          },
          "termsOfService": "http://swagger.io/terms/",
          "title": "Swagger Petstore",
          "version": "1.0.0",
        },
        "openapi": "3.0.1",
        "servers": [
          {
            "url": "https://petstore.swagger.io/v2",
          },
          {
            "url": "http://petstore.swagger.io/v2",
          },
        ],
        "tags": [
          {
            "description": "Everything about your Pets",
            "externalDocs": {
              "description": "Find out more",
              "url": "http://swagger.io",
            },
            "name": "pet",
          },
          {
            "description": "Access to Petstore orders",
            "name": "store",
          },
          {
            "description": "Operations about user",
            "externalDocs": {
              "description": "Find out more about our store",
              "url": "http://swagger.io",
            },
            "name": "user",
          },
        ],
      },
    },
    "change": {
      "changeType": "changed",
      "changed": {
        "after": {
          "externalDocs": {
            "description": "Find out more about Swagger",
            "url": "http://swagger.io",
          },
          "info": {
            "contact": {
              "email": "apiteam@swagger.io",
            },
            "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
            "license": {
              "name": "Apache 2.0",
              "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
            },
            "termsOfService": "http://swagger.io/terms/",
            "title": "Swagger Petstore Updated",
            "version": "1.0.0",
          },
          "openapi": "3.0.1",
          "servers": [
            {
              "url": "https://petstore.swagger.io/v2",
            },
            {
              "url": "http://petstore.swagger.io/v2",
            },
            {
              "url": "http://petstore.swagger.io/v3",
            },
          ],
          "tags": [
            {
              "description": "Everything about your Pets",
              "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io",
              },
              "name": "pet",
            },
            {
              "description": "Access to Petstore orders",
              "name": "store",
            },
            {
              "description": "Operations about user",
              "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io",
              },
              "name": "user",
            },
          ],
        },
        "before": {
          "externalDocs": {
            "description": "Find out more about Swagger",
            "url": "http://swagger.io",
          },
          "info": {
            "contact": {
              "email": "apiteam@swagger.io",
            },
            "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
            "license": {
              "name": "Apache 2.0",
              "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
            },
            "termsOfService": "http://swagger.io/terms/",
            "title": "Swagger Petstore",
            "version": "1.0.0",
          },
          "openapi": "3.0.1",
          "servers": [
            {
              "url": "https://petstore.swagger.io/v2",
            },
            {
              "url": "http://petstore.swagger.io/v2",
            },
          ],
          "tags": [
            {
              "description": "Everything about your Pets",
              "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io",
              },
              "name": "pet",
            },
            {
              "description": "Access to Petstore orders",
              "name": "store",
            },
            {
              "description": "Operations about user",
              "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io",
              },
              "name": "user",
            },
          ],
        },
      },
      "location": {
        "conceptualLocation": {},
        "conceptualPath": [],
        "jsonPath": "",
        "kind": "specification",
      },
    },
  },
}
`;
