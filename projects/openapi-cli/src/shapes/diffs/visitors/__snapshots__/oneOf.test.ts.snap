// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`one of json schema diff visitor can add an additional branch to a complex one of 1`] = `
Array [
  Object {
    "example": Array [
      1,
      2,
      3,
    ],
    "instancePath": "/location/principality/coordinates",
    "key": "0",
    "keyword": "type",
    "kind": "UnmatchedType",
    "propertyPath": "/properties/location/properties/principality/properties/coordinates/oneOf/0",
  },
  Object {
    "example": Array [
      1,
      2,
      3,
    ],
    "instancePath": "/location/principality/coordinates",
    "key": "1",
    "keyword": "type",
    "kind": "UnmatchedType",
    "propertyPath": "/properties/location/properties/principality/properties/coordinates/oneOf/1",
  },
  Object {
    "example": Array [
      1,
      2,
      3,
    ],
    "instancePath": "/location/principality/coordinates",
    "key": "oneOf",
    "keyword": "oneOf",
    "kind": "UnmatchedType",
    "propertyPath": "/properties/location/properties/principality/properties/coordinates/oneOf",
  },
]
`;

exports[`one of json schema diff visitor when new field in one of object variant of one of 1`] = `
Array [
  Object {
    "example": Object {
      "polyProp": Object {
        "hello": "world",
      },
    },
    "instancePath": "/polyProp/hello",
    "key": "hello",
    "keyword": "additionalProperties",
    "kind": "AdditionalProperty",
    "parentObjectPath": "/properties/polyProp/oneOf/0/additionalProperties",
    "propertyExamplePath": "/polyProp/hello",
    "propertyPath": "/properties/polyProp/oneOf/0/additionalProperties/hello",
  },
  Object {
    "example": Object {
      "hello": "world",
    },
    "instancePath": "/polyProp",
    "key": "1",
    "keyword": "type",
    "kind": "UnmatchedType",
    "propertyPath": "/properties/polyProp/oneOf/1",
  },
  Object {
    "example": Object {
      "hello": "world",
    },
    "instancePath": "/polyProp",
    "key": "oneOf",
    "keyword": "oneOf",
    "kind": "UnmatchedType",
    "propertyPath": "/properties/polyProp/oneOf",
  },
]
`;

exports[`one of json schema diff visitor when new primitive types provided to existing one of  1`] = `
Array [
  Object {
    "example": true,
    "instancePath": "/polyProp",
    "key": "0",
    "keyword": "type",
    "kind": "UnmatchedType",
    "propertyPath": "/properties/polyProp/oneOf/0",
  },
  Object {
    "example": true,
    "instancePath": "/polyProp",
    "key": "1",
    "keyword": "type",
    "kind": "UnmatchedType",
    "propertyPath": "/properties/polyProp/oneOf/1",
  },
  Object {
    "example": true,
    "instancePath": "/polyProp",
    "key": "oneOf",
    "keyword": "oneOf",
    "kind": "UnmatchedType",
    "propertyPath": "/properties/polyProp/oneOf",
  },
]
`;

exports[`one of json schema diff visitor when root schema is obejct and is shown an array 1`] = `
Array [
  Object {
    "example": Array [],
    "instancePath": "",
    "key": "",
    "keyword": "type",
    "kind": "UnmatchedType",
    "propertyPath": "",
  },
]
`;
