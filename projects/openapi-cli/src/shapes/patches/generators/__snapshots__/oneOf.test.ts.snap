// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`one of shape patch generator can add an additional branch to a complex one of 1`] = `
Array [
  Object {
    "description": "expand one of for oneOf",
    "groupedOperations": Array [
      Object {
        "intent": "add new oneOf branch to oneOf",
        "operations": Array [
          Object {
            "op": "add",
            "path": "/properties/location/properties/principality/properties/coordinates/oneOf/-",
            "value": Object {
              "items": Object {
                "type": "number",
              },
              "type": "array",
            },
          },
        ],
      },
    ],
    "impact": Array [
      "Addition",
      "BackwardsCompatibilityUnknown",
    ],
  },
]
`;

exports[`one of shape patch generator when new field in one of object variant of one of 1`] = `
Array [
  Object {
    "description": "add property hello",
    "groupedOperations": Array [
      Object {
        "intent": "add required [] to parent object and make hello required",
        "operations": Array [
          Object {
            "extra": "same",
            "op": "add",
            "path": "/properties/polyProp/oneOf/0/required",
            "value": Array [
              "hello",
            ],
          },
        ],
      },
      Object {
        "intent": "add property hello schema to properties",
        "operations": Array [
          Object {
            "op": "add",
            "path": "/properties/polyProp/oneOf/0/properties/hello",
            "value": Object {
              "type": "string",
            },
          },
        ],
      },
    ],
    "impact": Array [
      "Addition",
      "BackwardsCompatibilityUnknown",
    ],
  },
]
`;

exports[`one of shape patch generator when new primitive types provided to existing one of  1`] = `
Array [
  Object {
    "description": "expand one of for oneOf",
    "groupedOperations": Array [
      Object {
        "intent": "add new oneOf branch to oneOf",
        "operations": Array [
          Object {
            "op": "add",
            "path": "/properties/polyProp/oneOf/-",
            "value": Object {
              "type": "boolean",
            },
          },
        ],
      },
    ],
    "impact": Array [
      "Addition",
      "BackwardsCompatibilityUnknown",
    ],
  },
]
`;

exports[`one of shape patch generator when root schema is obejct and is shown an array 1`] = `
Array [
  Object {
    "description": "make  oneOf",
    "groupedOperations": Array [
      Object {
        "intent": "replace  with a one of containing both types",
        "operations": Array [
          Object {
            "op": "remove",
            "path": "/type",
          },
          Object {
            "op": "remove",
            "path": "/properties",
          },
          Object {
            "op": "add",
            "path": "/oneOf",
            "value": Array [
              Object {
                "properties": Object {
                  "sup": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              Object {
                "items": Object {},
                "type": "array",
              },
            ],
          },
        ],
      },
    ],
    "impact": Array [
      "Addition",
      "BackwardsCompatibilityUnknown",
    ],
  },
  Object {
    "description": "change type of ",
    "groupedOperations": Array [
      Object {
        "intent": "change  type",
        "operations": Array [
          Object {
            "op": "replace",
            "path": "",
            "value": Object {
              "items": Object {},
              "type": "array",
            },
          },
        ],
      },
    ],
    "impact": Array [
      "BackwardsIncompatible",
    ],
  },
]
`;
