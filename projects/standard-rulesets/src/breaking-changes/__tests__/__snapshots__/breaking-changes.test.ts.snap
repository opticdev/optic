// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`breaking changes ruleset operation removal 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "removed",
      "location": Object {
        "conceptualLocation": Object {
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
        ],
        "jsonPath": "/paths/~1api~1users/get",
        "kind": "operation",
      },
      "removed": Object {
        "before": Object {
          "method": "get",
          "pathPattern": "/api/users",
        },
      },
    },
    "condition": "not remove operation",
    "docsLink": undefined,
    "error": "cannot remove an operation",
    "isMust": true,
    "isShould": false,
    "name": "Prevent operation removal",
    "passed": false,
    "where": "removed operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset query parameter optional to required 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "version",
          "required": true,
          "schema": Object {
            "type": "string",
          },
        },
        "before": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": "not make an optional parameter required",
    "docsLink": undefined,
    "error": "cannot make an optional parameter required",
    "isMust": true,
    "isShould": false,
    "name": "prevent new required query parameters",
    "passed": false,
    "where": "changed query parameter: version in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "version",
          "required": true,
          "schema": Object {
            "type": "string",
          },
        },
        "before": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": "not change parameter type",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent query parameter type changes",
    "passed": true,
    "where": "changed query parameter: version in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset query parameter type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": "not make an optional parameter required",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent new required query parameters",
    "passed": true,
    "where": "changed query parameter: version in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": "not change parameter type",
    "docsLink": undefined,
    "error": "expected query parameter to not change type",
    "isMust": true,
    "isShould": false,
    "name": "prevent query parameter type changes",
    "passed": false,
    "where": "changed query parameter: version in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset request property optional to required 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": true,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": false,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not make an optional request property required",
    "docsLink": undefined,
    "error": "cannot make a request property required",
    "isMust": true,
    "isShould": false,
    "name": "prevent changing response property to optional",
    "passed": false,
    "where": "changed property: id request body: application/json in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": true,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": false,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not change request property type",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent request property type changes",
    "passed": true,
    "where": "changed property: id request body: application/json in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset request property type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "number",
          },
          "key": "id",
          "required": true,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": true,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not make an optional request property required",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing response property to optional",
    "passed": true,
    "where": "changed property: id request body: application/json in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "number",
          },
          "key": "id",
          "required": true,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": true,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not change request property type",
    "docsLink": undefined,
    "error": "expected request body property to not change type",
    "isMust": true,
    "isShould": false,
    "name": "prevent request property type changes",
    "passed": false,
    "where": "changed property: id request body: application/json in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset required query parameter added 1`] = `
Array [
  Object {
    "change": Object {
      "added": Object {
        "in": "query",
        "name": "required",
        "required": true,
        "schema": Object {
          "type": "string",
        },
      },
      "changeType": "added",
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "required",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": "not add required query parameter",
    "docsLink": undefined,
    "error": "cannot add a required query parameter to an existing operation",
    "isMust": true,
    "isShould": false,
    "name": "prevent new required query parameters",
    "passed": false,
    "where": "added query parameter: required in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset required request property added 1`] = `
Array [
  Object {
    "change": Object {
      "added": Object {
        "flatSchema": Object {
          "type": "string",
        },
        "key": "anotherKey",
        "required": true,
      },
      "changeType": "added",
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "anotherKey",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
          "anotherKey",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json/schema/properties/anotherKey",
        "kind": "field",
      },
    },
    "condition": "not add required request property",
    "docsLink": undefined,
    "error": "cannot add a required request property to an existing operation",
    "isMust": true,
    "isShould": false,
    "name": "prevent changing response property to optional",
    "passed": false,
    "where": "added property: anotherKey request body: application/json in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset response property removed 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "removed",
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "name",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "responses",
          "200",
          "application/json",
          "name",
        ],
        "jsonPath": "/paths/~1api~1users/get/responses/200/content/application~1json/schema/properties/name",
        "kind": "field",
      },
      "removed": Object {
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "name",
          "required": false,
        },
      },
    },
    "condition": "not change response body property from required to optional",
    "docsLink": undefined,
    "error": "cannot remove a response property",
    "isMust": true,
    "isShould": false,
    "name": "prevent removing response property",
    "passed": false,
    "where": "removed property: name in response status code: 200 with content-type: application/json in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset response property required to optional 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": false,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": true,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "responses",
          "200",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/responses/200/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not change response body property from required to optional",
    "docsLink": undefined,
    "error": "cannot make a required response property optional",
    "isMust": true,
    "isShould": false,
    "name": "prevent making response property optional",
    "passed": false,
    "where": "changed property: id in response status code: 200 with content-type: application/json in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": false,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": true,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "responses",
          "200",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/responses/200/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not change response property type",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent response property type changes",
    "passed": true,
    "where": "changed property: id in response status code: 200 with content-type: application/json in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset response property type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "number",
          },
          "key": "id",
          "required": false,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": false,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "responses",
          "200",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/responses/200/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not change response body property from required to optional",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent making response property optional",
    "passed": true,
    "where": "changed property: id in response status code: 200 with content-type: application/json in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "number",
          },
          "key": "id",
          "required": false,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": false,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "responses",
          "200",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/responses/200/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not change response property type",
    "docsLink": undefined,
    "error": "expected response body property to not change type",
    "isMust": true,
    "isShould": false,
    "name": "prevent response property type changes",
    "passed": false,
    "where": "changed property: id in response status code: 200 with content-type: application/json in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset root request body type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "contentType": "application/json",
          "flatSchema": Object {
            "type": "string",
          },
        },
        "before": Object {
          "contentType": "application/json",
          "flatSchema": Object {
            "type": "object",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json",
        "kind": "body",
      },
    },
    "condition": "not change request property type",
    "docsLink": undefined,
    "error": "expected request body property to not change type",
    "isMust": true,
    "isShould": false,
    "name": "prevent request property type changes",
    "passed": false,
    "where": "changed request with content-type: application/json in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset root response body type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "contentType": "application/json",
          "flatSchema": Object {
            "type": "string",
          },
        },
        "before": Object {
          "contentType": "application/json",
          "flatSchema": Object {
            "type": "number",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "responses",
          "200",
          "application/json",
        ],
        "jsonPath": "/paths/~1api~1users/get/responses/200/content/application~1json",
        "kind": "body",
      },
    },
    "condition": "not change response property type",
    "docsLink": undefined,
    "error": "expected response body property to not change type",
    "isMust": true,
    "isShould": false,
    "name": "prevent response property type changes",
    "passed": false,
    "where": "changed response status code: 200 with content-type: application/json  in operation: GET /api/users",
  },
]
`;

exports[`breaking changes ruleset valid changes 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "required",
          "schema": Object {
            "type": "string",
          },
        },
        "before": Object {
          "in": "query",
          "name": "required",
          "required": true,
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "required",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": "not make an optional parameter required",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent new required query parameters",
    "passed": true,
    "where": "changed query parameter: required in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "required",
          "schema": Object {
            "type": "string",
          },
        },
        "before": Object {
          "in": "query",
          "name": "required",
          "required": true,
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "required",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "required",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": "not change parameter type",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent query parameter type changes",
    "passed": true,
    "where": "changed query parameter: required in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": false,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": true,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not make an optional request property required",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing response property to optional",
    "passed": true,
    "where": "changed property: id request body: application/json in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "added": Object {
        "flatSchema": Object {
          "type": "number",
        },
        "key": "anotherId",
        "required": false,
      },
      "changeType": "added",
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "anotherId",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
          "anotherId",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json/schema/properties/anotherId",
        "kind": "field",
      },
    },
    "condition": "not add required request property",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent changing response property to optional",
    "passed": true,
    "where": "added property: anotherId request body: application/json in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": false,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "id",
          "required": true,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "id",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "application/json",
          "id",
        ],
        "jsonPath": "/paths/~1api~1users/get/requestBody/content/application~1json/schema/properties/id",
        "kind": "field",
      },
    },
    "condition": "not change request property type",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent request property type changes",
    "passed": true,
    "where": "changed property: id request body: application/json in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "name",
          "required": true,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "name",
          "required": false,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "name",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "responses",
          "200",
          "application/json",
          "name",
        ],
        "jsonPath": "/paths/~1api~1users/get/responses/200/content/application~1json/schema/properties/name",
        "kind": "field",
      },
    },
    "condition": "not change response body property from required to optional",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent making response property optional",
    "passed": true,
    "where": "changed property: name in response status code: 200 with content-type: application/json in operation: GET /api/users",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "name",
          "required": true,
        },
        "before": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "name",
          "required": false,
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "name",
          ],
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "responses",
          "200",
          "application/json",
          "name",
        ],
        "jsonPath": "/paths/~1api~1users/get/responses/200/content/application~1json/schema/properties/name",
        "kind": "field",
      },
    },
    "condition": "not change response property type",
    "docsLink": undefined,
    "error": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent response property type changes",
    "passed": true,
    "where": "changed property: name in response status code: 200 with content-type: application/json in operation: GET /api/users",
  },
]
`;
