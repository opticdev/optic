// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can deference a json schema spec with references 1`] = `
Object {
  "info": Object {
    "title": "Empty",
    "version": "0.0.0",
  },
  "openapi": "3.0.1",
  "paths": Object {
    "/abc": Object {
      "get": Object {
        "responses": Object {
          "400": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Bad Request: A parameter provided as a part of the request was invalid.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
        },
      },
    },
  },
}
`;

exports[`can parse a json schema spec with external references 1`] = `
Object {
  "jsonLike": Object {
    "example": Object {
      "token": "11111111",
      "user": Object {
        "name": "Homer",
      },
    },
    "properties": Object {
      "token": Object {
        "type": "string",
      },
      "user": Object {
        "example": Object {
          "name": "Homer",
        },
        "properties": Object {
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
    },
    "required": Array [
      "user",
      "token",
    ],
    "type": "object",
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": Array [
      Object {
        "ast": null,
        "contents": "User:
  type: object
  required: [name]
  properties:
    name:
      type: string
  example:
    name: 'Homer'
",
        "index": null,
        "path": "/inputs/openapi3-with-references/definitions.yaml",
        "sha256": "908a3b564fb7ad4ecda6a23ad9b80dd0405819d57393a260e7a8befe749a7547",
      },
      Object {
        "ast": null,
        "contents": "type: object
required: [user, token]
properties:
  token:
    type: string
  user:
    $ref: 'definitions.yaml#/User'
example:
  token: '11111111'
  user:
    $ref: 'definitions.yaml#/User/example'
",
        "index": null,
        "path": "/inputs/openapi3-with-references/external-multiple.yaml",
        "sha256": "a5a9b65755e01792c0a1b9d4fd0a519874236357fd647babfcb9bfa19c616c87",
      },
    ],
    "refMappings": Object {
      "/example/user": Array [
        1,
        "/User/example",
      ],
      "/properties/user": Array [
        1,
        "/User",
      ],
    },
    "rootFilePath": "/inputs/openapi3-with-references/external-multiple.yaml",
  },
}
`;

exports[`can parse a json schema spec with external references to the same file 1`] = `
Object {
  "jsonLike": Object {
    "example": Object {
      "user": Object {
        "name": "Homer",
      },
      "user2": Object {
        "name": "Homer",
      },
    },
    "properties": Object {},
    "required": Array [],
    "type": "object",
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": Array [
      Object {
        "ast": null,
        "contents": "User:
  type: object
  required: [name]
  properties:
    name:
      type: string
  example:
    name: 'Homer'
",
        "index": null,
        "path": "/inputs/openapi3-with-references/definitions.yaml",
        "sha256": "908a3b564fb7ad4ecda6a23ad9b80dd0405819d57393a260e7a8befe749a7547",
      },
      Object {
        "ast": null,
        "contents": "type: object
required: []
properties: {}
example:
  user:
    $ref: 'definitions.yaml#/User/example'
  user2:
    $ref: 'definitions.yaml#/User/example'
",
        "index": null,
        "path": "/inputs/openapi3-with-references/external-multiple-branches.yaml",
        "sha256": "791c2bcfaa15f53ffbe8841ce742013aad1469db97bbc108133b305614ec80ac",
      },
    ],
    "refMappings": Object {
      "/example/user": Array [
        1,
        "/User/example",
      ],
      "/example/user2": Array [
        1,
        "/User/example",
      ],
    },
    "rootFilePath": "/inputs/openapi3-with-references/external-multiple-branches.yaml",
  },
}
`;

exports[`can parse a json schema spec with internal references to external references 1`] = `
Object {
  "jsonLike": Object {
    "components": Object {
      "FieldA": Object {
        "example": Object {
          "example": Object {
            "name": "Homer",
          },
          "properties": Object {
            "name": Object {
              "type": "string",
            },
          },
          "required": Array [
            "name",
          ],
          "type": "object",
        },
        "type": "string",
      },
    },
    "example": Object {
      "internalRef": Object {
        "example": Object {
          "example": Object {
            "name": "Homer",
          },
          "properties": Object {
            "name": Object {
              "type": "string",
            },
          },
          "required": Array [
            "name",
          ],
          "type": "object",
        },
        "type": "string",
      },
      "user": Object {
        "name": "Homer",
      },
    },
    "properties": Object {
      "token": Object {
        "type": "string",
      },
      "user": Object {
        "example": Object {
          "name": "Homer",
        },
        "properties": Object {
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
    },
    "required": Array [
      "user",
      "token",
    ],
    "type": "object",
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": Array [
      Object {
        "ast": null,
        "contents": "User:
  type: object
  required: [name]
  properties:
    name:
      type: string
  example:
    name: 'Homer'
",
        "index": null,
        "path": "/inputs/openapi3-with-references/definitions.yaml",
        "sha256": "908a3b564fb7ad4ecda6a23ad9b80dd0405819d57393a260e7a8befe749a7547",
      },
      Object {
        "ast": null,
        "contents": "type: object
required: [user, token]
properties:
  token:
    type: string
  user:
    $ref: 'definitions.yaml#/User'
example:
  internalRef:
    $ref: '#/components/FieldA'
  user:
    $ref: 'definitions.yaml#/User/example'
components:
  FieldA:
    type: string
    example:
      $ref: 'definitions.yaml#/User'
",
        "index": null,
        "path": "/inputs/openapi3-with-references/internal-multiple.yaml",
        "sha256": "0efe164edc40303433096775fb0622be111a5bba5dea332c6183ba26e2e65bfc",
      },
    ],
    "refMappings": Object {
      "/components/FieldA/example": Array [
        1,
        "/User",
      ],
      "/example/internalRef": Array [
        0,
        "/components/FieldA",
      ],
      "/example/internalRef/example": Array [
        1,
        "/User",
      ],
      "/example/user": Array [
        1,
        "/User/example",
      ],
      "/properties/user": Array [
        1,
        "/User",
      ],
    },
    "rootFilePath": "/inputs/openapi3-with-references/internal-multiple.yaml",
  },
}
`;

exports[`can parse an OpenAPI file and have valid sourcemap 1`] = `
Object {
  "jsonLike": Object {
    "components": Object {
      "schemas": Object {
        "ApiResponse": Object {
          "properties": Object {
            "code": Object {
              "format": "int32",
              "type": "integer",
            },
            "message": Object {
              "type": "string",
            },
            "type": Object {
              "type": "string",
            },
          },
          "type": "object",
        },
        "Category": Object {
          "properties": Object {
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "name": Object {
              "type": "string",
            },
          },
          "type": "object",
          "xml": Object {
            "name": "Category",
          },
        },
        "Order": Object {
          "properties": Object {
            "complete": Object {
              "default": false,
              "type": "boolean",
            },
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "petId": Object {
              "format": "int64",
              "type": "integer",
            },
            "quantity": Object {
              "format": "int32",
              "type": "integer",
            },
            "shipDate": Object {
              "format": "date-time",
              "type": "string",
            },
            "status": Object {
              "description": "Order Status",
              "enum": Array [
                "placed",
                "approved",
                "delivered",
              ],
              "type": "string",
            },
          },
          "type": "object",
          "xml": Object {
            "name": "Order",
          },
        },
        "Pet": Object {
          "properties": Object {
            "category": Object {
              "properties": Object {
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "Category",
              },
            },
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "name": Object {
              "example": "doggie",
              "type": "string",
            },
            "photoUrls": Object {
              "items": Object {
                "type": "string",
              },
              "type": "array",
              "xml": Object {
                "name": "photoUrl",
                "wrapped": true,
              },
            },
            "status": Object {
              "description": "pet status in the store",
              "enum": Array [
                "available",
                "pending",
                "sold",
              ],
              "type": "string",
            },
            "tags": Object {
              "items": Object {
                "properties": Object {
                  "id": Object {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "Tag",
                },
              },
              "type": "array",
              "xml": Object {
                "name": "tag",
                "wrapped": true,
              },
            },
          },
          "required": Array [
            "name",
            "photoUrls",
          ],
          "type": "object",
          "xml": Object {
            "name": "Pet",
          },
        },
        "Tag": Object {
          "properties": Object {
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "name": Object {
              "type": "string",
            },
          },
          "type": "object",
          "xml": Object {
            "name": "Tag",
          },
        },
        "User": Object {
          "properties": Object {
            "email": Object {
              "type": "string",
            },
            "firstName": Object {
              "type": "string",
            },
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "lastName": Object {
              "type": "string",
            },
            "password": Object {
              "type": "string",
            },
            "phone": Object {
              "type": "string",
            },
            "userStatus": Object {
              "description": "User Status",
              "format": "int32",
              "type": "integer",
            },
            "username": Object {
              "type": "string",
            },
          },
          "type": "object",
          "xml": Object {
            "name": "User",
          },
        },
      },
      "securitySchemes": Object {
        "api_key": Object {
          "in": "header",
          "name": "api_key",
          "type": "apiKey",
        },
        "petstore_auth": Object {
          "flows": Object {
            "implicit": Object {
              "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
              "scopes": Object {
                "read:pets": "read your pets",
                "write:pets": "modify pets in your account",
              },
            },
          },
          "type": "oauth2",
        },
      },
    },
    "externalDocs": Object {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io",
    },
    "info": Object {
      "contact": Object {
        "email": "apiteam@swagger.io",
      },
      "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
      "license": Object {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
      },
      "termsOfService": "http://swagger.io/terms/",
      "title": "Swagger Petstore",
      "version": "1.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/pet/{petId}/uploadImage": Object {
        "post": Object {
          "operationId": "uploadFile",
          "parameters": Array [
            Object {
              "description": "ID of pet to update",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": Object {
                "format": "int64",
                "type": "integer",
              },
            },
          ],
          "requestBody": Object {
            "content": Object {
              "multipart/form-data": Object {
                "schema": Object {
                  "properties": Object {
                    "additionalMetadata": Object {
                      "description": "Additional data to pass to server",
                      "type": "string",
                    },
                    "file": Object {
                      "description": "file to upload",
                      "format": "binary",
                      "type": "string",
                    },
                  },
                },
              },
            },
          },
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "code": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "message": Object {
                        "type": "string",
                      },
                      "type": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "successful operation",
            },
          },
          "security": Array [
            Object {
              "petstore_auth": Array [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "uploads an image",
          "tags": Array [
            "pet",
          ],
        },
      },
      "/store/inventory": Object {
        "get": Object {
          "description": "Returns a map of status codes to quantities",
          "operationId": "getInventory",
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "additionalProperties": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                    "type": "object",
                  },
                },
              },
              "description": "successful operation",
            },
          },
          "security": Array [
            Object {
              "api_key": Array [],
            },
          ],
          "summary": "Returns pet inventories by status",
          "tags": Array [
            "store",
          ],
        },
      },
      "/store/order": Object {
        "post": Object {
          "operationId": "placeOrder",
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "properties": Object {
                    "complete": Object {
                      "default": false,
                      "type": "boolean",
                    },
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "petId": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "quantity": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                    "shipDate": Object {
                      "format": "date-time",
                      "type": "string",
                    },
                    "status": Object {
                      "description": "Order Status",
                      "enum": Array [
                        "placed",
                        "approved",
                        "delivered",
                      ],
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "Order",
                  },
                },
              },
            },
            "description": "order placed for purchasing the pet",
            "required": true,
          },
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "complete": Object {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": Object {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": Object {
                        "description": "Order Status",
                        "enum": Array [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Order",
                    },
                  },
                },
                "application/xml": Object {
                  "schema": Object {
                    "properties": Object {
                      "complete": Object {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": Object {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": Object {
                        "description": "Order Status",
                        "enum": Array [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Order",
                    },
                  },
                },
              },
              "description": "successful operation",
            },
            "400": Object {
              "content": Object {},
              "description": "Invalid Order",
            },
          },
          "summary": "Place an order for a pet",
          "tags": Array [
            "store",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "/store/order/{orderId}": Object {
        "delete": Object {
          "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
          "operationId": "deleteOrder",
          "parameters": Array [
            Object {
              "description": "ID of the order that needs to be deleted",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": Object {
                "format": "int64",
                "minimum": 1,
                "type": "integer",
              },
            },
          ],
          "responses": Object {
            "400": Object {
              "content": Object {},
              "description": "Invalid ID supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "Order not found",
            },
          },
          "summary": "Delete purchase order by ID",
          "tags": Array [
            "store",
          ],
        },
        "get": Object {
          "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
          "operationId": "getOrderById",
          "parameters": Array [
            Object {
              "description": "ID of pet that needs to be fetched",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": Object {
                "format": "int64",
                "maximum": 10,
                "minimum": 1,
                "type": "integer",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "complete": Object {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": Object {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": Object {
                        "description": "Order Status",
                        "enum": Array [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Order",
                    },
                  },
                },
                "application/xml": Object {
                  "schema": Object {
                    "properties": Object {
                      "complete": Object {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": Object {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": Object {
                        "description": "Order Status",
                        "enum": Array [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Order",
                    },
                  },
                },
              },
              "description": "successful operation",
            },
            "400": Object {
              "content": Object {},
              "description": "Invalid ID supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "Order not found",
            },
          },
          "summary": "Find purchase order by ID",
          "tags": Array [
            "store",
          ],
        },
      },
      "/user": Object {
        "post": Object {
          "description": "This can only be done by the logged in user.",
          "operationId": "createUser",
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "properties": Object {
                    "email": Object {
                      "type": "string",
                    },
                    "firstName": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "lastName": Object {
                      "type": "string",
                    },
                    "password": Object {
                      "type": "string",
                    },
                    "phone": Object {
                      "type": "string",
                    },
                    "userStatus": Object {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "User",
                  },
                },
              },
            },
            "description": "Created user object",
            "required": true,
          },
          "responses": Object {
            "default": Object {
              "content": Object {},
              "description": "successful operation",
            },
          },
          "summary": "Create user",
          "tags": Array [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "/user/createWithArray": Object {
        "post": Object {
          "operationId": "createUsersWithArrayInput",
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "email": Object {
                        "type": "string",
                      },
                      "firstName": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": Object {
                        "type": "string",
                      },
                      "password": Object {
                        "type": "string",
                      },
                      "phone": Object {
                        "type": "string",
                      },
                      "userStatus": Object {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "User",
                    },
                  },
                  "type": "array",
                },
              },
            },
            "description": "List of user object",
            "required": true,
          },
          "responses": Object {
            "default": Object {
              "content": Object {},
              "description": "successful operation",
            },
          },
          "summary": "Creates list of users with given input array",
          "tags": Array [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "/user/createWithList": Object {
        "post": Object {
          "operationId": "createUsersWithListInput",
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "email": Object {
                        "type": "string",
                      },
                      "firstName": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": Object {
                        "type": "string",
                      },
                      "password": Object {
                        "type": "string",
                      },
                      "phone": Object {
                        "type": "string",
                      },
                      "userStatus": Object {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "User",
                    },
                  },
                  "type": "array",
                },
              },
            },
            "description": "List of user object",
            "required": true,
          },
          "responses": Object {
            "default": Object {
              "content": Object {},
              "description": "successful operation",
            },
          },
          "summary": "Creates list of users with given input array",
          "tags": Array [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "/user/login": Object {
        "get": Object {
          "operationId": "loginUser",
          "parameters": Array [
            Object {
              "description": "The user name for login",
              "in": "query",
              "name": "username",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
            Object {
              "description": "The password for login in clear text",
              "in": "query",
              "name": "password",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "type": "string",
                  },
                },
                "application/xml": Object {
                  "schema": Object {
                    "type": "string",
                  },
                },
              },
              "description": "successful operation",
              "headers": Object {
                "X-Expires-After": Object {
                  "description": "date in UTC when token expires",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "X-Rate-Limit": Object {
                  "description": "calls per hour allowed by the user",
                  "schema": Object {
                    "format": "int32",
                    "type": "integer",
                  },
                },
              },
            },
            "400": Object {
              "content": Object {},
              "description": "Invalid username/password supplied",
            },
          },
          "summary": "Logs user into the system",
          "tags": Array [
            "user",
          ],
        },
      },
      "/user/logout": Object {
        "get": Object {
          "operationId": "logoutUser",
          "responses": Object {
            "default": Object {
              "content": Object {},
              "description": "successful operation",
            },
          },
          "summary": "Logs out current logged in user session",
          "tags": Array [
            "user",
          ],
        },
      },
      "/user/{username}": Object {
        "delete": Object {
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "parameters": Array [
            Object {
              "description": "The name that needs to be deleted",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "400": Object {
              "content": Object {},
              "description": "Invalid username supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "User not found",
            },
          },
          "summary": "Delete user",
          "tags": Array [
            "user",
          ],
        },
        "get": Object {
          "operationId": "getUserByName",
          "parameters": Array [
            Object {
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "email": Object {
                        "type": "string",
                      },
                      "firstName": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": Object {
                        "type": "string",
                      },
                      "password": Object {
                        "type": "string",
                      },
                      "phone": Object {
                        "type": "string",
                      },
                      "userStatus": Object {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "User",
                    },
                  },
                },
                "application/xml": Object {
                  "schema": Object {
                    "properties": Object {
                      "email": Object {
                        "type": "string",
                      },
                      "firstName": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": Object {
                        "type": "string",
                      },
                      "password": Object {
                        "type": "string",
                      },
                      "phone": Object {
                        "type": "string",
                      },
                      "userStatus": Object {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "User",
                    },
                  },
                },
              },
              "description": "successful operation",
            },
            "400": Object {
              "content": Object {},
              "description": "Invalid username supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "User not found",
            },
          },
          "summary": "Get user by user name",
          "tags": Array [
            "user",
          ],
        },
        "put": Object {
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "parameters": Array [
            Object {
              "description": "name that need to be updated",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "properties": Object {
                    "email": Object {
                      "type": "string",
                    },
                    "firstName": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "lastName": Object {
                      "type": "string",
                    },
                    "password": Object {
                      "type": "string",
                    },
                    "phone": Object {
                      "type": "string",
                    },
                    "userStatus": Object {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "User",
                  },
                },
              },
            },
            "description": "Updated user object",
            "required": true,
          },
          "responses": Object {
            "400": Object {
              "content": Object {},
              "description": "Invalid user supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "User not found",
            },
          },
          "summary": "Updated user",
          "tags": Array [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
    },
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "tags": Array [
      Object {
        "description": "Everything about your Pets",
        "externalDocs": Object {
          "description": "Find out more",
          "url": "http://swagger.io",
        },
        "name": "pet",
      },
      Object {
        "description": "Access to Petstore orders",
        "name": "store",
      },
      Object {
        "description": "Operations about user",
        "externalDocs": Object {
          "description": "Find out more about our store",
          "url": "http://swagger.io",
        },
        "name": "user",
      },
    ],
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": Array [
      Object {
        "ast": null,
        "contents": "{
  \\"openapi\\": \\"3.0.1\\",
  \\"info\\": {
    \\"title\\": \\"Swagger Petstore\\",
    \\"description\\": \\"This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.\\",
    \\"termsOfService\\": \\"http://swagger.io/terms/\\",
    \\"contact\\": {
      \\"email\\": \\"apiteam@swagger.io\\"
    },
    \\"license\\": {
      \\"name\\": \\"Apache 2.0\\",
      \\"url\\": \\"http://www.apache.org/licenses/LICENSE-2.0.html\\"
    },
    \\"version\\": \\"1.0.0\\"
  },
  \\"externalDocs\\": {
    \\"description\\": \\"Find out more about Swagger\\",
    \\"url\\": \\"http://swagger.io\\"
  },
  \\"servers\\": [
    {
      \\"url\\": \\"https://petstore.swagger.io/v2\\"
    },
    {
      \\"url\\": \\"http://petstore.swagger.io/v2\\"
    }
  ],
  \\"tags\\": [
    {
      \\"name\\": \\"pet\\",
      \\"description\\": \\"Everything about your Pets\\",
      \\"externalDocs\\": {
        \\"description\\": \\"Find out more\\",
        \\"url\\": \\"http://swagger.io\\"
      }
    },
    {
      \\"name\\": \\"store\\",
      \\"description\\": \\"Access to Petstore orders\\"
    },
    {
      \\"name\\": \\"user\\",
      \\"description\\": \\"Operations about user\\",
      \\"externalDocs\\": {
        \\"description\\": \\"Find out more about our store\\",
        \\"url\\": \\"http://swagger.io\\"
      }
    }
  ],
  \\"paths\\": {
    \\"/pet/{petId}/uploadImage\\": {
      \\"post\\": {
        \\"tags\\": [
          \\"pet\\"
        ],
        \\"summary\\": \\"uploads an image\\",
        \\"operationId\\": \\"uploadFile\\",
        \\"parameters\\": [
          {
            \\"name\\": \\"petId\\",
            \\"in\\": \\"path\\",
            \\"description\\": \\"ID of pet to update\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"type\\": \\"integer\\",
              \\"format\\": \\"int64\\"
            }
          }
        ],
        \\"requestBody\\": {
          \\"content\\": {
            \\"multipart/form-data\\": {
              \\"schema\\": {
                \\"properties\\": {
                  \\"additionalMetadata\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Additional data to pass to server\\"
                  },
                  \\"file\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"file to upload\\",
                    \\"format\\": \\"binary\\"
                  }
                }
              }
            }
          }
        },
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {
              \\"application/json\\": {
                \\"schema\\": {
                  \\"$ref\\": \\"#/components/schemas/ApiResponse\\"
                }
              }
            }
          }
        },
        \\"security\\": [
          {
            \\"petstore_auth\\": [
              \\"write:pets\\",
              \\"read:pets\\"
            ]
          }
        ]
      }
    },
    \\"/store/inventory\\": {
      \\"get\\": {
        \\"tags\\": [
          \\"store\\"
        ],
        \\"summary\\": \\"Returns pet inventories by status\\",
        \\"description\\": \\"Returns a map of status codes to quantities\\",
        \\"operationId\\": \\"getInventory\\",
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {
              \\"application/json\\": {
                \\"schema\\": {
                  \\"type\\": \\"object\\",
                  \\"additionalProperties\\": {
                    \\"type\\": \\"integer\\",
                    \\"format\\": \\"int32\\"
                  }
                }
              }
            }
          }
        },
        \\"security\\": [
          {
            \\"api_key\\": []
          }
        ]
      }
    },
    \\"/store/order\\": {
      \\"post\\": {
        \\"tags\\": [
          \\"store\\"
        ],
        \\"summary\\": \\"Place an order for a pet\\",
        \\"operationId\\": \\"placeOrder\\",
        \\"requestBody\\": {
          \\"description\\": \\"order placed for purchasing the pet\\",
          \\"content\\": {
            \\"*/*\\": {
              \\"schema\\": {
                \\"$ref\\": \\"#/components/schemas/Order\\"
              }
            }
          },
          \\"required\\": true
        },
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {
              \\"application/xml\\": {
                \\"schema\\": {
                  \\"$ref\\": \\"#/components/schemas/Order\\"
                }
              },
              \\"application/json\\": {
                \\"schema\\": {
                  \\"$ref\\": \\"#/components/schemas/Order\\"
                }
              }
            }
          },
          \\"400\\": {
            \\"description\\": \\"Invalid Order\\",
            \\"content\\": {}
          }
        },
        \\"x-codegen-request-body-name\\": \\"body\\"
      }
    },
    \\"/store/order/{orderId}\\": {
      \\"get\\": {
        \\"tags\\": [
          \\"store\\"
        ],
        \\"summary\\": \\"Find purchase order by ID\\",
        \\"description\\": \\"For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions\\",
        \\"operationId\\": \\"getOrderById\\",
        \\"parameters\\": [
          {
            \\"name\\": \\"orderId\\",
            \\"in\\": \\"path\\",
            \\"description\\": \\"ID of pet that needs to be fetched\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"maximum\\": 10,
              \\"minimum\\": 1,
              \\"type\\": \\"integer\\",
              \\"format\\": \\"int64\\"
            }
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {
              \\"application/xml\\": {
                \\"schema\\": {
                  \\"$ref\\": \\"#/components/schemas/Order\\"
                }
              },
              \\"application/json\\": {
                \\"schema\\": {
                  \\"$ref\\": \\"#/components/schemas/Order\\"
                }
              }
            }
          },
          \\"400\\": {
            \\"description\\": \\"Invalid ID supplied\\",
            \\"content\\": {}
          },
          \\"404\\": {
            \\"description\\": \\"Order not found\\",
            \\"content\\": {}
          }
        }
      },
      \\"delete\\": {
        \\"tags\\": [
          \\"store\\"
        ],
        \\"summary\\": \\"Delete purchase order by ID\\",
        \\"description\\": \\"For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors\\",
        \\"operationId\\": \\"deleteOrder\\",
        \\"parameters\\": [
          {
            \\"name\\": \\"orderId\\",
            \\"in\\": \\"path\\",
            \\"description\\": \\"ID of the order that needs to be deleted\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"minimum\\": 1,
              \\"type\\": \\"integer\\",
              \\"format\\": \\"int64\\"
            }
          }
        ],
        \\"responses\\": {
          \\"400\\": {
            \\"description\\": \\"Invalid ID supplied\\",
            \\"content\\": {}
          },
          \\"404\\": {
            \\"description\\": \\"Order not found\\",
            \\"content\\": {}
          }
        }
      }
    },
    \\"/user\\": {
      \\"post\\": {
        \\"tags\\": [
          \\"user\\"
        ],
        \\"summary\\": \\"Create user\\",
        \\"description\\": \\"This can only be done by the logged in user.\\",
        \\"operationId\\": \\"createUser\\",
        \\"requestBody\\": {
          \\"description\\": \\"Created user object\\",
          \\"content\\": {
            \\"*/*\\": {
              \\"schema\\": {
                \\"$ref\\": \\"#/components/schemas/User\\"
              }
            }
          },
          \\"required\\": true
        },
        \\"responses\\": {
          \\"default\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {}
          }
        },
        \\"x-codegen-request-body-name\\": \\"body\\"
      }
    },
    \\"/user/createWithArray\\": {
      \\"post\\": {
        \\"tags\\": [
          \\"user\\"
        ],
        \\"summary\\": \\"Creates list of users with given input array\\",
        \\"operationId\\": \\"createUsersWithArrayInput\\",
        \\"requestBody\\": {
          \\"description\\": \\"List of user object\\",
          \\"content\\": {
            \\"*/*\\": {
              \\"schema\\": {
                \\"type\\": \\"array\\",
                \\"items\\": {
                  \\"$ref\\": \\"#/components/schemas/User\\"
                }
              }
            }
          },
          \\"required\\": true
        },
        \\"responses\\": {
          \\"default\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {}
          }
        },
        \\"x-codegen-request-body-name\\": \\"body\\"
      }
    },
    \\"/user/createWithList\\": {
      \\"post\\": {
        \\"tags\\": [
          \\"user\\"
        ],
        \\"summary\\": \\"Creates list of users with given input array\\",
        \\"operationId\\": \\"createUsersWithListInput\\",
        \\"requestBody\\": {
          \\"description\\": \\"List of user object\\",
          \\"content\\": {
            \\"*/*\\": {
              \\"schema\\": {
                \\"type\\": \\"array\\",
                \\"items\\": {
                  \\"$ref\\": \\"#/components/schemas/User\\"
                }
              }
            }
          },
          \\"required\\": true
        },
        \\"responses\\": {
          \\"default\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {}
          }
        },
        \\"x-codegen-request-body-name\\": \\"body\\"
      }
    },
    \\"/user/login\\": {
      \\"get\\": {
        \\"tags\\": [
          \\"user\\"
        ],
        \\"summary\\": \\"Logs user into the system\\",
        \\"operationId\\": \\"loginUser\\",
        \\"parameters\\": [
          {
            \\"name\\": \\"username\\",
            \\"in\\": \\"query\\",
            \\"description\\": \\"The user name for login\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"type\\": \\"string\\"
            }
          },
          {
            \\"name\\": \\"password\\",
            \\"in\\": \\"query\\",
            \\"description\\": \\"The password for login in clear text\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"type\\": \\"string\\"
            }
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"successful operation\\",
            \\"headers\\": {
              \\"X-Rate-Limit\\": {
                \\"description\\": \\"calls per hour allowed by the user\\",
                \\"schema\\": {
                  \\"type\\": \\"integer\\",
                  \\"format\\": \\"int32\\"
                }
              },
              \\"X-Expires-After\\": {
                \\"description\\": \\"date in UTC when token expires\\",
                \\"schema\\": {
                  \\"type\\": \\"string\\",
                  \\"format\\": \\"date-time\\"
                }
              }
            },
            \\"content\\": {
              \\"application/xml\\": {
                \\"schema\\": {
                  \\"type\\": \\"string\\"
                }
              },
              \\"application/json\\": {
                \\"schema\\": {
                  \\"type\\": \\"string\\"
                }
              }
            }
          },
          \\"400\\": {
            \\"description\\": \\"Invalid username/password supplied\\",
            \\"content\\": {}
          }
        }
      }
    },
    \\"/user/logout\\": {
      \\"get\\": {
        \\"tags\\": [
          \\"user\\"
        ],
        \\"summary\\": \\"Logs out current logged in user session\\",
        \\"operationId\\": \\"logoutUser\\",
        \\"responses\\": {
          \\"default\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {}
          }
        }
      }
    },
    \\"/user/{username}\\": {
      \\"get\\": {
        \\"tags\\": [
          \\"user\\"
        ],
        \\"summary\\": \\"Get user by user name\\",
        \\"operationId\\": \\"getUserByName\\",
        \\"parameters\\": [
          {
            \\"name\\": \\"username\\",
            \\"in\\": \\"path\\",
            \\"description\\": \\"The name that needs to be fetched. Use user1 for testing. \\",
            \\"required\\": true,
            \\"schema\\": {
              \\"type\\": \\"string\\"
            }
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"successful operation\\",
            \\"content\\": {
              \\"application/xml\\": {
                \\"schema\\": {
                  \\"$ref\\": \\"#/components/schemas/User\\"
                }
              },
              \\"application/json\\": {
                \\"schema\\": {
                  \\"$ref\\": \\"#/components/schemas/User\\"
                }
              }
            }
          },
          \\"400\\": {
            \\"description\\": \\"Invalid username supplied\\",
            \\"content\\": {}
          },
          \\"404\\": {
            \\"description\\": \\"User not found\\",
            \\"content\\": {}
          }
        }
      },
      \\"put\\": {
        \\"tags\\": [
          \\"user\\"
        ],
        \\"summary\\": \\"Updated user\\",
        \\"description\\": \\"This can only be done by the logged in user.\\",
        \\"operationId\\": \\"updateUser\\",
        \\"parameters\\": [
          {
            \\"name\\": \\"username\\",
            \\"in\\": \\"path\\",
            \\"description\\": \\"name that need to be updated\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"type\\": \\"string\\"
            }
          }
        ],
        \\"requestBody\\": {
          \\"description\\": \\"Updated user object\\",
          \\"content\\": {
            \\"*/*\\": {
              \\"schema\\": {
                \\"$ref\\": \\"#/components/schemas/User\\"
              }
            }
          },
          \\"required\\": true
        },
        \\"responses\\": {
          \\"400\\": {
            \\"description\\": \\"Invalid user supplied\\",
            \\"content\\": {}
          },
          \\"404\\": {
            \\"description\\": \\"User not found\\",
            \\"content\\": {}
          }
        },
        \\"x-codegen-request-body-name\\": \\"body\\"
      },
      \\"delete\\": {
        \\"tags\\": [
          \\"user\\"
        ],
        \\"summary\\": \\"Delete user\\",
        \\"description\\": \\"This can only be done by the logged in user.\\",
        \\"operationId\\": \\"deleteUser\\",
        \\"parameters\\": [
          {
            \\"name\\": \\"username\\",
            \\"in\\": \\"path\\",
            \\"description\\": \\"The name that needs to be deleted\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"type\\": \\"string\\"
            }
          }
        ],
        \\"responses\\": {
          \\"400\\": {
            \\"description\\": \\"Invalid username supplied\\",
            \\"content\\": {}
          },
          \\"404\\": {
            \\"description\\": \\"User not found\\",
            \\"content\\": {}
          }
        }
      }
    }
  },
  \\"components\\": {
    \\"schemas\\": {
      \\"Order\\": {
        \\"type\\": \\"object\\",
        \\"properties\\": {
          \\"id\\": {
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int64\\"
          },
          \\"petId\\": {
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int64\\"
          },
          \\"quantity\\": {
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int32\\"
          },
          \\"shipDate\\": {
            \\"type\\": \\"string\\",
            \\"format\\": \\"date-time\\"
          },
          \\"status\\": {
            \\"type\\": \\"string\\",
            \\"description\\": \\"Order Status\\",
            \\"enum\\": [
              \\"placed\\",
              \\"approved\\",
              \\"delivered\\"
            ]
          },
          \\"complete\\": {
            \\"type\\": \\"boolean\\",
            \\"default\\": false
          }
        },
        \\"xml\\": {
          \\"name\\": \\"Order\\"
        }
      },
      \\"Category\\": {
        \\"type\\": \\"object\\",
        \\"properties\\": {
          \\"id\\": {
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int64\\"
          },
          \\"name\\": {
            \\"type\\": \\"string\\"
          }
        },
        \\"xml\\": {
          \\"name\\": \\"Category\\"
        }
      },
      \\"User\\": {
        \\"type\\": \\"object\\",
        \\"properties\\": {
          \\"id\\": {
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int64\\"
          },
          \\"username\\": {
            \\"type\\": \\"string\\"
          },
          \\"firstName\\": {
            \\"type\\": \\"string\\"
          },
          \\"lastName\\": {
            \\"type\\": \\"string\\"
          },
          \\"email\\": {
            \\"type\\": \\"string\\"
          },
          \\"password\\": {
            \\"type\\": \\"string\\"
          },
          \\"phone\\": {
            \\"type\\": \\"string\\"
          },
          \\"userStatus\\": {
            \\"type\\": \\"integer\\",
            \\"description\\": \\"User Status\\",
            \\"format\\": \\"int32\\"
          }
        },
        \\"xml\\": {
          \\"name\\": \\"User\\"
        }
      },
      \\"Tag\\": {
        \\"type\\": \\"object\\",
        \\"properties\\": {
          \\"id\\": {
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int64\\"
          },
          \\"name\\": {
            \\"type\\": \\"string\\"
          }
        },
        \\"xml\\": {
          \\"name\\": \\"Tag\\"
        }
      },
      \\"Pet\\": {
        \\"required\\": [
          \\"name\\",
          \\"photoUrls\\"
        ],
        \\"type\\": \\"object\\",
        \\"properties\\": {
          \\"id\\": {
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int64\\"
          },
          \\"category\\": {
            \\"$ref\\": \\"#/components/schemas/Category\\"
          },
          \\"name\\": {
            \\"type\\": \\"string\\",
            \\"example\\": \\"doggie\\"
          },
          \\"photoUrls\\": {
            \\"type\\": \\"array\\",
            \\"xml\\": {
              \\"name\\": \\"photoUrl\\",
              \\"wrapped\\": true
            },
            \\"items\\": {
              \\"type\\": \\"string\\"
            }
          },
          \\"tags\\": {
            \\"type\\": \\"array\\",
            \\"xml\\": {
              \\"name\\": \\"tag\\",
              \\"wrapped\\": true
            },
            \\"items\\": {
              \\"$ref\\": \\"#/components/schemas/Tag\\"
            }
          },
          \\"status\\": {
            \\"type\\": \\"string\\",
            \\"description\\": \\"pet status in the store\\",
            \\"enum\\": [
              \\"available\\",
              \\"pending\\",
              \\"sold\\"
            ]
          }
        },
        \\"xml\\": {
          \\"name\\": \\"Pet\\"
        }
      },
      \\"ApiResponse\\": {
        \\"type\\": \\"object\\",
        \\"properties\\": {
          \\"code\\": {
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int32\\"
          },
          \\"type\\": {
            \\"type\\": \\"string\\"
          },
          \\"message\\": {
            \\"type\\": \\"string\\"
          }
        }
      }
    },
    \\"securitySchemes\\": {
      \\"petstore_auth\\": {
        \\"type\\": \\"oauth2\\",
        \\"flows\\": {
          \\"implicit\\": {
            \\"authorizationUrl\\": \\"http://petstore.swagger.io/oauth/dialog\\",
            \\"scopes\\": {
              \\"write:pets\\": \\"modify pets in your account\\",
              \\"read:pets\\": \\"read your pets\\"
            }
          }
        }
      },
      \\"api_key\\": {
        \\"type\\": \\"apiKey\\",
        \\"name\\": \\"api_key\\",
        \\"in\\": \\"header\\"
      }
    }
  }
}
",
        "index": null,
        "path": "/inputs/openapi3/petstore0.json",
        "sha256": "e810fa20b4de25520219a46efab67a741ba3a50b9368086e645d52c9e52ce442",
      },
    ],
    "refMappings": Object {
      "/components/schemas/Pet/properties/category": Array [
        0,
        "/components/schemas/Category",
      ],
      "/components/schemas/Pet/properties/tags/items": Array [
        0,
        "/components/schemas/Tag",
      ],
      "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/content/application~1json/schema": Array [
        0,
        "/components/schemas/ApiResponse",
      ],
      "/paths/~1store~1order/post/requestBody/content/*~1*/schema": Array [
        0,
        "/components/schemas/Order",
      ],
      "/paths/~1store~1order/post/responses/200/content/application~1json/schema": Array [
        0,
        "/components/schemas/Order",
      ],
      "/paths/~1store~1order/post/responses/200/content/application~1xml/schema": Array [
        0,
        "/components/schemas/Order",
      ],
      "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1json/schema": Array [
        0,
        "/components/schemas/Order",
      ],
      "/paths/~1store~1order~1{orderId}/get/responses/200/content/application~1xml/schema": Array [
        0,
        "/components/schemas/Order",
      ],
      "/paths/~1user/post/requestBody/content/*~1*/schema": Array [
        0,
        "/components/schemas/User",
      ],
      "/paths/~1user~1createWithArray/post/requestBody/content/*~1*/schema/items": Array [
        0,
        "/components/schemas/User",
      ],
      "/paths/~1user~1createWithList/post/requestBody/content/*~1*/schema/items": Array [
        0,
        "/components/schemas/User",
      ],
      "/paths/~1user~1{username}/get/responses/200/content/application~1json/schema": Array [
        0,
        "/components/schemas/User",
      ],
      "/paths/~1user~1{username}/get/responses/200/content/application~1xml/schema": Array [
        0,
        "/components/schemas/User",
      ],
      "/paths/~1user~1{username}/put/requestBody/content/*~1*/schema": Array [
        0,
        "/components/schemas/User",
      ],
    },
    "rootFilePath": "/inputs/openapi3/petstore0.json",
  },
}
`;

exports[`can parse an OpenAPI file with nested URLs from file or git 1`] = `
Object {
  "components": Object {
    "parameters": Object {
      "OrgId": Object {
        "description": "Org ID",
        "in": "path",
        "name": "org_id",
        "required": true,
        "schema": Object {
          "format": "uuid",
          "type": "string",
        },
      },
      "ThingId": Object {
        "description": "Unique identifier for thing instances",
        "in": "path",
        "name": "thing_id",
        "required": true,
        "schema": Object {
          "format": "uuid",
          "type": "string",
        },
      },
    },
    "schemas": Object {
      "ThingAttributes": Object {
        "additionalProperties": false,
        "properties": Object {
          "created": Object {
            "description": "Timestamp when this instance of thing was created.",
            "example": "2021-10-05T13:23:17Z",
            "format": "date-time",
            "type": "string",
          },
          "description": Object {
            "description": "User-friendly description of this instance of thing.",
            "example": "This is a thing named thing.",
            "type": "string",
          },
          "name": Object {
            "description": "Name of this instance of thing.",
            "example": "thing",
            "type": "string",
          },
          "updated": Object {
            "description": "Timestamp when this instance of thing was last updated.",
            "example": "2021-10-05T13:25:29Z",
            "format": "date-time",
            "type": "string",
          },
        },
        "type": "object",
      },
      "ThingCollection": Object {
        "items": Object {
          "additionalProperties": false,
          "description": "thing resource object",
          "properties": Object {
            "attributes": Object {
              "additionalProperties": false,
              "properties": Object {
                "created": Object {
                  "description": "Timestamp when this instance of thing was created.",
                  "example": "2021-10-05T13:23:17Z",
                  "format": "date-time",
                  "type": "string",
                },
                "description": Object {
                  "description": "User-friendly description of this instance of thing.",
                  "example": "This is a thing named thing.",
                  "type": "string",
                },
                "name": Object {
                  "description": "Name of this instance of thing.",
                  "example": "thing",
                  "type": "string",
                },
                "updated": Object {
                  "description": "Timestamp when this instance of thing was last updated.",
                  "example": "2021-10-05T13:25:29Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "id": Object {
              "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
              "format": "uuid",
              "type": "string",
            },
            "relationships": Object {
              "additionalProperties": false,
              "properties": Object {
                "example": Object {
                  "example": Object {
                    "data": Object {
                      "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                      "type": "resource",
                    },
                    "links": Object {
                      "related": Object {
                        "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                      },
                    },
                  },
                  "properties": Object {
                    "data": Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "id": Object {
                          "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                          "format": "uuid",
                          "type": "string",
                        },
                        "type": Object {
                          "description": "Type of the related resource",
                          "example": "resource",
                          "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "type",
                        "id",
                      ],
                      "type": "object",
                    },
                    "links": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "related": "https://example.com/api/other_resource",
                      },
                      "properties": Object {
                        "related": Object {
                          "example": "https://example.com/api/resource",
                          "oneOf": Array [
                            Object {
                              "description": "A string containing the link’s URL.",
                              "example": "https://example.com/api/resource",
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "example": Object {
                                "href": "https://example.com/api/resource",
                              },
                              "properties": Object {
                                "href": Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                      },
                      "type": "object",
                    },
                    "meta": Object {
                      "additionalProperties": true,
                      "description": "Free-form object that may contain non-standard information.",
                      "example": Object {
                        "key1": "value1",
                        "key2": Object {
                          "sub_key": "sub_value",
                        },
                        "key3": Array [
                          "array_value1",
                          "array_value2",
                        ],
                      },
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "data",
                    "links",
                  ],
                  "type": "object",
                },
              },
              "type": "object",
            },
            "type": Object {
              "example": "resource",
              "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
              "type": "string",
            },
          },
          "type": "object",
        },
        "type": "array",
      },
      "ThingCollectionResponse": Object {
        "description": "Response containing a collection of thing resource objects",
        "properties": Object {
          "data": Object {
            "items": Object {
              "additionalProperties": false,
              "description": "thing resource object",
              "properties": Object {
                "attributes": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "created": Object {
                      "description": "Timestamp when this instance of thing was created.",
                      "example": "2021-10-05T13:23:17Z",
                      "format": "date-time",
                      "type": "string",
                    },
                    "description": Object {
                      "description": "User-friendly description of this instance of thing.",
                      "example": "This is a thing named thing.",
                      "type": "string",
                    },
                    "name": Object {
                      "description": "Name of this instance of thing.",
                      "example": "thing",
                      "type": "string",
                    },
                    "updated": Object {
                      "description": "Timestamp when this instance of thing was last updated.",
                      "example": "2021-10-05T13:25:29Z",
                      "format": "date-time",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "id": Object {
                  "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                  "format": "uuid",
                  "type": "string",
                },
                "relationships": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "example": Object {
                      "example": Object {
                        "data": Object {
                          "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                          "type": "resource",
                        },
                        "links": Object {
                          "related": Object {
                            "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                          },
                        },
                      },
                      "properties": Object {
                        "data": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "id": Object {
                              "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                              "format": "uuid",
                              "type": "string",
                            },
                            "type": Object {
                              "description": "Type of the related resource",
                              "example": "resource",
                              "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "type",
                            "id",
                          ],
                          "type": "object",
                        },
                        "links": Object {
                          "additionalProperties": false,
                          "example": Object {
                            "related": "https://example.com/api/other_resource",
                          },
                          "properties": Object {
                            "related": Object {
                              "example": "https://example.com/api/resource",
                              "oneOf": Array [
                                Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                Object {
                                  "additionalProperties": false,
                                  "example": Object {
                                    "href": "https://example.com/api/resource",
                                  },
                                  "properties": Object {
                                    "href": Object {
                                      "description": "A string containing the link’s URL.",
                                      "example": "https://example.com/api/resource",
                                      "type": "string",
                                    },
                                    "meta": Object {
                                      "additionalProperties": true,
                                      "description": "Free-form object that may contain non-standard information.",
                                      "example": Object {
                                        "key1": "value1",
                                        "key2": Object {
                                          "sub_key": "sub_value",
                                        },
                                        "key3": Array [
                                          "array_value1",
                                          "array_value2",
                                        ],
                                      },
                                      "type": "object",
                                    },
                                  },
                                  "required": Array [
                                    "href",
                                  ],
                                  "type": "object",
                                },
                              ],
                            },
                          },
                          "type": "object",
                        },
                        "meta": Object {
                          "additionalProperties": true,
                          "description": "Free-form object that may contain non-standard information.",
                          "example": Object {
                            "key1": "value1",
                            "key2": Object {
                              "sub_key": "sub_value",
                            },
                            "key3": Array [
                              "array_value1",
                              "array_value2",
                            ],
                          },
                          "type": "object",
                        },
                      },
                      "required": Array [
                        "data",
                        "links",
                      ],
                      "type": "object",
                    },
                  },
                  "type": "object",
                },
                "type": Object {
                  "example": "resource",
                  "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "jsonapi": Object {
            "additionalProperties": false,
            "example": Object {
              "version": "1.0",
            },
            "properties": Object {
              "version": Object {
                "description": "Version of the JSON API specification this server supports.",
                "example": "1.0",
                "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                "type": "string",
              },
            },
            "required": Array [
              "version",
            ],
            "type": "object",
          },
          "links": Object {
            "additionalProperties": false,
            "example": Object {
              "first": "https://example.com/api/resource?ending_before=v1.eyJpZCI6IjExIn0K",
              "last": "https://example.com/api/resource?starting_after=v1.eyJpZCI6IjMwIn0K",
              "next": "https://example.com/api/resource?starting_after=v1.eyJpZCI6IjEwIn0K",
            },
            "properties": Object {
              "first": Object {
                "example": "https://example.com/api/resource",
                "oneOf": Array [
                  Object {
                    "description": "A string containing the link’s URL.",
                    "example": "https://example.com/api/resource",
                    "type": "string",
                  },
                  Object {
                    "additionalProperties": false,
                    "example": Object {
                      "href": "https://example.com/api/resource",
                    },
                    "properties": Object {
                      "href": Object {
                        "description": "A string containing the link’s URL.",
                        "example": "https://example.com/api/resource",
                        "type": "string",
                      },
                      "meta": Object {
                        "additionalProperties": true,
                        "description": "Free-form object that may contain non-standard information.",
                        "example": Object {
                          "key1": "value1",
                          "key2": Object {
                            "sub_key": "sub_value",
                          },
                          "key3": Array [
                            "array_value1",
                            "array_value2",
                          ],
                        },
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "href",
                    ],
                    "type": "object",
                  },
                ],
              },
              "last": Object {
                "example": "https://example.com/api/resource",
                "oneOf": Array [
                  Object {
                    "description": "A string containing the link’s URL.",
                    "example": "https://example.com/api/resource",
                    "type": "string",
                  },
                  Object {
                    "additionalProperties": false,
                    "example": Object {
                      "href": "https://example.com/api/resource",
                    },
                    "properties": Object {
                      "href": Object {
                        "description": "A string containing the link’s URL.",
                        "example": "https://example.com/api/resource",
                        "type": "string",
                      },
                      "meta": Object {
                        "additionalProperties": true,
                        "description": "Free-form object that may contain non-standard information.",
                        "example": Object {
                          "key1": "value1",
                          "key2": Object {
                            "sub_key": "sub_value",
                          },
                          "key3": Array [
                            "array_value1",
                            "array_value2",
                          ],
                        },
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "href",
                    ],
                    "type": "object",
                  },
                ],
              },
              "next": Object {
                "example": "https://example.com/api/resource",
                "oneOf": Array [
                  Object {
                    "description": "A string containing the link’s URL.",
                    "example": "https://example.com/api/resource",
                    "type": "string",
                  },
                  Object {
                    "additionalProperties": false,
                    "example": Object {
                      "href": "https://example.com/api/resource",
                    },
                    "properties": Object {
                      "href": Object {
                        "description": "A string containing the link’s URL.",
                        "example": "https://example.com/api/resource",
                        "type": "string",
                      },
                      "meta": Object {
                        "additionalProperties": true,
                        "description": "Free-form object that may contain non-standard information.",
                        "example": Object {
                          "key1": "value1",
                          "key2": Object {
                            "sub_key": "sub_value",
                          },
                          "key3": Array [
                            "array_value1",
                            "array_value2",
                          ],
                        },
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "href",
                    ],
                    "type": "object",
                  },
                ],
              },
              "prev": Object {
                "example": "https://example.com/api/resource",
                "oneOf": Array [
                  Object {
                    "description": "A string containing the link’s URL.",
                    "example": "https://example.com/api/resource",
                    "type": "string",
                  },
                  Object {
                    "additionalProperties": false,
                    "example": Object {
                      "href": "https://example.com/api/resource",
                    },
                    "properties": Object {
                      "href": Object {
                        "description": "A string containing the link’s URL.",
                        "example": "https://example.com/api/resource",
                        "type": "string",
                      },
                      "meta": Object {
                        "additionalProperties": true,
                        "description": "Free-form object that may contain non-standard information.",
                        "example": Object {
                          "key1": "value1",
                          "key2": Object {
                            "sub_key": "sub_value",
                          },
                          "key3": Array [
                            "array_value1",
                            "array_value2",
                          ],
                        },
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "href",
                    ],
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      },
      "ThingRelationships": Object {
        "additionalProperties": false,
        "properties": Object {
          "example": Object {
            "example": Object {
              "data": Object {
                "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                "type": "resource",
              },
              "links": Object {
                "related": Object {
                  "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                },
              },
            },
            "properties": Object {
              "data": Object {
                "additionalProperties": false,
                "properties": Object {
                  "id": Object {
                    "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                    "format": "uuid",
                    "type": "string",
                  },
                  "type": Object {
                    "description": "Type of the related resource",
                    "example": "resource",
                    "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                    "type": "string",
                  },
                },
                "required": Array [
                  "type",
                  "id",
                ],
                "type": "object",
              },
              "links": Object {
                "additionalProperties": false,
                "example": Object {
                  "related": "https://example.com/api/other_resource",
                },
                "properties": Object {
                  "related": Object {
                    "example": "https://example.com/api/resource",
                    "oneOf": Array [
                      Object {
                        "description": "A string containing the link’s URL.",
                        "example": "https://example.com/api/resource",
                        "type": "string",
                      },
                      Object {
                        "additionalProperties": false,
                        "example": Object {
                          "href": "https://example.com/api/resource",
                        },
                        "properties": Object {
                          "href": Object {
                            "description": "A string containing the link’s URL.",
                            "example": "https://example.com/api/resource",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "description": "Free-form object that may contain non-standard information.",
                            "example": Object {
                              "key1": "value1",
                              "key2": Object {
                                "sub_key": "sub_value",
                              },
                              "key3": Array [
                                "array_value1",
                                "array_value2",
                              ],
                            },
                            "type": "object",
                          },
                        },
                        "required": Array [
                          "href",
                        ],
                        "type": "object",
                      },
                    ],
                  },
                },
                "type": "object",
              },
              "meta": Object {
                "additionalProperties": true,
                "description": "Free-form object that may contain non-standard information.",
                "example": Object {
                  "key1": "value1",
                  "key2": Object {
                    "sub_key": "sub_value",
                  },
                  "key3": Array [
                    "array_value1",
                    "array_value2",
                  ],
                },
                "type": "object",
              },
            },
            "required": Array [
              "data",
              "links",
            ],
            "type": "object",
          },
        },
        "type": "object",
      },
      "ThingResource": Object {
        "additionalProperties": false,
        "description": "thing resource object",
        "properties": Object {
          "attributes": Object {
            "additionalProperties": false,
            "properties": Object {
              "created": Object {
                "description": "Timestamp when this instance of thing was created.",
                "example": "2021-10-05T13:23:17Z",
                "format": "date-time",
                "type": "string",
              },
              "description": Object {
                "description": "User-friendly description of this instance of thing.",
                "example": "This is a thing named thing.",
                "type": "string",
              },
              "name": Object {
                "description": "Name of this instance of thing.",
                "example": "thing",
                "type": "string",
              },
              "updated": Object {
                "description": "Timestamp when this instance of thing was last updated.",
                "example": "2021-10-05T13:25:29Z",
                "format": "date-time",
                "type": "string",
              },
            },
            "type": "object",
          },
          "id": Object {
            "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
            "format": "uuid",
            "type": "string",
          },
          "relationships": Object {
            "additionalProperties": false,
            "properties": Object {
              "example": Object {
                "example": Object {
                  "data": Object {
                    "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                    "type": "resource",
                  },
                  "links": Object {
                    "related": Object {
                      "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                    },
                  },
                },
                "properties": Object {
                  "data": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "id": Object {
                        "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                        "format": "uuid",
                        "type": "string",
                      },
                      "type": Object {
                        "description": "Type of the related resource",
                        "example": "resource",
                        "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "type",
                      "id",
                    ],
                    "type": "object",
                  },
                  "links": Object {
                    "additionalProperties": false,
                    "example": Object {
                      "related": "https://example.com/api/other_resource",
                    },
                    "properties": Object {
                      "related": Object {
                        "example": "https://example.com/api/resource",
                        "oneOf": Array [
                          Object {
                            "description": "A string containing the link’s URL.",
                            "example": "https://example.com/api/resource",
                            "type": "string",
                          },
                          Object {
                            "additionalProperties": false,
                            "example": Object {
                              "href": "https://example.com/api/resource",
                            },
                            "properties": Object {
                              "href": Object {
                                "description": "A string containing the link’s URL.",
                                "example": "https://example.com/api/resource",
                                "type": "string",
                              },
                              "meta": Object {
                                "additionalProperties": true,
                                "description": "Free-form object that may contain non-standard information.",
                                "example": Object {
                                  "key1": "value1",
                                  "key2": Object {
                                    "sub_key": "sub_value",
                                  },
                                  "key3": Array [
                                    "array_value1",
                                    "array_value2",
                                  ],
                                },
                                "type": "object",
                              },
                            },
                            "required": Array [
                              "href",
                            ],
                            "type": "object",
                          },
                        ],
                      },
                    },
                    "type": "object",
                  },
                  "meta": Object {
                    "additionalProperties": true,
                    "description": "Free-form object that may contain non-standard information.",
                    "example": Object {
                      "key1": "value1",
                      "key2": Object {
                        "sub_key": "sub_value",
                      },
                      "key3": Array [
                        "array_value1",
                        "array_value2",
                      ],
                    },
                    "type": "object",
                  },
                },
                "required": Array [
                  "data",
                  "links",
                ],
                "type": "object",
              },
            },
            "type": "object",
          },
          "type": Object {
            "example": "resource",
            "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
            "type": "string",
          },
        },
        "type": "object",
      },
      "ThingResourceResponse": Object {
        "description": "Response containing a single thing resource object",
        "properties": Object {
          "data": Object {
            "additionalProperties": false,
            "description": "thing resource object",
            "properties": Object {
              "attributes": Object {
                "additionalProperties": false,
                "properties": Object {
                  "created": Object {
                    "description": "Timestamp when this instance of thing was created.",
                    "example": "2021-10-05T13:23:17Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "description": Object {
                    "description": "User-friendly description of this instance of thing.",
                    "example": "This is a thing named thing.",
                    "type": "string",
                  },
                  "name": Object {
                    "description": "Name of this instance of thing.",
                    "example": "thing",
                    "type": "string",
                  },
                  "updated": Object {
                    "description": "Timestamp when this instance of thing was last updated.",
                    "example": "2021-10-05T13:25:29Z",
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": Object {
                "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                "format": "uuid",
                "type": "string",
              },
              "relationships": Object {
                "additionalProperties": false,
                "properties": Object {
                  "example": Object {
                    "example": Object {
                      "data": Object {
                        "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                        "type": "resource",
                      },
                      "links": Object {
                        "related": Object {
                          "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                        },
                      },
                    },
                    "properties": Object {
                      "data": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "id": Object {
                            "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                            "format": "uuid",
                            "type": "string",
                          },
                          "type": Object {
                            "description": "Type of the related resource",
                            "example": "resource",
                            "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "type",
                          "id",
                        ],
                        "type": "object",
                      },
                      "links": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "related": "https://example.com/api/other_resource",
                        },
                        "properties": Object {
                          "related": Object {
                            "example": "https://example.com/api/resource",
                            "oneOf": Array [
                              Object {
                                "description": "A string containing the link’s URL.",
                                "example": "https://example.com/api/resource",
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "example": Object {
                                  "href": "https://example.com/api/resource",
                                },
                                "properties": Object {
                                  "href": Object {
                                    "description": "A string containing the link’s URL.",
                                    "example": "https://example.com/api/resource",
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "description": "Free-form object that may contain non-standard information.",
                                    "example": Object {
                                      "key1": "value1",
                                      "key2": Object {
                                        "sub_key": "sub_value",
                                      },
                                      "key3": Array [
                                        "array_value1",
                                        "array_value2",
                                      ],
                                    },
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                        },
                        "type": "object",
                      },
                      "meta": Object {
                        "additionalProperties": true,
                        "description": "Free-form object that may contain non-standard information.",
                        "example": Object {
                          "key1": "value1",
                          "key2": Object {
                            "sub_key": "sub_value",
                          },
                          "key3": Array [
                            "array_value1",
                            "array_value2",
                          ],
                        },
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "data",
                      "links",
                    ],
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "type": Object {
                "example": "resource",
                "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                "type": "string",
              },
            },
            "type": "object",
          },
          "jsonapi": Object {
            "additionalProperties": false,
            "example": Object {
              "version": "1.0",
            },
            "properties": Object {
              "version": Object {
                "description": "Version of the JSON API specification this server supports.",
                "example": "1.0",
                "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                "type": "string",
              },
            },
            "required": Array [
              "version",
            ],
            "type": "object",
          },
          "links": Object {
            "additionalProperties": false,
            "example": Object {
              "self": "https://example.com/api/this_resource",
            },
            "properties": Object {
              "self": Object {
                "example": "https://example.com/api/resource",
                "oneOf": Array [
                  Object {
                    "description": "A string containing the link’s URL.",
                    "example": "https://example.com/api/resource",
                    "type": "string",
                  },
                  Object {
                    "additionalProperties": false,
                    "example": Object {
                      "href": "https://example.com/api/resource",
                    },
                    "properties": Object {
                      "href": Object {
                        "description": "A string containing the link’s URL.",
                        "example": "https://example.com/api/resource",
                        "type": "string",
                      },
                      "meta": Object {
                        "additionalProperties": true,
                        "description": "Free-form object that may contain non-standard information.",
                        "example": Object {
                          "key1": "value1",
                          "key2": Object {
                            "sub_key": "sub_value",
                          },
                          "key3": Array [
                            "array_value1",
                            "array_value2",
                          ],
                        },
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "href",
                    ],
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
        "type": "object",
      },
    },
  },
  "info": Object {
    "title": "v3",
    "version": "3.0.0",
  },
  "openapi": "3.0.3",
  "paths": Object {
    "/orgs/{org_id}/thing": Object {
      "get": Object {
        "description": "List instances of thing",
        "operationId": "listThing",
        "parameters": Array [
          Object {
            "description": "The requested version of the endpoint to process the request",
            "example": "2021-06-04",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": Object {
              "description": "Requested API version",
              "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
              "type": "string",
            },
          },
          Object {
            "description": "Org ID",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": Object {
              "format": "uuid",
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "description": "Response containing a collection of thing resource objects",
                  "properties": Object {
                    "data": Object {
                      "items": Object {
                        "additionalProperties": false,
                        "description": "thing resource object",
                        "properties": Object {
                          "attributes": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "created": Object {
                                "description": "Timestamp when this instance of thing was created.",
                                "example": "2021-10-05T13:23:17Z",
                                "format": "date-time",
                                "type": "string",
                              },
                              "description": Object {
                                "description": "User-friendly description of this instance of thing.",
                                "example": "This is a thing named thing.",
                                "type": "string",
                              },
                              "name": Object {
                                "description": "Name of this instance of thing.",
                                "example": "thing",
                                "type": "string",
                              },
                              "updated": Object {
                                "description": "Timestamp when this instance of thing was last updated.",
                                "example": "2021-10-05T13:25:29Z",
                                "format": "date-time",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "id": Object {
                            "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                            "format": "uuid",
                            "type": "string",
                          },
                          "relationships": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "example": Object {
                                "example": Object {
                                  "data": Object {
                                    "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                                    "type": "resource",
                                  },
                                  "links": Object {
                                    "related": Object {
                                      "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                                    },
                                  },
                                },
                                "properties": Object {
                                  "data": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "id": Object {
                                        "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                                        "format": "uuid",
                                        "type": "string",
                                      },
                                      "type": Object {
                                        "description": "Type of the related resource",
                                        "example": "resource",
                                        "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "type",
                                      "id",
                                    ],
                                    "type": "object",
                                  },
                                  "links": Object {
                                    "additionalProperties": false,
                                    "example": Object {
                                      "related": "https://example.com/api/other_resource",
                                    },
                                    "properties": Object {
                                      "related": Object {
                                        "example": "https://example.com/api/resource",
                                        "oneOf": Array [
                                          Object {
                                            "description": "A string containing the link’s URL.",
                                            "example": "https://example.com/api/resource",
                                            "type": "string",
                                          },
                                          Object {
                                            "additionalProperties": false,
                                            "example": Object {
                                              "href": "https://example.com/api/resource",
                                            },
                                            "properties": Object {
                                              "href": Object {
                                                "description": "A string containing the link’s URL.",
                                                "example": "https://example.com/api/resource",
                                                "type": "string",
                                              },
                                              "meta": Object {
                                                "additionalProperties": true,
                                                "description": "Free-form object that may contain non-standard information.",
                                                "example": Object {
                                                  "key1": "value1",
                                                  "key2": Object {
                                                    "sub_key": "sub_value",
                                                  },
                                                  "key3": Array [
                                                    "array_value1",
                                                    "array_value2",
                                                  ],
                                                },
                                                "type": "object",
                                              },
                                            },
                                            "required": Array [
                                              "href",
                                            ],
                                            "type": "object",
                                          },
                                        ],
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "description": "Free-form object that may contain non-standard information.",
                                    "example": Object {
                                      "key1": "value1",
                                      "key2": Object {
                                        "sub_key": "sub_value",
                                      },
                                      "key3": Array [
                                        "array_value1",
                                        "array_value2",
                                      ],
                                    },
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "data",
                                  "links",
                                ],
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "type": Object {
                            "example": "resource",
                            "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                    "links": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "first": "https://example.com/api/resource?ending_before=v1.eyJpZCI6IjExIn0K",
                        "last": "https://example.com/api/resource?starting_after=v1.eyJpZCI6IjMwIn0K",
                        "next": "https://example.com/api/resource?starting_after=v1.eyJpZCI6IjEwIn0K",
                      },
                      "properties": Object {
                        "first": Object {
                          "example": "https://example.com/api/resource",
                          "oneOf": Array [
                            Object {
                              "description": "A string containing the link’s URL.",
                              "example": "https://example.com/api/resource",
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "example": Object {
                                "href": "https://example.com/api/resource",
                              },
                              "properties": Object {
                                "href": Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                        "last": Object {
                          "example": "https://example.com/api/resource",
                          "oneOf": Array [
                            Object {
                              "description": "A string containing the link’s URL.",
                              "example": "https://example.com/api/resource",
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "example": Object {
                                "href": "https://example.com/api/resource",
                              },
                              "properties": Object {
                                "href": Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                        "next": Object {
                          "example": "https://example.com/api/resource",
                          "oneOf": Array [
                            Object {
                              "description": "A string containing the link’s URL.",
                              "example": "https://example.com/api/resource",
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "example": Object {
                                "href": "https://example.com/api/resource",
                              },
                              "properties": Object {
                                "href": Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                        "prev": Object {
                          "example": "https://example.com/api/resource",
                          "oneOf": Array [
                            Object {
                              "description": "A string containing the link’s URL.",
                              "example": "https://example.com/api/resource",
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "example": Object {
                                "href": "https://example.com/api/resource",
                              },
                              "properties": Object {
                                "href": Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                      },
                      "type": "object",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Returns a list of thing instances",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "400": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Bad Request: A parameter provided as a part of the request was invalid.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "401": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "403": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "404": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Not Found: The resource being operated on could not be found.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "500": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Internal Server Error: An error was encountered while attempting to process the request.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
        },
        "summary": "List instances of thing",
        "tags": Array [
          "Thing",
        ],
      },
      "post": Object {
        "description": "Create a new thing",
        "operationId": "createThing",
        "parameters": Array [
          Object {
            "description": "The requested version of the endpoint to process the request",
            "example": "2021-06-04",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": Object {
              "description": "Requested API version",
              "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
              "type": "string",
            },
          },
          Object {
            "description": "Org ID",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": Object {
              "format": "uuid",
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "201": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "description": "Response containing a single thing resource object",
                  "properties": Object {
                    "data": Object {
                      "additionalProperties": false,
                      "description": "thing resource object",
                      "properties": Object {
                        "attributes": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "created": Object {
                              "description": "Timestamp when this instance of thing was created.",
                              "example": "2021-10-05T13:23:17Z",
                              "format": "date-time",
                              "type": "string",
                            },
                            "description": Object {
                              "description": "User-friendly description of this instance of thing.",
                              "example": "This is a thing named thing.",
                              "type": "string",
                            },
                            "name": Object {
                              "description": "Name of this instance of thing.",
                              "example": "thing",
                              "type": "string",
                            },
                            "updated": Object {
                              "description": "Timestamp when this instance of thing was last updated.",
                              "example": "2021-10-05T13:25:29Z",
                              "format": "date-time",
                              "type": "string",
                            },
                          },
                          "type": "object",
                        },
                        "id": Object {
                          "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                          "format": "uuid",
                          "type": "string",
                        },
                        "relationships": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "example": Object {
                              "example": Object {
                                "data": Object {
                                  "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                                  "type": "resource",
                                },
                                "links": Object {
                                  "related": Object {
                                    "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                                  },
                                },
                              },
                              "properties": Object {
                                "data": Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "id": Object {
                                      "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                                      "format": "uuid",
                                      "type": "string",
                                    },
                                    "type": Object {
                                      "description": "Type of the related resource",
                                      "example": "resource",
                                      "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "type",
                                    "id",
                                  ],
                                  "type": "object",
                                },
                                "links": Object {
                                  "additionalProperties": false,
                                  "example": Object {
                                    "related": "https://example.com/api/other_resource",
                                  },
                                  "properties": Object {
                                    "related": Object {
                                      "example": "https://example.com/api/resource",
                                      "oneOf": Array [
                                        Object {
                                          "description": "A string containing the link’s URL.",
                                          "example": "https://example.com/api/resource",
                                          "type": "string",
                                        },
                                        Object {
                                          "additionalProperties": false,
                                          "example": Object {
                                            "href": "https://example.com/api/resource",
                                          },
                                          "properties": Object {
                                            "href": Object {
                                              "description": "A string containing the link’s URL.",
                                              "example": "https://example.com/api/resource",
                                              "type": "string",
                                            },
                                            "meta": Object {
                                              "additionalProperties": true,
                                              "description": "Free-form object that may contain non-standard information.",
                                              "example": Object {
                                                "key1": "value1",
                                                "key2": Object {
                                                  "sub_key": "sub_value",
                                                },
                                                "key3": Array [
                                                  "array_value1",
                                                  "array_value2",
                                                ],
                                              },
                                              "type": "object",
                                            },
                                          },
                                          "required": Array [
                                            "href",
                                          ],
                                          "type": "object",
                                        },
                                      ],
                                    },
                                  },
                                  "type": "object",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "data",
                                "links",
                              ],
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "type": Object {
                          "example": "resource",
                          "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                    "links": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "self": "https://example.com/api/this_resource",
                      },
                      "properties": Object {
                        "self": Object {
                          "example": "https://example.com/api/resource",
                          "oneOf": Array [
                            Object {
                              "description": "A string containing the link’s URL.",
                              "example": "https://example.com/api/resource",
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "example": Object {
                                "href": "https://example.com/api/resource",
                              },
                              "properties": Object {
                                "href": Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                      },
                      "type": "object",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Created thing successfully",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "400": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Bad Request: A parameter provided as a part of the request was invalid.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "401": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "403": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "404": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Not Found: The resource being operated on could not be found.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "409": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflict: The requested operation conflicts with the current state of the resource in some way.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "500": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Internal Server Error: An error was encountered while attempting to process the request.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
        },
        "summary": "Create a new thing",
        "tags": Array [
          "Thing",
        ],
      },
    },
    "/orgs/{org_id}/thing/{thing_id}": Object {
      "delete": Object {
        "description": "Delete an instance of thing",
        "operationId": "deleteThing",
        "parameters": Array [
          Object {
            "description": "The requested version of the endpoint to process the request",
            "example": "2021-06-04",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": Object {
              "description": "Requested API version",
              "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
              "type": "string",
            },
          },
          Object {
            "description": "Org ID",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": Object {
              "format": "uuid",
              "type": "string",
            },
          },
          Object {
            "description": "Unique identifier for thing instances",
            "in": "path",
            "name": "thing_id",
            "required": true,
            "schema": Object {
              "format": "uuid",
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "The operation completed successfully with no content",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "400": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Bad Request: A parameter provided as a part of the request was invalid.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "401": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "403": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "404": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Not Found: The resource being operated on could not be found.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "409": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflict: The requested operation conflicts with the current state of the resource in some way.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "500": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Internal Server Error: An error was encountered while attempting to process the request.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
        },
        "summary": "Delete an instance of thing",
        "tags": Array [
          "Thing",
        ],
      },
      "get": Object {
        "description": "Get an instance of thing",
        "operationId": "getThing",
        "parameters": Array [
          Object {
            "description": "The requested version of the endpoint to process the request",
            "example": "2021-06-04",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": Object {
              "description": "Requested API version",
              "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
              "type": "string",
            },
          },
          Object {
            "description": "Org ID",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": Object {
              "format": "uuid",
              "type": "string",
            },
          },
          Object {
            "description": "Unique identifier for thing instances",
            "in": "path",
            "name": "thing_id",
            "required": true,
            "schema": Object {
              "format": "uuid",
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "description": "Response containing a single thing resource object",
                  "properties": Object {
                    "data": Object {
                      "additionalProperties": false,
                      "description": "thing resource object",
                      "properties": Object {
                        "attributes": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "created": Object {
                              "description": "Timestamp when this instance of thing was created.",
                              "example": "2021-10-05T13:23:17Z",
                              "format": "date-time",
                              "type": "string",
                            },
                            "description": Object {
                              "description": "User-friendly description of this instance of thing.",
                              "example": "This is a thing named thing.",
                              "type": "string",
                            },
                            "name": Object {
                              "description": "Name of this instance of thing.",
                              "example": "thing",
                              "type": "string",
                            },
                            "updated": Object {
                              "description": "Timestamp when this instance of thing was last updated.",
                              "example": "2021-10-05T13:25:29Z",
                              "format": "date-time",
                              "type": "string",
                            },
                          },
                          "type": "object",
                        },
                        "id": Object {
                          "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                          "format": "uuid",
                          "type": "string",
                        },
                        "relationships": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "example": Object {
                              "example": Object {
                                "data": Object {
                                  "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                                  "type": "resource",
                                },
                                "links": Object {
                                  "related": Object {
                                    "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                                  },
                                },
                              },
                              "properties": Object {
                                "data": Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "id": Object {
                                      "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                                      "format": "uuid",
                                      "type": "string",
                                    },
                                    "type": Object {
                                      "description": "Type of the related resource",
                                      "example": "resource",
                                      "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "type",
                                    "id",
                                  ],
                                  "type": "object",
                                },
                                "links": Object {
                                  "additionalProperties": false,
                                  "example": Object {
                                    "related": "https://example.com/api/other_resource",
                                  },
                                  "properties": Object {
                                    "related": Object {
                                      "example": "https://example.com/api/resource",
                                      "oneOf": Array [
                                        Object {
                                          "description": "A string containing the link’s URL.",
                                          "example": "https://example.com/api/resource",
                                          "type": "string",
                                        },
                                        Object {
                                          "additionalProperties": false,
                                          "example": Object {
                                            "href": "https://example.com/api/resource",
                                          },
                                          "properties": Object {
                                            "href": Object {
                                              "description": "A string containing the link’s URL.",
                                              "example": "https://example.com/api/resource",
                                              "type": "string",
                                            },
                                            "meta": Object {
                                              "additionalProperties": true,
                                              "description": "Free-form object that may contain non-standard information.",
                                              "example": Object {
                                                "key1": "value1",
                                                "key2": Object {
                                                  "sub_key": "sub_value",
                                                },
                                                "key3": Array [
                                                  "array_value1",
                                                  "array_value2",
                                                ],
                                              },
                                              "type": "object",
                                            },
                                          },
                                          "required": Array [
                                            "href",
                                          ],
                                          "type": "object",
                                        },
                                      ],
                                    },
                                  },
                                  "type": "object",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "data",
                                "links",
                              ],
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "type": Object {
                          "example": "resource",
                          "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                    "links": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "self": "https://example.com/api/this_resource",
                      },
                      "properties": Object {
                        "self": Object {
                          "example": "https://example.com/api/resource",
                          "oneOf": Array [
                            Object {
                              "description": "A string containing the link’s URL.",
                              "example": "https://example.com/api/resource",
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "example": Object {
                                "href": "https://example.com/api/resource",
                              },
                              "properties": Object {
                                "href": Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                      },
                      "type": "object",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Returns an instance of thing",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "400": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Bad Request: A parameter provided as a part of the request was invalid.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "401": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "403": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "404": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Not Found: The resource being operated on could not be found.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "500": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Internal Server Error: An error was encountered while attempting to process the request.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
        },
        "summary": "Get an instance of thing",
        "tags": Array [
          "Thing",
        ],
      },
      "patch": Object {
        "description": "Update an instance of thing",
        "operationId": "updateThing",
        "parameters": Array [
          Object {
            "description": "The requested version of the endpoint to process the request",
            "example": "2021-06-04",
            "in": "query",
            "name": "version",
            "required": true,
            "schema": Object {
              "description": "Requested API version",
              "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
              "type": "string",
            },
          },
          Object {
            "description": "Org ID",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": Object {
              "format": "uuid",
              "type": "string",
            },
          },
          Object {
            "description": "Unique identifier for thing instances",
            "in": "path",
            "name": "thing_id",
            "required": true,
            "schema": Object {
              "format": "uuid",
              "type": "string",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "description": "Response containing a single thing resource object",
                  "properties": Object {
                    "data": Object {
                      "additionalProperties": false,
                      "description": "thing resource object",
                      "properties": Object {
                        "attributes": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "created": Object {
                              "description": "Timestamp when this instance of thing was created.",
                              "example": "2021-10-05T13:23:17Z",
                              "format": "date-time",
                              "type": "string",
                            },
                            "description": Object {
                              "description": "User-friendly description of this instance of thing.",
                              "example": "This is a thing named thing.",
                              "type": "string",
                            },
                            "name": Object {
                              "description": "Name of this instance of thing.",
                              "example": "thing",
                              "type": "string",
                            },
                            "updated": Object {
                              "description": "Timestamp when this instance of thing was last updated.",
                              "example": "2021-10-05T13:25:29Z",
                              "format": "date-time",
                              "type": "string",
                            },
                          },
                          "type": "object",
                        },
                        "id": Object {
                          "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                          "format": "uuid",
                          "type": "string",
                        },
                        "relationships": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "example": Object {
                              "example": Object {
                                "data": Object {
                                  "id": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                                  "type": "resource",
                                },
                                "links": Object {
                                  "related": Object {
                                    "href": "https://example.com/api/resource/4a72d1db-b465-4764-99e1-ecedad03b06a",
                                  },
                                },
                              },
                              "properties": Object {
                                "data": Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "id": Object {
                                      "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                                      "format": "uuid",
                                      "type": "string",
                                    },
                                    "type": Object {
                                      "description": "Type of the related resource",
                                      "example": "resource",
                                      "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "type",
                                    "id",
                                  ],
                                  "type": "object",
                                },
                                "links": Object {
                                  "additionalProperties": false,
                                  "example": Object {
                                    "related": "https://example.com/api/other_resource",
                                  },
                                  "properties": Object {
                                    "related": Object {
                                      "example": "https://example.com/api/resource",
                                      "oneOf": Array [
                                        Object {
                                          "description": "A string containing the link’s URL.",
                                          "example": "https://example.com/api/resource",
                                          "type": "string",
                                        },
                                        Object {
                                          "additionalProperties": false,
                                          "example": Object {
                                            "href": "https://example.com/api/resource",
                                          },
                                          "properties": Object {
                                            "href": Object {
                                              "description": "A string containing the link’s URL.",
                                              "example": "https://example.com/api/resource",
                                              "type": "string",
                                            },
                                            "meta": Object {
                                              "additionalProperties": true,
                                              "description": "Free-form object that may contain non-standard information.",
                                              "example": Object {
                                                "key1": "value1",
                                                "key2": Object {
                                                  "sub_key": "sub_value",
                                                },
                                                "key3": Array [
                                                  "array_value1",
                                                  "array_value2",
                                                ],
                                              },
                                              "type": "object",
                                            },
                                          },
                                          "required": Array [
                                            "href",
                                          ],
                                          "type": "object",
                                        },
                                      ],
                                    },
                                  },
                                  "type": "object",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "data",
                                "links",
                              ],
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "type": Object {
                          "example": "resource",
                          "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                    "links": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "self": "https://example.com/api/this_resource",
                      },
                      "properties": Object {
                        "self": Object {
                          "example": "https://example.com/api/resource",
                          "oneOf": Array [
                            Object {
                              "description": "A string containing the link’s URL.",
                              "example": "https://example.com/api/resource",
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "example": Object {
                                "href": "https://example.com/api/resource",
                              },
                              "properties": Object {
                                "href": Object {
                                  "description": "A string containing the link’s URL.",
                                  "example": "https://example.com/api/resource",
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "description": "Free-form object that may contain non-standard information.",
                                  "example": Object {
                                    "key1": "value1",
                                    "key2": Object {
                                      "sub_key": "sub_value",
                                    },
                                    "key3": Array [
                                      "array_value1",
                                      "array_value2",
                                    ],
                                  },
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                      },
                      "type": "object",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Instance of thing is updated.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "204": Object {
            "description": "The operation completed successfully with no content",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "400": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Bad Request: A parameter provided as a part of the request was invalid.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "401": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "403": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "404": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Not Found: The resource being operated on could not be found.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "409": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Conflict: The requested operation conflicts with the current state of the resource in some way.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
          "500": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Internal Server Error: An error was encountered while attempting to process the request.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
        },
        "summary": "Update an instance of thing",
        "tags": Array [
          "Thing",
        ],
      },
    },
  },
  "servers": Array [
    Object {
      "description": "Public Snyk API",
      "url": "https://api.snyk.io/v3",
    },
  ],
  "tags": Array [
    Object {
      "description": "Short description of what Thing represents",
      "name": "Thing",
    },
  ],
  "x-snyk-api-stability": "experimental",
}
`;

exports[`can parse an OpenAPI file with nested URLs from file or git 2`] = `
Object {
  "info": Object {
    "title": "Empty",
    "version": "0.0.0",
  },
  "openapi": "3.0.1",
  "paths": Object {
    "/abc": Object {
      "get": Object {
        "responses": Object {
          "400": Object {
            "content": Object {
              "application/vnd.api+json": Object {
                "schema": Object {
                  "additionalProperties": false,
                  "example": Object {
                    "errors": Array [
                      Object {
                        "detail": "Permission denied for this resource",
                        "status": "403",
                      },
                    ],
                    "jsonapi": Object {
                      "version": "1.0",
                    },
                  },
                  "properties": Object {
                    "errors": Object {
                      "example": Array [
                        Object {
                          "detail": "Permission denied for this resource",
                          "status": "403",
                        },
                      ],
                      "items": Object {
                        "additionalProperties": false,
                        "example": Object {
                          "detail": "Not Found",
                          "status": "404",
                        },
                        "properties": Object {
                          "detail": Object {
                            "description": "A human-readable explanation specific to this occurrence of the problem.",
                            "example": "The request was missing these required fields: ...",
                            "type": "string",
                          },
                          "id": Object {
                            "description": "A unique identifier for this particular occurrence of the problem.",
                            "example": "f16c31b5-6129-4571-add8-d589da9be524",
                            "format": "uuid",
                            "type": "string",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "example": Object {
                              "key": "value",
                            },
                            "type": "object",
                          },
                          "source": Object {
                            "additionalProperties": false,
                            "example": Object {
                              "pointer": "/data/attributes",
                            },
                            "properties": Object {
                              "parameter": Object {
                                "description": "A string indicating which URI query parameter caused the error.",
                                "example": "param1",
                                "type": "string",
                              },
                              "pointer": Object {
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                                "example": "/data/attributes",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "status": Object {
                            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
                            "example": "400",
                            "pattern": "^[45]\\\\d\\\\d$",
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "status",
                          "detail",
                        ],
                        "type": "object",
                      },
                      "minItems": 1,
                      "type": "array",
                    },
                    "jsonapi": Object {
                      "additionalProperties": false,
                      "example": Object {
                        "version": "1.0",
                      },
                      "properties": Object {
                        "version": Object {
                          "description": "Version of the JSON API specification this server supports.",
                          "example": "1.0",
                          "pattern": "^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)$",
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "version",
                      ],
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "jsonapi",
                    "errors",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Bad Request: A parameter provided as a part of the request was invalid.",
            "headers": Object {
              "deprecation": Object {
                "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                "example": "2021-07-01T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
              "snyk-request-id": Object {
                "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
                "schema": Object {
                  "format": "uuid",
                  "type": "string",
                },
              },
              "snyk-version-lifecycle-stage": Object {
                "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                "schema": Object {
                  "enum": Array [
                    "wip",
                    "experimental",
                    "beta",
                    "ga",
                    "deprecated",
                    "sunset",
                  ],
                  "example": "ga",
                  "type": "string",
                },
              },
              "snyk-version-requested": Object {
                "description": "A header containing the version of the endpoint requested by the caller.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Requested API version",
                  "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
                  "type": "string",
                },
              },
              "snyk-version-served": Object {
                "description": "A header containing the version of the endpoint that was served by the API.",
                "example": "2021-06-04",
                "schema": Object {
                  "description": "Resolved API version",
                  "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
                  "type": "string",
                },
              },
              "sunset": Object {
                "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                "example": "2021-08-02T00:00:00Z",
                "schema": Object {
                  "format": "date-time",
                  "type": "string",
                },
              },
            },
          },
        },
      },
    },
  },
}
`;

exports[`circular references can derefence circular references 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "CircularExample": Object {
        "properties": Object {
          "circular_property": Object {
            "additionalProperties": Object {
              "$ref": "#/components/schemas/CircularExample",
            },
            "type": "object",
          },
          "id": Object {
            "description": "identifier of the example",
            "type": "string",
          },
          "name": Object {
            "description": "name of the example",
            "type": "string",
          },
        },
        "title": "CircularExample",
        "type": "object",
      },
    },
  },
  "info": Object {
    "description": "Documentation of services",
    "title": "Recursive Example",
    "version": "1.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/api/example": Object {
      "get": Object {
        "deprecated": false,
        "description": "example",
        "operationId": "GetExample",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "circular_property": Object {
                      "additionalProperties": Object {
                        "$ref": "#/components/schemas/CircularExample",
                      },
                      "type": "object",
                    },
                    "id": Object {
                      "description": "identifier of the example",
                      "type": "string",
                    },
                    "name": Object {
                      "description": "name of the example",
                      "type": "string",
                    },
                  },
                  "title": "CircularExample",
                  "type": "object",
                },
              },
            },
            "description": "Successful operation",
            "headers": Object {},
          },
        },
        "summary": "Get example",
      },
    },
  },
}
`;

exports[`circular references circular references with chained circle ref 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "Organization": Object {
        "properties": Object {
          "id": Object {
            "description": "identifier of the example",
            "type": "string",
          },
          "name": Object {
            "description": "name of the example",
            "type": "string",
          },
          "user": Object {
            "properties": Object {
              "id": Object {
                "description": "identifier of the example",
                "type": "string",
              },
              "name": Object {
                "description": "name of the example",
                "type": "string",
              },
              "organization": Object {
                "properties": Object {
                  "id": Object {
                    "description": "identifier of the example",
                    "type": "string",
                  },
                  "name": Object {
                    "description": "name of the example",
                    "type": "string",
                  },
                  "user": Object {
                    "$ref": "#/components/schemas/User",
                  },
                },
                "title": "Organization",
                "type": "object",
              },
            },
            "title": "User",
            "type": "object",
          },
        },
        "title": "Organization",
        "type": "object",
      },
      "User": Object {
        "properties": Object {
          "id": Object {
            "description": "identifier of the example",
            "type": "string",
          },
          "name": Object {
            "description": "name of the example",
            "type": "string",
          },
          "organization": Object {
            "properties": Object {
              "id": Object {
                "description": "identifier of the example",
                "type": "string",
              },
              "name": Object {
                "description": "name of the example",
                "type": "string",
              },
              "user": Object {
                "$ref": "#/components/schemas/User",
              },
            },
            "title": "Organization",
            "type": "object",
          },
        },
        "title": "User",
        "type": "object",
      },
    },
  },
  "info": Object {
    "description": "Documentation of services",
    "title": "Recursive Example",
    "version": "1.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/api/example": Object {
      "get": Object {
        "deprecated": false,
        "description": "example",
        "operationId": "GetExample",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "id": Object {
                      "description": "identifier of the example",
                      "type": "string",
                    },
                    "name": Object {
                      "description": "name of the example",
                      "type": "string",
                    },
                    "organization": Object {
                      "properties": Object {
                        "id": Object {
                          "description": "identifier of the example",
                          "type": "string",
                        },
                        "name": Object {
                          "description": "name of the example",
                          "type": "string",
                        },
                        "user": Object {
                          "$ref": "#/components/schemas/User",
                        },
                      },
                      "title": "Organization",
                      "type": "object",
                    },
                  },
                  "title": "User",
                  "type": "object",
                },
              },
            },
            "description": "Successful operation",
            "headers": Object {},
          },
        },
        "summary": "Get example",
      },
    },
  },
}
`;

exports[`circular references circular references with expanded refs 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "CircularExample": Object {
        "properties": Object {
          "circular_property": Object {
            "additionalProperties": Object {
              "$ref": "#/components/schemas/CircularExample",
            },
            "type": "object",
          },
          "id": Object {
            "description": "identifier of the example",
            "type": "string",
          },
          "name": Object {
            "description": "name of the example",
            "type": "string",
          },
        },
        "title": "CircularExample",
        "type": "object",
      },
    },
  },
  "info": Object {
    "description": "Documentation of services",
    "title": "Recursive Example",
    "version": "1.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/api/example": Object {
      "get": Object {
        "deprecated": false,
        "description": "example",
        "operationId": "GetExample",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "circular_property": Object {
                      "additionalProperties": Object {
                        "$ref": "#/components/schemas/CircularExample",
                      },
                      "type": "object",
                    },
                    "id": Object {
                      "description": "identifier of the example",
                      "type": "string",
                    },
                    "name": Object {
                      "description": "name of the example",
                      "type": "string",
                    },
                  },
                  "title": "CircularExample",
                  "type": "object",
                  "x-custom": "this is a custom field for expanding refs",
                },
              },
            },
            "description": "Successful operation",
            "headers": Object {},
          },
        },
        "summary": "Get example",
      },
    },
  },
}
`;

exports[`circular references circular references with multiple refs 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "UserDetails": Object {
        "properties": Object {
          "best_friend": Object {
            "additionalProperties": Object {
              "$ref": "#/components/schemas/UserDetails",
            },
            "type": "object",
          },
          "email": Object {
            "description": "joe@maumas-house.net",
            "type": "string",
          },
          "id": Object {
            "description": "Unique ID",
            "type": "number",
          },
          "name": Object {
            "description": "User name",
            "example": "Joe Mauma",
            "type": "string",
          },
        },
        "title": "UserDetails",
        "type": "object",
      },
    },
  },
  "info": Object {
    "description": "Self-referencing circular example",
    "title": "Direct Recursive Example",
    "version": "1.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/user/details": Object {
      "get": Object {
        "deprecated": false,
        "description": "Get User Details",
        "operationId": "GetUserDetails",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "best_friend": Object {
                      "additionalProperties": Object {
                        "$ref": "#/components/schemas/UserDetails",
                      },
                      "type": "object",
                    },
                    "email": Object {
                      "description": "joe@maumas-house.net",
                      "type": "string",
                    },
                    "id": Object {
                      "description": "Unique ID",
                      "type": "number",
                    },
                    "name": Object {
                      "description": "User name",
                      "example": "Joe Mauma",
                      "type": "string",
                    },
                  },
                  "title": "UserDetails",
                  "type": "object",
                },
              },
            },
            "description": "Successful operation",
            "headers": Object {},
          },
        },
        "summary": "Get User Details",
        "tags": Array [
          "User",
        ],
      },
      "post": Object {
        "deprecated": false,
        "description": "Get User Details",
        "operationId": "GetUserDetails",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "best_friend": Object {
                    "additionalProperties": Object {
                      "$ref": "#/components/schemas/UserDetails",
                    },
                    "type": "object",
                  },
                  "email": Object {
                    "description": "joe@maumas-house.net",
                    "type": "string",
                  },
                  "id": Object {
                    "description": "Unique ID",
                    "type": "number",
                  },
                  "name": Object {
                    "description": "User name",
                    "example": "Joe Mauma",
                    "type": "string",
                  },
                },
                "title": "UserDetails",
                "type": "object",
              },
            },
          },
          "description": "Successful operation",
        },
        "responses": Object {
          "200": Object {
            "content": Object {},
            "description": "Successful operation",
            "headers": Object {},
          },
        },
        "summary": "Get User Details",
        "tags": Array [
          "User",
        ],
      },
    },
  },
  "tags": Array [
    Object {
      "name": "UserDetails",
    },
  ],
}
`;
