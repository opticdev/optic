// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`denormalize allOf merging does not merge allOf when all items are not all objects 1`] = `
{
  "jsonLike": {
    "info": {
      "title": "some thing",
      "version": "v0",
    },
    "openapi": "3.0.1",
    "paths": {
      "/example": {
        "get": {
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "a": {
                      "type": "string",
                    },
                    "b": {
                      "type": "number",
                    },
                    "c": {
                      "type": "boolean",
                    },
                    "d": {
                      "allOf": [
                        {
                          "properties": {
                            "a": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                        },
                        {
                          "type": "string",
                        },
                      ],
                    },
                  },
                  "type": "object",
                },
              },
            },
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                  },
                },
              },
              "description": "some thing",
              "headers": {},
            },
          },
        },
      },
    },
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": [
      {
        "contents": "openapi: '3.0.1'
info:
  title: 'some thing'
  version: 'v0'
paths:
  /example:
    get:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                a:
                  type: string
                b:
                  type: number
                c:
                  type: boolean
                d:
                  allOf:
                    - type: object
                      properties:
                        a:
                          type: string
                    - type: string
      responses:
        200:
          description: 'some thing'
          content:
            application/json:
              schema:
                type: 'string'
",
        "index": null,
        "path": "/src/denormalizers/__tests__/specs/allOf/no-merge.yaml",
        "sha256": "4921acb94767de410927bd6751ac8d9f712c11dc70dcb260236a6684df8dcdb2",
      },
    ],
    "refMappings": {},
    "rootFilePath": "/src/denormalizers/__tests__/specs/allOf/no-merge.yaml",
  },
}
`;

exports[`denormalize allOf merging merges allOf when all items are objects 1`] = `
{
  "jsonLike": {
    "info": {
      "title": "some thing",
      "version": "v0",
    },
    "openapi": "3.0.1",
    "paths": {
      "/example": {
        "get": {
          "parameters": [],
          "requestBody": null,
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "a": {
                        "properties": {
                          "e": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "b": {
                        "type": "number",
                      },
                      "c": {
                        "type": "string",
                      },
                      "d": {
                        "type": "string",
                      },
                    },
                    "required": [
                      "a",
                      "c",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "some thing",
              "headers": {},
            },
          },
        },
      },
    },
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": [
      {
        "contents": "openapi: '3.0.1'
info:
  title: 'some thing'
  version: 'v0'
paths:
  /example:
    get:
      requestBody:
      responses:
        200:
          description: 'some thing'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - a
                    properties:
                      a:
                        type: object
                        properties:
                          e:
                            type: string
                  - type: object
                    required:
                      - c
                    properties:
                      a:
                        type: number
                        description: 'should not show up because this is after a previous key'
                      b:
                        type: number
                      c:
                        type: string
                  - type: object
                    properties:
                      d:
                        type: string
",
        "index": null,
        "path": "/src/denormalizers/__tests__/specs/allOf/single-allof.yaml",
        "sha256": "16eba8b2fa4bae164c1443f0bdccaa8cdf1482e2a0a805bb215c0e219348455a",
      },
    ],
    "refMappings": {
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/a": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/0/properties/a",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/b": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/1/properties/b",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/c": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/1/properties/c",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/d": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/2/properties/d",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/required/0": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/0/required/0",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/required/1": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/1/required/0",
      ],
    },
    "rootFilePath": "/src/denormalizers/__tests__/specs/allOf/single-allof.yaml",
  },
}
`;

exports[`denormalize allOf merging merges nested allOf 1`] = `
{
  "jsonLike": {
    "info": {
      "title": "some thing",
      "version": "v0",
    },
    "openapi": "3.0.1",
    "paths": {
      "/example": {
        "get": {
          "parameters": [],
          "requestBody": null,
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "a": {
                        "type": "string",
                      },
                      "b": {
                        "type": "number",
                      },
                      "c": {
                        "type": "string",
                      },
                      "d": {
                        "properties": {
                          "a": {
                            "type": "string",
                          },
                          "b": {
                            "type": "string",
                          },
                        },
                        "required": undefined,
                        "type": "object",
                      },
                      "e": {
                        "type": "string",
                      },
                    },
                    "required": undefined,
                    "type": "object",
                  },
                },
              },
              "description": "some thing",
              "headers": {},
            },
          },
        },
      },
    },
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": [
      {
        "contents": "openapi: '3.0.1'
info:
  title: 'some thing'
  version: 'v0'
paths:
  /example:
    get:
      requestBody:
      responses:
        200:
          description: 'some thing'
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    properties:
                      a:
                        type: string
                  - type: object
                    properties:
                      b:
                        type: number
                      c:
                        type: string
                  - type: object
                    properties:
                      d:
                        allOf:
                          - type: 'object'
                            properties:
                              a:
                                type: string
                          - type: 'object'
                            properties:
                              b:
                                type: string
                      e:
                        type: string
",
        "index": null,
        "path": "/src/denormalizers/__tests__/specs/allOf/nested.yaml",
        "sha256": "19bb796a8fe63c93a2d80c8769ccc08255dcb7d55e5ab9b4a110c308f759cff2",
      },
    ],
    "refMappings": {
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/a": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/0/properties/a",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/b": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/1/properties/b",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/c": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/1/properties/c",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/d": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/2/properties/d",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/d/properties/a": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/2/properties/d/allOf/0/properties/a",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/d/properties/b": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/2/properties/d/allOf/1/properties/b",
      ],
      "/paths/~1example/get/responses/200/content/application~1json/schema/properties/e": [
        0,
        "/paths/~1example/get/responses/200/content/application~1json/schema/allOf/2/properties/e",
      ],
    },
    "rootFilePath": "/src/denormalizers/__tests__/specs/allOf/nested.yaml",
  },
}
`;

exports[`denormalize denormalizes shared path parameters 1`] = `
{
  "jsonLike": {
    "info": {
      "title": "some thing",
      "version": "v0",
    },
    "openapi": "3.0.1",
    "paths": {
      "/example": {
        "get": {
          "parameters": [
            {
              "description": "something here",
              "in": "query",
              "name": "something-else",
              "required": true,
              "schema": {
                "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                "format": "uuid",
                "type": "string",
              },
            },
            {
              "description": "should-not-override",
              "in": "query",
              "name": "should-not-override",
              "required": true,
              "schema": {
                "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                "format": "uuid",
                "type": "string",
              },
            },
            {
              "description": "something here",
              "in": "query",
              "name": "something",
              "required": true,
              "schema": {
                "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                "format": "uuid",
                "type": "string",
              },
            },
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                  },
                },
              },
              "description": "some thing",
              "headers": {},
            },
          },
        },
        "post": {
          "parameters": [
            {
              "description": "should not be overriden",
              "in": "query",
              "name": "should-not-override",
              "required": true,
              "schema": {
                "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                "format": "uuid",
                "type": "string",
              },
            },
            {
              "description": "something here",
              "in": "query",
              "name": "something-else",
              "required": true,
              "schema": {
                "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                "format": "uuid",
                "type": "string",
              },
            },
            {
              "description": "something here",
              "in": "query",
              "name": "something",
              "required": true,
              "schema": {
                "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                "format": "uuid",
                "type": "string",
              },
            },
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                  },
                },
              },
              "description": "some thing",
              "headers": {},
            },
          },
        },
      },
    },
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": [
      {
        "contents": "openapi: '3.0.1'
info:
  title: 'some thing'
  version: 'v0'
paths:
  /example:
    parameters:
      - name: something-else
        in: query
        required: true
        description: something here
        schema:
          type: string
          format: uuid
          example: d5b640e5-d88c-4c17-9bf0-93597b7a1ce2
      - name: should-not-override
        in: query
        required: true
        description: should-not-override
        schema:
          type: string
          format: uuid
          example: d5b640e5-d88c-4c17-9bf0-93597b7a1ce2
      - $ref: parameters.yml#/something
    get:
      responses:
        200:
          description: 'some thing'
          content:
            application/json:
              schema:
                type: 'string'
    post:
      parameters:
        - name: should-not-override
          in: query
          required: true
          description: should not be overriden
          schema:
            type: string
            format: uuid
            example: d5b640e5-d88c-4c17-9bf0-93597b7a1ce2
      responses:
        200:
          description: 'some thing'
          content:
            application/json:
              schema:
                type: 'string'
",
        "index": null,
        "path": "/src/denormalizers/__tests__/specs/openapi.yaml",
        "sha256": "44bb048800379bdd9651daa9c6a380dbd68232443881cbbaa0c155240e45c001",
      },
      {
        "contents": "something:
  name: something
  in: query
  required: true
  description: something here
  schema:
    type: string
    format: uuid
    example: d5b640e5-d88c-4c17-9bf0-93597b7a1ce2
",
        "index": null,
        "path": "/src/denormalizers/__tests__/specs/parameters.yml",
        "sha256": "85d23de44c126a054df04ca9720a69b0842935868c6d0a771baa37f0bee832ba",
      },
    ],
    "refMappings": {
      "/paths/~1example/get/parameters/0": [
        0,
        "/paths/~1example/parameters/0",
      ],
      "/paths/~1example/get/parameters/1": [
        0,
        "/paths/~1example/parameters/1",
      ],
      "/paths/~1example/get/parameters/2": [
        1,
        "/paths/~1example/parameters/2",
      ],
      "/paths/~1example/parameters/2": [
        1,
        "/something",
      ],
      "/paths/~1example/post/parameters/1": [
        0,
        "/paths/~1example/parameters/0",
      ],
      "/paths/~1example/post/parameters/2": [
        1,
        "/paths/~1example/parameters/2",
      ],
    },
    "rootFilePath": "/src/denormalizers/__tests__/specs/openapi.yaml",
  },
}
`;
