# 001-ok-add-property-field.yaml
# Adding a new property to the response is an allowed change in a released API version
openapi: 3.0.3
x-snyk-api-stability: experimental
info:
  title: v3
  version: 3.0.0
servers:
  - url: https://api.snyk.io/v3
    description: Public Snyk API
tags:
  - name: Thing
    description: Short description of what Thing represents
paths:
  /thing:
    post:
      description: Create a new thing
      operationId: createThing
      tags:
        - Thing
      parameters:
        - { $ref: './components/parameters/version.yaml#/Version' }
      responses:
        '201':
          description: Created thing successfully
          headers:
            snyk-version-requested: { $ref: './components/headers/headers.yaml#/VersionRequestedResponseHeader' }
            snyk-version-served: { $ref: './components/headers/headers.yaml#/VersionServedResponseHeader' }
            snyk-request-id: { $ref: './components/headers/headers.yaml#/RequestIdResponseHeader' }
            snyk-version-lifecycle-stage: { $ref: './components/headers/headers.yaml#/VersionStageResponseHeader' }
            deprecation: { $ref: './components/headers/headers.yaml#/DeprecationHeader' }
            sunset: { $ref: './components/headers/headers.yaml#/SunsetHeader' }
          content:
            application/vnd.api+json:
              schema: { $ref: '#/components/schemas/ThingResourceResponse' }
        '400': { $ref: './components/responses/400.yaml#/400' }
        '401': { $ref: './components/responses/401.yaml#/401' }
        '403': { $ref: './components/responses/403.yaml#/403' }
        '404': { $ref: './components/responses/404.yaml#/404' }
        '409': { $ref: './components/responses/409.yaml#/409' }
        '500': { $ref: './components/responses/500.yaml#/500' }
    get:
      description: List instances of thing
      operationId: listThing
      tags:
        - Thing
      parameters:
        - { $ref: './components/parameters/version.yaml#/Version' }
      responses:
        '200':
          description: Returns a list of thing instances
          headers:
            snyk-version-requested: { $ref: './components/headers/headers.yaml#/VersionRequestedResponseHeader' }
            snyk-version-served: { $ref: './components/headers/headers.yaml#/VersionServedResponseHeader' }
            snyk-request-id: { $ref: './components/headers/headers.yaml#/RequestIdResponseHeader' }
            snyk-version-lifecycle-stage: { $ref: './components/headers/headers.yaml#/VersionStageResponseHeader' }
            deprecation: { $ref: './components/headers/headers.yaml#/DeprecationHeader' }
            sunset: { $ref: './components/headers/headers.yaml#/SunsetHeader' }
          content:
            application/vnd.api+json:
              schema: { $ref: '#/components/schemas/ThingCollectionResponse' }
        '400': { $ref: './components/responses/400.yaml#/400' }
        '401': { $ref: './components/responses/401.yaml#/401' }
        '403': { $ref: './components/responses/403.yaml#/403' }
        '404': { $ref: './components/responses/404.yaml#/404' }
        '500': { $ref: './components/responses/500.yaml#/500' }
  /thing/{thing_id}:
    get:
      description: Get an instance of thing
      operationId: getThing
      tags:
        - Thing
      parameters:
        - { $ref: './components/parameters/version.yaml#/Version' }
        - { $ref: '#/components/parameters/ThingId' }
      responses:
        '200':
          description: Returns an instance of thing
          headers:
            snyk-version-requested: { $ref: './components/headers/headers.yaml#/VersionRequestedResponseHeader' }
            snyk-version-served: { $ref: './components/headers/headers.yaml#/VersionServedResponseHeader' }
            snyk-request-id: { $ref: './components/headers/headers.yaml#/RequestIdResponseHeader' }
            snyk-version-lifecycle-stage: { $ref: './components/headers/headers.yaml#/VersionStageResponseHeader' }
            deprecation: { $ref: './components/headers/headers.yaml#/DeprecationHeader' }
            sunset: { $ref: './components/headers/headers.yaml#/SunsetHeader' }
          content:
            application/vnd.api+json:
              schema: { $ref: '#/components/schemas/ThingResourceResponse' }
        '400': { $ref: './components/responses/400.yaml#/400' }
        '401': { $ref: './components/responses/401.yaml#/401' }
        '403': { $ref: './components/responses/403.yaml#/403' }
        '404': { $ref: './components/responses/404.yaml#/404' }
        '500': { $ref: './components/responses/500.yaml#/500' }
    patch:
      description: Update an instance of thing
      operationId: updateThing
      tags:
        - Thing
      parameters:
        - { $ref: './components/parameters/version.yaml#/Version' }
        - { $ref: '#/components/parameters/ThingId' }
      responses:
        '200':
          description: Instance of thing is updated.
          headers:
            snyk-version-requested: { $ref: './components/headers/headers.yaml#/VersionRequestedResponseHeader' }
            snyk-version-served: { $ref: './components/headers/headers.yaml#/VersionServedResponseHeader' }
            snyk-request-id: { $ref: './components/headers/headers.yaml#/RequestIdResponseHeader' }
            snyk-version-lifecycle-stage: { $ref: './components/headers/headers.yaml#/VersionStageResponseHeader' }
            deprecation: { $ref: './components/headers/headers.yaml#/DeprecationHeader' }
            sunset: { $ref: './components/headers/headers.yaml#/SunsetHeader' }
          content:
            application/vnd.api+json:
              schema: { $ref: '#/components/schemas/ThingResourceResponse' }
        '204': { $ref: './components/responses/204.yaml#/204' }
        '400': { $ref: './components/responses/400.yaml#/400' }
        '401': { $ref: './components/responses/401.yaml#/401' }
        '403': { $ref: './components/responses/403.yaml#/403' }
        '404': { $ref: './components/responses/404.yaml#/404' }
        '409': { $ref: './components/responses/409.yaml#/409' }
        '500': { $ref: './components/responses/500.yaml#/500' }
    delete:
      description: Delete an instance of thing
      operationId: deleteThing
      tags:
        - Thing
      parameters:
        - { $ref: './components/parameters/version.yaml#/Version' }
        - { $ref: '#/components/parameters/ThingId' }
      responses:
        '204': { $ref: './components/responses/204.yaml#/204' }
        '400': { $ref: './components/responses/400.yaml#/400' }
        '401': { $ref: './components/responses/401.yaml#/401' }
        '403': { $ref: './components/responses/403.yaml#/403' }
        '404': { $ref: './components/responses/404.yaml#/404' }
        '409': { $ref: './components/responses/409.yaml#/409' }
        '500': { $ref: './components/responses/500.yaml#/500' }
components:
  parameters:
    ThingId:
      name: thing_id
      in: path
      required: true
      description: Unique identifier for thing instances
      schema:
        type: string
        format: uuid
  schemas:
    ThingResourceResponse:
      type: object
      description: Response containing a single thing resource object
      properties:
        jsonapi: { $ref: './components/common.yaml#/JsonApi' }
        data: { $ref: '#/components/schemas/ThingResource' }
        links: { $ref: './components/common.yaml#/SelfLink' }

    ThingCollectionResponse:
      type: object
      description: Response containing a collection of thing resource objects
      properties:
        jsonapi: { $ref: './components/common.yaml#/JsonApi' }
        data: { $ref: '#/components/schemas/ThingCollection' }
        links: { $ref: './components/common.yaml#/PaginatedLinks' }

    ThingResource:
      type: object
      description: thing resource object
      properties:
        id:
          type: string
          format: uuid
          example: d5b640e5-d88c-4c17-9bf0-93597b7a1ce2
        type: { $ref: './components/types.yaml#/Types' }
        attributes: { $ref: '#/components/schemas/ThingAttributes' }
        relationships: { $ref: '#/components/schemas/ThingRelationships' }
      additionalProperties: false

    ThingRelationships:
      type: object
      properties:
        example: { $ref: './components/common.yaml#/Relationship' }
      additionalProperties: false

    ThingCollection:
      type: array
      items: { $ref: '#/components/schemas/ThingResource' }

    ThingAttributes:
      type: object
      properties:
        name:
          type: string
          description: Name of this instance of thing.
          example: thing
        created:
          type: string
          description: Timestamp when this instance of thing was created.
          format: date-time
          example: '2021-10-05T13:23:17Z'
        updated:
          type: string
          description: Timestamp when this instance of thing was last updated.
          format: date-time
          example: '2021-10-05T13:25:29Z'
        description:
          type: string
          description: User-friendly description of this instance of thing.
          example: "This is a thing named thing."
        strangeness:
          type: number
          description: The amount of strangeness this thing adds or removes from the situation.
          example: 42
      additionalProperties: false
