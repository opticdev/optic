// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`json changelog collects changes properly: jsonChangelog 1`] = `
{
  "operations": [
    {
      "attributes": [
        {
          "after": {
            "description": "Multiple status values can be provided with comma separated strings",
            "operationId": "findPetsByStatus",
            "parameters": [
              {
                "description": "Status values that need to be considered for filter",
                "explode": true,
                "in": "query",
                "name": "status",
                "required": true,
                "schema": {
                  "items": {
                    "default": "available",
                    "enum": [
                      "available",
                      "pending",
                      "sold",
                    ],
                    "type": "string",
                  },
                  "type": "array",
                },
                "style": "form",
              },
              {
                "description": "A debug token",
                "in": "cookie",
                "name": "debug",
                "required": false,
                "schema": {
                  "enum": [
                    0,
                    1,
                  ],
                  "type": "integer",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "category": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Category",
                            },
                          },
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "example": "doggie",
                            "type": "string",
                          },
                          "photoUrls": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "xml": {
                              "name": "photoUrl",
                              "wrapped": true,
                            },
                          },
                          "status": {
                            "description": "pet status in the store",
                            "enum": [
                              "available",
                              "pending",
                              "sold",
                            ],
                            "type": "string",
                          },
                          "tags": {
                            "items": {
                              "properties": {
                                "id": {
                                  "format": "int64",
                                  "type": "integer",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "xml": {
                                "name": "Tag",
                              },
                            },
                            "type": "array",
                            "xml": {
                              "name": "tag",
                              "wrapped": true,
                            },
                          },
                        },
                        "required": [
                          "name",
                          "photoUrls",
                        ],
                        "type": "object",
                        "xml": {
                          "name": "Pet",
                        },
                      },
                      "type": "array",
                    },
                  },
                  "application/xml": {
                    "schema": {
                      "items": {
                        "properties": {
                          "category": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Category",
                            },
                          },
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "example": "doggie",
                            "type": "string",
                          },
                          "photoUrls": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "xml": {
                              "name": "photoUrl",
                              "wrapped": true,
                            },
                          },
                          "status": {
                            "description": "pet status in the store",
                            "enum": [
                              "available",
                              "pending",
                              "sold",
                            ],
                            "type": "string",
                          },
                          "tags": {
                            "items": {
                              "properties": {
                                "id": {
                                  "format": "int64",
                                  "type": "integer",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "xml": {
                                "name": "Tag",
                              },
                            },
                            "type": "array",
                            "xml": {
                              "name": "tag",
                              "wrapped": true,
                            },
                          },
                        },
                        "required": [
                          "name",
                          "photoUrls",
                        ],
                        "type": "object",
                        "xml": {
                          "name": "Pet",
                        },
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "successful operation",
              },
              "400": {
                "content": {},
                "description": "Invalid status value",
              },
            },
            "security": [
              {
                "petstore_auth": [
                  "write:pets",
                  "read:pets",
                ],
              },
            ],
            "summary": "Finds Pets by status",
            "tags": [
              "pet",
            ],
          },
          "before": undefined,
          "change": "added",
          "key": "",
        },
      ],
      "change": "added",
      "name": "GET /pet/findByStatus",
      "parameters": [],
      "requestBody": undefined,
      "responses": [],
    },
    {
      "attributes": [
        {
          "after": {
            "deprecated": true,
            "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
            "operationId": "findPetsByTags",
            "parameters": [
              {
                "description": "Tags to filter by",
                "explode": true,
                "in": "query",
                "name": "tags",
                "required": true,
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
                "style": "form",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "category": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Category",
                            },
                          },
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "example": "doggie",
                            "type": "string",
                          },
                          "photoUrls": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "xml": {
                              "name": "photoUrl",
                              "wrapped": true,
                            },
                          },
                          "status": {
                            "description": "pet status in the store",
                            "enum": [
                              "available",
                              "pending",
                              "sold",
                            ],
                            "type": "string",
                          },
                          "tags": {
                            "items": {
                              "properties": {
                                "id": {
                                  "format": "int64",
                                  "type": "integer",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "xml": {
                                "name": "Tag",
                              },
                            },
                            "type": "array",
                            "xml": {
                              "name": "tag",
                              "wrapped": true,
                            },
                          },
                        },
                        "required": [
                          "name",
                          "photoUrls",
                        ],
                        "type": "object",
                        "xml": {
                          "name": "Pet",
                        },
                      },
                      "type": "array",
                    },
                  },
                  "application/xml": {
                    "schema": {
                      "items": {
                        "properties": {
                          "category": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Category",
                            },
                          },
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "example": "doggie",
                            "type": "string",
                          },
                          "photoUrls": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                            "xml": {
                              "name": "photoUrl",
                              "wrapped": true,
                            },
                          },
                          "status": {
                            "description": "pet status in the store",
                            "enum": [
                              "available",
                              "pending",
                              "sold",
                            ],
                            "type": "string",
                          },
                          "tags": {
                            "items": {
                              "properties": {
                                "id": {
                                  "format": "int64",
                                  "type": "integer",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                              "xml": {
                                "name": "Tag",
                              },
                            },
                            "type": "array",
                            "xml": {
                              "name": "tag",
                              "wrapped": true,
                            },
                          },
                        },
                        "required": [
                          "name",
                          "photoUrls",
                        ],
                        "type": "object",
                        "xml": {
                          "name": "Pet",
                        },
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "successful operation",
              },
              "400": {
                "content": {},
                "description": "Invalid tag value",
              },
            },
            "security": [
              {
                "petstore_auth": [
                  "write:pets",
                  "read:pets",
                ],
              },
            ],
            "summary": "Finds Pets by tags",
            "tags": [
              "pet",
            ],
          },
          "before": undefined,
          "change": "added",
          "key": "",
        },
      ],
      "change": "added",
      "name": "GET /pet/findByTags",
      "parameters": [],
      "requestBody": undefined,
      "responses": [],
    },
    {
      "attributes": [
        {
          "after": {
            "description": "Returns a single pet",
            "operationId": "getPetById",
            "parameters": [
              {
                "description": "ID of pet to return",
                "in": "path",
                "name": "petId",
                "required": true,
                "schema": {
                  "format": "int64",
                  "type": "integer",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "category": {
                          "properties": {
                            "id": {
                              "format": "int64",
                              "type": "integer",
                            },
                            "name": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "xml": {
                            "name": "Category",
                          },
                        },
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "example": "doggie",
                          "type": "string",
                        },
                        "photoUrls": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "xml": {
                            "name": "photoUrl",
                            "wrapped": true,
                          },
                        },
                        "status": {
                          "description": "pet status in the store",
                          "enum": [
                            "available",
                            "pending",
                            "sold",
                          ],
                          "type": "string",
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Tag",
                            },
                          },
                          "type": "array",
                          "xml": {
                            "name": "tag",
                            "wrapped": true,
                          },
                        },
                      },
                      "required": [
                        "name",
                        "photoUrls",
                      ],
                      "type": "object",
                      "xml": {
                        "name": "Pet",
                      },
                    },
                  },
                  "application/xml": {
                    "schema": {
                      "properties": {
                        "category": {
                          "properties": {
                            "id": {
                              "format": "int64",
                              "type": "integer",
                            },
                            "name": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "xml": {
                            "name": "Category",
                          },
                        },
                        "id": {
                          "format": "int64",
                          "type": "integer",
                        },
                        "name": {
                          "example": "doggie",
                          "type": "string",
                        },
                        "photoUrls": {
                          "items": {
                            "type": "string",
                          },
                          "type": "array",
                          "xml": {
                            "name": "photoUrl",
                            "wrapped": true,
                          },
                        },
                        "status": {
                          "description": "pet status in the store",
                          "enum": [
                            "available",
                            "pending",
                            "sold",
                          ],
                          "type": "string",
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "id": {
                                "format": "int64",
                                "type": "integer",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                            "xml": {
                              "name": "Tag",
                            },
                          },
                          "type": "array",
                          "xml": {
                            "name": "tag",
                            "wrapped": true,
                          },
                        },
                      },
                      "required": [
                        "name",
                        "photoUrls",
                      ],
                      "type": "object",
                      "xml": {
                        "name": "Pet",
                      },
                    },
                  },
                },
                "description": "successful operation",
              },
              "400": {
                "content": {},
                "description": "Invalid ID supplied",
              },
              "404": {
                "content": {},
                "description": "Pet not found",
              },
            },
            "security": [
              {
                "api_key": [],
              },
            ],
            "summary": "Find pet by ID",
            "tags": [
              "pet",
            ],
          },
          "before": undefined,
          "change": "added",
          "key": "",
        },
      ],
      "change": "added",
      "name": "GET /pet/{petId}",
      "parameters": [],
      "requestBody": undefined,
      "responses": [],
    },
    {
      "attributes": [
        {
          "after": {
            "operationId": "updatePetWithForm",
            "parameters": [
              {
                "description": "ID of pet that needs to be updated",
                "in": "path",
                "name": "petId",
                "required": true,
                "schema": {
                  "format": "int64",
                  "type": "integer",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "examples": {
                    "available": {
                      "name": "new name",
                      "status": "available",
                    },
                    "sold": {
                      "name": "good boy",
                      "status": "sold",
                    },
                  },
                  "schema": {
                    "properties": {
                      "name": {
                        "description": "Updated name of the pet",
                        "type": "string",
                      },
                      "status": {
                        "description": "Updated status of the pet",
                        "type": "string",
                      },
                    },
                  },
                },
              },
            },
            "responses": {
              "405": {
                "content": {},
                "description": "Invalid input",
              },
            },
            "security": [
              {
                "petstore_auth": [
                  "write:pets",
                  "read:pets",
                ],
              },
            ],
            "summary": "Updates a pet in the store with form data",
            "tags": [
              "pet",
            ],
          },
          "before": undefined,
          "change": "added",
          "key": "",
        },
      ],
      "change": "added",
      "name": "POST /pet/{petId}",
      "parameters": [],
      "requestBody": undefined,
      "responses": [],
    },
    {
      "attributes": [
        {
          "after": {
            "operationId": "deletePet",
            "parameters": [
              {
                "in": "header",
                "name": "api_key",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Pet id to delete",
                "in": "path",
                "name": "petId",
                "required": true,
                "schema": {
                  "format": "int64",
                  "type": "integer",
                },
              },
            ],
            "responses": {
              "400": {
                "content": {},
                "description": "Invalid ID supplied",
              },
              "404": {
                "content": {},
                "description": "Pet not found",
              },
            },
            "security": [
              {
                "petstore_auth": [
                  "write:pets",
                  "read:pets",
                ],
              },
            ],
            "summary": "Deletes a pet",
            "tags": [
              "pet",
            ],
          },
          "before": undefined,
          "change": "added",
          "key": "",
        },
      ],
      "change": "added",
      "name": "DELETE /pet/{petId}",
      "parameters": [],
      "requestBody": undefined,
      "responses": [],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "PUT /user/{username}",
      "parameters": [],
      "requestBody": {
        "attributes": [],
        "change": "changed",
        "contentTypes": [
          {
            "attributes": [
              {
                "after": undefined,
                "before": {
                  "required": false,
                  "type": "string",
                },
                "change": "removed",
                "key": "/schema/properties/phone",
              },
              {
                "after": {
                  "required": false,
                  "type": "string",
                },
                "before": undefined,
                "change": "added",
                "key": "/schema/properties/bio",
              },
              {
                "after": {
                  "enum": [
                    "activation-pending",
                    "activated",
                    "blocked",
                  ],
                  "type": "string",
                },
                "before": {
                  "format": "int32",
                  "type": "integer",
                },
                "change": "changed",
                "key": "/schema/properties/userStatus",
              },
              {
                "after": {
                  "required": false,
                },
                "before": {
                  "required": true,
                },
                "change": "changed",
                "key": "/schema/properties/lastName",
              },
              {
                "after": {
                  "required": true,
                },
                "before": {
                  "required": false,
                },
                "change": "changed",
                "key": "/schema/properties/username",
              },
            ],
            "change": "changed",
            "name": "*/*",
          },
        ],
        "name": "Request Body",
      },
      "responses": [],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "GET /user/{username}",
      "parameters": [],
      "requestBody": undefined,
      "responses": [
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "schema": {
                      "example": {
                        "email": "hello@123.com",
                        "id": 12,
                        "lastName": "me",
                        "userStatus": 2,
                      },
                      "properties": {
                        "bio": {
                          "type": "string",
                        },
                        "userStatus": {
                          "enum": [
                            "activation-pending",
                            "activated",
                            "blocked",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "email",
                        "username",
                        "userStatus",
                      ],
                    },
                  },
                  "before": {
                    "schema": {
                      "properties": {
                        "phone": {
                          "type": "string",
                        },
                        "userStatus": {
                          "format": "int32",
                          "type": "integer",
                        },
                      },
                      "required": [
                        "id",
                        "email",
                        "lastName",
                        "userStatus",
                      ],
                    },
                  },
                  "change": "changed",
                  "key": "",
                },
                {
                  "after": undefined,
                  "before": {
                    "required": false,
                    "type": "string",
                  },
                  "change": "removed",
                  "key": "/schema/properties/phone",
                },
                {
                  "after": {
                    "required": false,
                    "type": "string",
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "/schema/properties/bio",
                },
                {
                  "after": {
                    "enum": [
                      "activation-pending",
                      "activated",
                      "blocked",
                    ],
                    "type": "string",
                  },
                  "before": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "change": "changed",
                  "key": "/schema/properties/userStatus",
                },
                {
                  "after": {
                    "required": false,
                  },
                  "before": {
                    "required": true,
                  },
                  "change": "changed",
                  "key": "/schema/properties/lastName",
                },
                {
                  "after": {
                    "required": true,
                  },
                  "before": {
                    "required": false,
                  },
                  "change": "changed",
                  "key": "/schema/properties/username",
                },
              ],
              "change": "changed",
              "name": "application/json",
            },
            {
              "attributes": [
                {
                  "after": undefined,
                  "before": {
                    "required": false,
                    "type": "string",
                  },
                  "change": "removed",
                  "key": "/schema/properties/phone",
                },
                {
                  "after": {
                    "required": false,
                    "type": "string",
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "/schema/properties/bio",
                },
                {
                  "after": {
                    "enum": [
                      "activation-pending",
                      "activated",
                      "blocked",
                    ],
                    "type": "string",
                  },
                  "before": {
                    "format": "int32",
                    "type": "integer",
                  },
                  "change": "changed",
                  "key": "/schema/properties/userStatus",
                },
                {
                  "after": {
                    "required": false,
                  },
                  "before": {
                    "required": true,
                  },
                  "change": "changed",
                  "key": "/schema/properties/lastName",
                },
                {
                  "after": {
                    "required": true,
                  },
                  "before": {
                    "required": false,
                  },
                  "change": "changed",
                  "key": "/schema/properties/username",
                },
                {
                  "after": 2,
                  "before": 1,
                  "change": "changed",
                  "key": "/examples/One/userStatus",
                },
              ],
              "change": "changed",
              "name": "application/xml",
            },
          ],
          "headers": [],
          "name": "200 response",
        },
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "schema": {
                      "properties": {
                        "code": {
                          "format": "int32",
                          "type": "integer",
                        },
                        "message": {
                          "type": "string",
                        },
                        "type": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "",
                },
              ],
              "change": "added",
              "name": "application/json",
            },
          ],
          "headers": [],
          "name": "404 response",
        },
      ],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "GET /user/login",
      "parameters": [],
      "requestBody": undefined,
      "responses": [
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [],
          "headers": [
            {
              "attributes": [
                {
                  "after": undefined,
                  "before": {
                    "description": "the description goes here",
                    "schema": {
                      "type": "string",
                    },
                  },
                  "change": "removed",
                  "key": "",
                },
              ],
              "change": "removed",
              "name": "response header content-type",
            },
            {
              "attributes": [
                {
                  "after": {
                    "description": "calls per hour allowed by the user",
                    "schema": {
                      "format": "int32",
                      "type": "integer",
                    },
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "",
                },
              ],
              "change": "added",
              "name": "response header X-Rate-Limit",
            },
            {
              "attributes": [
                {
                  "after": "string",
                  "before": "number",
                  "change": "changed",
                  "key": "/schema/type",
                },
                {
                  "after": "date-time",
                  "before": undefined,
                  "change": "added",
                  "key": "/schema/format",
                },
              ],
              "change": "changed",
              "name": "response header X-Expires-After",
            },
          ],
          "name": "200 response",
        },
      ],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "POST /user/createWithList",
      "parameters": [],
      "requestBody": {
        "attributes": [],
        "change": "changed",
        "contentTypes": [
          {
            "attributes": [
              {
                "after": undefined,
                "before": {
                  "required": false,
                  "type": "string",
                },
                "change": "removed",
                "key": "/schema/items/properties/phone",
              },
              {
                "after": {
                  "required": false,
                  "type": "string",
                },
                "before": undefined,
                "change": "added",
                "key": "/schema/items/properties/bio",
              },
              {
                "after": {
                  "enum": [
                    "activation-pending",
                    "activated",
                    "blocked",
                  ],
                  "type": "string",
                },
                "before": {
                  "format": "int32",
                  "type": "integer",
                },
                "change": "changed",
                "key": "/schema/items/properties/userStatus",
              },
              {
                "after": {
                  "schema": {
                    "items": {
                      "properties": {
                        "bio": {
                          "type": "string",
                        },
                        "userStatus": {
                          "enum": [
                            "activation-pending",
                            "activated",
                            "blocked",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "email",
                        "username",
                        "userStatus",
                      ],
                    },
                  },
                },
                "before": {
                  "schema": {
                    "items": {
                      "properties": {
                        "phone": {
                          "type": "string",
                        },
                        "userStatus": {
                          "format": "int32",
                          "type": "integer",
                        },
                      },
                      "required": [
                        "id",
                        "email",
                        "lastName",
                        "userStatus",
                      ],
                    },
                  },
                },
                "change": "changed",
                "key": "",
              },
            ],
            "change": "changed",
            "name": "*/*",
          },
        ],
        "name": "Request Body",
      },
      "responses": [],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "POST /user/createWithArray",
      "parameters": [],
      "requestBody": {
        "attributes": [],
        "change": "changed",
        "contentTypes": [
          {
            "attributes": [
              {
                "after": undefined,
                "before": {
                  "required": false,
                  "type": "string",
                },
                "change": "removed",
                "key": "/schema/items/properties/phone",
              },
              {
                "after": {
                  "required": false,
                  "type": "string",
                },
                "before": undefined,
                "change": "added",
                "key": "/schema/items/properties/bio",
              },
              {
                "after": {
                  "enum": [
                    "activation-pending",
                    "activated",
                    "blocked",
                  ],
                  "type": "string",
                },
                "before": {
                  "format": "int32",
                  "type": "integer",
                },
                "change": "changed",
                "key": "/schema/items/properties/userStatus",
              },
              {
                "after": {
                  "schema": {
                    "items": {
                      "properties": {
                        "bio": {
                          "type": "string",
                        },
                        "userStatus": {
                          "enum": [
                            "activation-pending",
                            "activated",
                            "blocked",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "id",
                        "email",
                        "username",
                        "userStatus",
                      ],
                    },
                  },
                },
                "before": {
                  "schema": {
                    "items": {
                      "properties": {
                        "phone": {
                          "type": "string",
                        },
                        "userStatus": {
                          "format": "int32",
                          "type": "integer",
                        },
                      },
                      "required": [
                        "id",
                        "email",
                        "lastName",
                        "userStatus",
                      ],
                    },
                  },
                },
                "change": "changed",
                "key": "",
              },
            ],
            "change": "changed",
            "name": "*/*",
          },
        ],
        "name": "Request Body",
      },
      "responses": [],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "POST /user",
      "parameters": [],
      "requestBody": {
        "attributes": [],
        "change": "changed",
        "contentTypes": [
          {
            "attributes": [
              {
                "after": undefined,
                "before": {
                  "required": false,
                  "type": "string",
                },
                "change": "removed",
                "key": "/schema/properties/phone",
              },
              {
                "after": {
                  "required": false,
                  "type": "string",
                },
                "before": undefined,
                "change": "added",
                "key": "/schema/properties/bio",
              },
              {
                "after": {
                  "enum": [
                    "activation-pending",
                    "activated",
                    "blocked",
                  ],
                  "type": "string",
                },
                "before": {
                  "format": "int32",
                  "type": "integer",
                },
                "change": "changed",
                "key": "/schema/properties/userStatus",
              },
              {
                "after": {
                  "required": false,
                },
                "before": {
                  "required": true,
                },
                "change": "changed",
                "key": "/schema/properties/lastName",
              },
              {
                "after": {
                  "required": true,
                },
                "before": {
                  "required": false,
                },
                "change": "changed",
                "key": "/schema/properties/username",
              },
            ],
            "change": "changed",
            "name": "*/*",
          },
        ],
        "name": "Request Body",
      },
      "responses": [],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "DELETE /store/order/{orderId}",
      "parameters": [],
      "requestBody": undefined,
      "responses": [
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "schema": {
                      "properties": {
                        "code": {
                          "format": "int32",
                          "type": "integer",
                        },
                        "message": {
                          "type": "string",
                        },
                        "type": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "",
                },
              ],
              "change": "added",
              "name": "application/json",
            },
          ],
          "headers": [],
          "name": "404 response",
        },
      ],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "GET /store/order/{orderId}",
      "parameters": [],
      "requestBody": undefined,
      "responses": [
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "description": "Human readable summary of order",
                    "required": false,
                    "type": "string",
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "/schema/properties/summary",
                },
                {
                  "after": {
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                  },
                  "before": {
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                  },
                  "change": "changed",
                  "key": "/schema/properties/status",
                },
              ],
              "change": "changed",
              "name": "application/json",
            },
            {
              "attributes": [
                {
                  "after": {
                    "description": "Human readable summary of order",
                    "required": false,
                    "type": "string",
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "/schema/properties/summary",
                },
                {
                  "after": {
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                  },
                  "before": {
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                  },
                  "change": "changed",
                  "key": "/schema/properties/status",
                },
                {
                  "after": {
                    "required": false,
                  },
                  "before": {
                    "required": true,
                  },
                  "change": "changed",
                  "key": "/schema/properties/petId",
                },
              ],
              "change": "changed",
              "name": "application/xml",
            },
          ],
          "headers": [],
          "name": "200 response",
        },
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "schema": {
                      "properties": {
                        "code": {
                          "format": "int32",
                          "type": "integer",
                        },
                        "message": {
                          "type": "string",
                        },
                        "type": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "",
                },
              ],
              "change": "added",
              "name": "application/json",
            },
          ],
          "headers": [],
          "name": "404 response",
        },
      ],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "POST /store/order",
      "parameters": [],
      "requestBody": {
        "attributes": [],
        "change": "changed",
        "contentTypes": [
          {
            "attributes": [
              {
                "after": {
                  "description": "Human readable summary of order",
                  "required": false,
                  "type": "string",
                },
                "before": undefined,
                "change": "added",
                "key": "/schema/properties/summary",
              },
              {
                "after": {
                  "enum": [
                    "placed",
                    "delivered",
                    "canceled",
                  ],
                },
                "before": {
                  "enum": [
                    "placed",
                    "approved",
                    "delivered",
                  ],
                },
                "change": "changed",
                "key": "/schema/properties/status",
              },
            ],
            "change": "changed",
            "name": "*/*",
          },
        ],
        "name": "Request Body",
      },
      "responses": [
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "description": "Human readable summary of order",
                    "required": false,
                    "type": "string",
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "/schema/properties/summary",
                },
                {
                  "after": {
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                  },
                  "before": {
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                  },
                  "change": "changed",
                  "key": "/schema/properties/status",
                },
                {
                  "after": {
                    "complete": false,
                    "id": 458102,
                    "petId": 581231,
                    "quantity": 31,
                    "shipDate": "2022-03-04T22:54:32.631Z",
                    "status": "delivered",
                    "summary": "31 boxes of dog food",
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "/example",
                },
              ],
              "change": "changed",
              "name": "application/json",
            },
            {
              "attributes": [
                {
                  "after": {
                    "description": "Human readable summary of order",
                    "required": false,
                    "type": "string",
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "/schema/properties/summary",
                },
                {
                  "after": {
                    "enum": [
                      "placed",
                      "delivered",
                      "canceled",
                    ],
                  },
                  "before": {
                    "enum": [
                      "placed",
                      "approved",
                      "delivered",
                    ],
                  },
                  "change": "changed",
                  "key": "/schema/properties/status",
                },
              ],
              "change": "changed",
              "name": "application/xml",
            },
          ],
          "headers": [],
          "name": "200 response",
        },
      ],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "POST /pet/{petId}/uploadImage",
      "parameters": [
        {
          "attributes": [
            {
              "after": [
                0,
                1,
              ],
              "before": undefined,
              "change": "added",
              "key": "/schema/enum",
            },
          ],
          "change": "changed",
          "name": "cookie parameter 'debug'",
        },
      ],
      "requestBody": undefined,
      "responses": [
        {
          "attributes": [
            {
              "after": undefined,
              "before": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "code": {
                          "format": "int32",
                          "type": "integer",
                        },
                        "message": {
                          "type": "string",
                        },
                        "type": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "successful operation",
              },
              "change": "removed",
              "key": "",
            },
          ],
          "change": "removed",
          "contentTypes": [],
          "headers": [],
          "name": "200 response",
        },
        {
          "attributes": [
            {
              "after": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "code": {
                          "format": "int32",
                          "type": "integer",
                        },
                        "message": {
                          "type": "string",
                        },
                        "type": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "successful operation",
              },
              "before": undefined,
              "change": "added",
              "key": "",
            },
          ],
          "change": "added",
          "contentTypes": [],
          "headers": [],
          "name": "201 response",
        },
        {
          "attributes": [
            {
              "after": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "code": {
                          "format": "int32",
                          "type": "integer",
                        },
                        "message": {
                          "type": "string",
                        },
                        "type": {
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Pet not found",
              },
              "before": undefined,
              "change": "added",
              "key": "",
            },
          ],
          "change": "added",
          "contentTypes": [],
          "headers": [],
          "name": "404 response",
        },
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "type": "integer",
                  },
                  "before": {
                    "type": "string",
                  },
                  "change": "changed",
                  "key": "/schema/properties/type",
                },
              ],
              "change": "changed",
              "name": "application/json",
            },
          ],
          "headers": [],
          "name": "default response",
        },
      ],
    },
    {
      "attributes": [
        {
          "after": undefined,
          "before": {
            "responses": {
              "404": {
                "content": {},
                "description": "Pet not found",
              },
              "405": {
                "content": {},
                "description": "Validation exception",
              },
            },
          },
          "change": "removed",
          "key": "",
        },
      ],
      "change": "removed",
      "name": "GET /pet",
      "parameters": [],
      "requestBody": undefined,
      "responses": [],
    },
    {
      "attributes": [
        {
          "after": "addPet-change",
          "before": "addPet",
          "change": "changed",
          "key": "/operationId",
        },
      ],
      "change": "changed",
      "name": "POST /pet",
      "parameters": [],
      "requestBody": {
        "attributes": [],
        "change": "changed",
        "contentTypes": [
          {
            "attributes": [
              {
                "after": {
                  "required": false,
                  "type": "string",
                },
                "before": undefined,
                "change": "added",
                "key": "/schema/properties/category/properties/other",
              },
            ],
            "change": "changed",
            "name": "application/json",
          },
        ],
        "name": "Request Body",
      },
      "responses": [],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "PUT /pet",
      "parameters": [],
      "requestBody": {
        "attributes": [],
        "change": "changed",
        "contentTypes": [
          {
            "attributes": [
              {
                "after": undefined,
                "before": {
                  "schema": {
                    "properties": {
                      "category": {
                        "properties": {
                          "id": {
                            "format": "int64",
                            "type": "integer",
                          },
                          "name": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                        "xml": {
                          "name": "Category",
                        },
                      },
                      "id": {
                        "format": "int64",
                        "type": "integer",
                      },
                      "name": {
                        "example": "doggie",
                        "type": "string",
                      },
                      "photoUrls": {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                        "xml": {
                          "name": "photoUrl",
                          "wrapped": true,
                        },
                      },
                      "status": {
                        "description": "pet status in the store",
                        "enum": [
                          "available",
                          "pending",
                          "sold",
                        ],
                        "type": "string",
                      },
                      "tags": {
                        "items": {
                          "properties": {
                            "id": {
                              "format": "int64",
                              "type": "integer",
                            },
                            "name": {
                              "type": "string",
                            },
                          },
                          "type": "object",
                          "xml": {
                            "name": "Tag",
                          },
                        },
                        "type": "array",
                        "xml": {
                          "name": "tag",
                          "wrapped": true,
                        },
                      },
                    },
                    "required": [
                      "name",
                      "photoUrls",
                    ],
                    "type": "object",
                    "xml": {
                      "name": "Pet",
                    },
                  },
                },
                "change": "removed",
                "key": "",
              },
            ],
            "change": "removed",
            "name": "application/xml",
          },
          {
            "attributes": [
              {
                "after": undefined,
                "before": {
                  "example": "doggie",
                  "required": true,
                  "type": "string",
                },
                "change": "removed",
                "key": "/schema/properties/name",
              },
              {
                "after": {
                  "required": false,
                  "type": "string",
                },
                "before": undefined,
                "change": "added",
                "key": "/schema/properties/example",
              },
              {
                "after": {
                  "required": true,
                  "type": "string",
                },
                "before": undefined,
                "change": "added",
                "key": "/schema/properties/number",
              },
            ],
            "change": "changed",
            "name": "application/json",
          },
        ],
        "name": "Request Body",
      },
      "responses": [
        {
          "attributes": [
            {
              "after": undefined,
              "before": {
                "content": {},
                "description": "Invalid ID supplied",
              },
              "change": "removed",
              "key": "",
            },
          ],
          "change": "removed",
          "contentTypes": [],
          "headers": [],
          "name": "400 response",
        },
      ],
    },
    {
      "attributes": [
        {
          "after": "get_examples",
          "before": "getExamples",
          "change": "changed",
          "key": "/operationId",
        },
      ],
      "change": "changed",
      "name": "GET /example",
      "parameters": [
        {
          "attributes": [
            {
              "after": [
                "available",
                "pending",
                "sold",
              ],
              "before": [
                "available",
                "sold",
              ],
              "change": "changed",
              "key": "/schema/enum",
            },
          ],
          "change": "changed",
          "name": "query parameter 'status'",
        },
      ],
      "requestBody": undefined,
      "responses": [
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "anyOf": [
                      {
                        "properties": {
                          "orderId": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      {
                        "properties": {
                          "order": {
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "before": {
                    "anyOf": [
                      {
                        "properties": {
                          "orderId": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "change": "changed",
                  "key": "/schema/properties/expandableObject",
                },
                {
                  "after": {
                    "type": "number",
                  },
                  "before": {
                    "type": "string",
                  },
                  "change": "changed",
                  "key": "/schema/properties/composedObject/allOf/0/properties/orderId",
                },
                {
                  "after": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                    ],
                  },
                  "before": {
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "type": "number",
                      },
                      {
                        "properties": {
                          "orderId": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "change": "changed",
                  "key": "/schema/properties/stringOrNumberOrObject",
                },
              ],
              "change": "changed",
              "name": "application/json",
            },
          ],
          "headers": [],
          "name": "200 response",
        },
      ],
    },
  ],
}
`;

exports[`json changelog with parameter changes: parameters 1`] = `
{
  "operations": [
    {
      "attributes": [],
      "change": "changed",
      "name": "POST /test/set2",
      "parameters": [
        {
          "attributes": [
            {
              "after": {
                "in": "query",
                "name": "test_test",
                "schema": {
                  "type": "string",
                },
              },
              "before": undefined,
              "change": "added",
              "key": "",
            },
          ],
          "change": "added",
          "name": "query parameter 'test_test'",
        },
      ],
      "requestBody": undefined,
      "responses": [],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "GET /test/set1",
      "parameters": [
        {
          "attributes": [
            {
              "after": {
                "in": "header",
                "name": "X-username",
                "schema": {
                  "type": "string",
                },
              },
              "before": undefined,
              "change": "added",
              "key": "",
            },
          ],
          "change": "added",
          "name": "header parameter 'X-username'",
        },
      ],
      "requestBody": undefined,
      "responses": [],
    },
  ],
}
`;

exports[`json changelog with response header changes: response-headers 1`] = `
{
  "operations": [
    {
      "attributes": [],
      "change": "changed",
      "name": "POST /test/set2",
      "parameters": [
        {
          "attributes": [
            {
              "after": {
                "in": "query",
                "name": "test_test",
                "schema": {
                  "type": "string",
                },
              },
              "before": undefined,
              "change": "added",
              "key": "",
            },
          ],
          "change": "added",
          "name": "query parameter 'test_test'",
        },
        {
          "attributes": [
            {
              "after": undefined,
              "before": {
                "in": "header",
                "name": "removed_header",
                "schema": {
                  "type": "string",
                },
              },
              "change": "removed",
              "key": "",
            },
          ],
          "change": "removed",
          "name": "header parameter 'removed_header'",
        },
      ],
      "requestBody": {
        "attributes": [],
        "change": "changed",
        "contentTypes": [
          {
            "attributes": [
              {
                "after": {
                  "schema": {
                    "properties": {
                      "custrom_property": {
                        "minLength": 5,
                        "type": "string",
                      },
                    },
                  },
                },
                "before": {
                  "schema": {
                    "properties": {
                      "custom_property": {
                        "minLength": 5,
                        "type": "string",
                      },
                    },
                  },
                },
                "change": "changed",
                "key": "",
              },
            ],
            "change": "changed",
            "name": "application/json",
          },
        ],
        "name": "Request Body",
      },
      "responses": [
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [],
          "headers": [
            {
              "attributes": [
                {
                  "after": {
                    "description": "asd.",
                    "schema": {
                      "type": "string",
                    },
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "",
                },
              ],
              "change": "added",
              "name": "response header Link",
            },
          ],
          "name": "200 response",
        },
      ],
    },
    {
      "attributes": [],
      "change": "changed",
      "name": "GET /test/set1",
      "parameters": [
        {
          "attributes": [
            {
              "after": {
                "in": "header",
                "name": "X-username",
                "schema": {
                  "type": "string",
                },
              },
              "before": undefined,
              "change": "added",
              "key": "",
            },
          ],
          "change": "added",
          "name": "header parameter 'X-username'",
        },
      ],
      "requestBody": undefined,
      "responses": [
        {
          "attributes": [],
          "change": "changed",
          "contentTypes": [
            {
              "attributes": [
                {
                  "after": {
                    "required": false,
                    "type": "string",
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "/schema/properties/field_2",
                },
              ],
              "change": "changed",
              "name": "application/json",
            },
          ],
          "headers": [
            {
              "attributes": [
                {
                  "after": {
                    "description": "ads",
                    "schema": {
                      "type": "string",
                    },
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "",
                },
              ],
              "change": "added",
              "name": "response header Link",
            },
            {
              "attributes": [
                {
                  "after": {
                    "schema": {
                      "type": "string",
                    },
                  },
                  "before": undefined,
                  "change": "added",
                  "key": "",
                },
              ],
              "change": "added",
              "name": "response header test_header",
            },
          ],
          "name": "200 response",
        },
      ],
    },
  ],
}
`;
