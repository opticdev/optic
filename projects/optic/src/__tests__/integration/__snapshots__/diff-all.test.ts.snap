// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`diff-all diff all against a cloud tag 1`] = `
"[34mDiffing cloud:api-id@main to spec.json[39m

[31mx [39m[1mEmpty[22m [90mspec.json[39m
[1mPreview docs: [22m https://useoptic.com/docs/cloud-get-started
[1mOperations: [22m4 operations added, 1 removed
[31mx [39m [1mChecks:[22m 0/1 passed 

specification details:
- /x-optic-url [32madded[39m
- /openapi [33mchanged[39m

[31mx [1mGET[22m /api/users[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/empty.json#L1
  

[32mâœ” [1mGET[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPOST[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPUT[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPATCH[22m /example[39m: [32madded[39m
  

...and 4 other endpoints

[33mWarning - the following OpenAPI specs were detected but did not have valid x-optic-url keys. optic diff-all --compare-from cloud:{tag}' can only runs on specs that have been added to optic[39m

Run the \`optic api add\` command to add these specs to optic
spec-no-url.json [31m(untracked)[39m



 [1m[33mFinish setting up Optic by adding your OPTIC_TOKEN. Create one here: [39m[22m[34m[4mhttps://app.useoptic.com/[24m[39m
 â†’ Add API Review Tools to your Pull Requests 
[2m   Preview Docs | Visual Diffs | Notify Consumers | Sharable links | API Changelogs | Stats[22m
"
`;

exports[`diff-all diff all in --generated 1`] = `
"[34mDiffing cloud:generated-api@main to spec-no-url.json[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/generated-api/runs/run-id
[31mx [39m[1mEmpty[22m [90mspec-no-url.json[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/generated-api?specId=already-uploaded
[1mOperations: [22m4 operations added, 1 removed
[31mx [39m [1mChecks:[22m 0/1 passed 

specification details:
- /openapi [33mchanged[39m

[31mx [1mGET[22m /api/users[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/empty.json#L1
  

[32mâœ” [1mGET[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPOST[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPUT[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPATCH[22m /example[39m: [32madded[39m
  

...and 4 other endpoints

[34mDiffing cloud:api-id@main to spec.json[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1mEmpty[22m [90mspec.json[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22m4 operations added, 1 removed
[31mx [39m [1mChecks:[22m 0/1 passed 

specification details:
- /x-optic-url [32madded[39m
- /openapi [33mchanged[39m

[31mx [1mGET[22m /api/users[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/empty.json#L1
  

[32mâœ” [1mGET[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPOST[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPUT[22m /example[39m: [32madded[39m
  

[32mâœ” [1mPATCH[22m /example[39m: [32madded[39m
  

...and 4 other endpoints

"
`;

exports[`diff-all diff all not in the root of a repo 1`] = `
"[34mDiffing HEAD~1:folder/in-folder.yml to in-folder.yml[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1ma spec[22m [90min-folder.yml[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22mNo operations changed
[31mx [39m [1mChecks:[22m 0/2 passed 

[31mx [1mPOST[22m /filler_route[39m: 
  [31m[1mx [operation path component naming check][22m filler_route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/folder/in-folder.yml#L9
  

[31mx [1mPOST[22m /api/filler-route[39m: 
  [31m[1mx [operation path component naming check][22m filler-route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/folder/in-folder.yml#L24
  

...and 2 other endpoints

[34mDiffing HEAD~1:mvspec.yml to empty spec[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1mEmpty[22m [90mHEAD~1:mvspec.yml[39m
[1mPreview docs: [22m https://useoptic.com/docs/cloud-get-started
[1mOperations: [22m2 operations removed
[31mx [39m [1mChecks:[22m 0/6 passed 

specification details:
- /x-optic-url, /info/description [31mremoved[39m

[31mx [1mPOST[22m /filler_route[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L9
  
  - response [1m201[22m: 
    [31m[1mx [prevent response status code removal][22m must not remove response status code 201. This is a breaking change.[39m
    at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L12
    
    - body [1mapplication/json[22m: 
      - property [1m/schema/properties/id[22m: 
      
        [31m[1mx [prevent removing response property][22m cannot remove response property 'id'. This is a breaking change.[39m
        at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L19
        

[31mx [1mPOST[22m /api/filler-route[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L24
  
  - response [1m201[22m: 
    [31m[1mx [prevent response status code removal][22m must not remove response status code 201. This is a breaking change.[39m
    at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L27
    
    - body [1mapplication/json[22m: 
      - property [1m/schema/properties/id[22m: 
      
        [31m[1mx [prevent removing response property][22m cannot remove response property 'id'. This is a breaking change.[39m
        at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L34
        


[34mDiffing HEAD~1:specwithkey.json to ../specwithkey.json[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[32mâœ” [39m[1mAPI 1[22m [90m../specwithkey.json[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22mNo operations changed
[32mâœ” [39m [1mChecks:[22m 4/4 passed 

[32mâœ” [1mGET[22m /example[39m: 

[32mâœ” [1mPATCH[22m /example[39m: 

[32mâœ” [1mPOST[22m /example[39m: 

[32mâœ” [1mPUT[22m /example[39m: 

...and 4 other endpoints

[34mDiffing HEAD~1:specwithkey.yml to ../specwithkey.yml[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1ma spec[22m [90m../specwithkey.yml[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22mNo operations changed
[31mx [39m [1mChecks:[22m 0/1 passed 

[31mx [1mPOST[22m /filler_route[39m: 
  [31m[1mx [operation path component naming check][22m filler_route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/specwithkey.yml#L9
  

...and 1 other endpoint

[34mDiffing empty spec to ../movedspec.yml[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1ma spec[22m [90m../movedspec.yml[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22m2 operations added
[31mx [39m [1mChecks:[22m 0/2 passed 

specification details:
- /x-optic-url, /info/description [32madded[39m
- /openapi, /info/version, /info/title [33mchanged[39m

[31mx [1mPOST[22m /filler_route[39m: [32madded[39m
  
  [31m[1mx [operation path component naming check][22m filler_route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/movedspec.yml#L9
  

[31mx [1mPOST[22m /api/filler-route[39m: [32madded[39m
  
  [31m[1mx [operation path component naming check][22m filler-route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/movedspec.yml#L24
  

...and 2 other endpoints

[33mWarning - the following OpenAPI specs were detected but did not have valid x-optic-url keys. 'optic diff-all --upload' can only runs on specs that have been added to optic[39m

Run the \`optic api add\` command to add these specs to optic
../spec-with-invalid-url.yml [31m(untracked)[39m
../specwithoutkey.json [31m(untracked)[39m
../specwithoutkey.yml [31m(untracked)[39m

"
`;

exports[`diff-all diff all with glob and ignores 1`] = `
"[34mDiffing HEAD~1:folder-to-run/should-run.yml to empty spec[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1mEmpty[22m [90mHEAD~1:folder-to-run/should-run.yml[39m
[1mPreview docs: [22m https://useoptic.com/docs/cloud-get-started
[1mOperations: [22m1 operation removed
[31mx [39m [1mChecks:[22m 0/3 passed 

specification details:
- /x-optic-url, /info/description [31mremoved[39m

[31mx [1mPOST[22m /filler_route[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/folder-to-run/should-run.yml#L9
  
  - response [1m201[22m: 
    [31m[1mx [prevent response status code removal][22m must not remove response status code 201. This is a breaking change.[39m
    at https://github.com/User/UserRepo/tree/COMMIT-HASH/folder-to-run/should-run.yml#L12
    
    - body [1mapplication/json[22m: 
      - property [1m/schema/properties/id[22m: 
      
        [31m[1mx [prevent removing response property][22m cannot remove response property 'id'. This is a breaking change.[39m
        at https://github.com/User/UserRepo/tree/COMMIT-HASH/folder-to-run/should-run.yml#L19
        


[34mDiffing empty spec to folder-to-run/should-run-mved.yml[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[32mâœ” [39m[1ma spec[22m [90mfolder-to-run/should-run-mved.yml[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22m1 operation added

specification details:
- /x-optic-url, /info/description [32madded[39m
- /openapi, /info/version, /info/title [33mchanged[39m

[32mâœ” [1mPOST[22m /filler_route[39m: [32madded[39m
  

...and 1 other endpoint

"
`;

exports[`diff-all diffs all files in a workspace with x-optic-url keys with --upload 1`] = `
"[34mDiffing HEAD~1:folder/in-folder.yml to folder/in-folder.yml[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1ma spec[22m [90mfolder/in-folder.yml[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22mNo operations changed
[31mx [39m [1mChecks:[22m 0/2 passed 

[31mx [1mPOST[22m /filler_route[39m: 
  [31m[1mx [operation path component naming check][22m filler_route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/folder/in-folder.yml#L9
  

[31mx [1mPOST[22m /api/filler-route[39m: 
  [31m[1mx [operation path component naming check][22m filler-route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/folder/in-folder.yml#L24
  

...and 2 other endpoints

[34mDiffing HEAD~1:mvspec.yml to empty spec[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1mEmpty[22m [90mHEAD~1:mvspec.yml[39m
[1mPreview docs: [22m https://useoptic.com/docs/cloud-get-started
[1mOperations: [22m2 operations removed
[31mx [39m [1mChecks:[22m 0/6 passed 

specification details:
- /x-optic-url, /info/description [31mremoved[39m

[31mx [1mPOST[22m /filler_route[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L9
  
  - response [1m201[22m: 
    [31m[1mx [prevent response status code removal][22m must not remove response status code 201. This is a breaking change.[39m
    at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L12
    
    - body [1mapplication/json[22m: 
      - property [1m/schema/properties/id[22m: 
      
        [31m[1mx [prevent removing response property][22m cannot remove response property 'id'. This is a breaking change.[39m
        at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L19
        

[31mx [1mPOST[22m /api/filler-route[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L24
  
  - response [1m201[22m: 
    [31m[1mx [prevent response status code removal][22m must not remove response status code 201. This is a breaking change.[39m
    at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L27
    
    - body [1mapplication/json[22m: 
      - property [1m/schema/properties/id[22m: 
      
        [31m[1mx [prevent removing response property][22m cannot remove response property 'id'. This is a breaking change.[39m
        at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L34
        


[34mDiffing HEAD~1:specwithkey.json to specwithkey.json[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[32mâœ” [39m[1mAPI 1[22m [90mspecwithkey.json[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22mNo operations changed
[32mâœ” [39m [1mChecks:[22m 4/4 passed 

[32mâœ” [1mGET[22m /example[39m: 

[32mâœ” [1mPATCH[22m /example[39m: 

[32mâœ” [1mPOST[22m /example[39m: 

[32mâœ” [1mPUT[22m /example[39m: 

...and 4 other endpoints

[34mDiffing HEAD~1:specwithkey.yml to specwithkey.yml[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1ma spec[22m [90mspecwithkey.yml[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22mNo operations changed
[31mx [39m [1mChecks:[22m 0/1 passed 

[31mx [1mPOST[22m /filler_route[39m: 
  [31m[1mx [operation path component naming check][22m filler_route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/specwithkey.yml#L9
  

...and 1 other endpoint

[34mDiffing empty spec to movedspec.yml[39m

[32mâœ”[39m Uploaded results of diff to http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id
[31mx [39m[1ma spec[22m [90mmovedspec.yml[39m
[1mPreview docs: [22m http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded
[1mOperations: [22m2 operations added
[31mx [39m [1mChecks:[22m 0/2 passed 

specification details:
- /x-optic-url, /info/description [32madded[39m
- /openapi, /info/version, /info/title [33mchanged[39m

[31mx [1mPOST[22m /filler_route[39m: [32madded[39m
  
  [31m[1mx [operation path component naming check][22m filler_route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/movedspec.yml#L9
  

[31mx [1mPOST[22m /api/filler-route[39m: [32madded[39m
  
  [31m[1mx [operation path component naming check][22m filler-route is not camelCase[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/movedspec.yml#L24
  

...and 2 other endpoints

[33mWarning - the following OpenAPI specs were detected but did not have valid x-optic-url keys. 'optic diff-all --upload' can only runs on specs that have been added to optic[39m

Run the \`optic api add\` command to add these specs to optic
spec-with-invalid-url.yml [31m(untracked)[39m
specwithoutkey.json [31m(untracked)[39m
specwithoutkey.yml [31m(untracked)[39m

"
`;

exports[`diff-all diffs all files in a workspace with x-optic-url keys with --upload 2`] = `
{
  "completed": [
    {
      "apiName": "folder/in-folder.yml",
      "comparison": {
        "groupedDiffs": {
          "endpoints": {
            "/api/filler-route-~_~-POST": {
              "cookieParameters": {},
              "diffs": [],
              "headerParameters": {},
              "method": "POST",
              "path": "/api/filler-route",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "error": "filler-route is not camelCase",
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1api~1filler-route/post",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": false,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "POST /api/filler-route",
                },
              ],
            },
            "/filler_route-~_~-POST": {
              "cookieParameters": {},
              "diffs": [],
              "headerParameters": {},
              "method": "POST",
              "path": "/filler_route",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "error": "filler_route is not camelCase",
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1filler_route/post",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": false,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "POST /filler_route",
                },
              ],
            },
          },
          "specification": {
            "diffs": [],
            "rules": [],
          },
        },
        "results": [
          {
            "error": "filler_route is not camelCase",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1filler_route/post",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": false,
            "severity": 2,
            "type": "requirement",
            "where": "POST /filler_route",
          },
          {
            "error": "filler-route is not camelCase",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1api~1filler-route/post",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": false,
            "severity": 2,
            "type": "requirement",
            "where": "POST /api/filler-route",
          },
        ],
      },
      "opticWebUrl": "http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id",
      "specUrl": "http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded",
      "warnings": [],
    },
    {
      "apiName": "HEAD~1:mvspec.yml",
      "comparison": {
        "groupedDiffs": {
          "endpoints": {
            "/api/filler-route-~_~-POST": {
              "cookieParameters": {},
              "diffs": [
                {
                  "before": "/paths/~1api~1filler-route/post",
                  "change": "removed",
                  "trail": "",
                },
              ],
              "headerParameters": {},
              "method": "POST",
              "path": "/api/filler-route",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {
                "201": {
                  "contents": {
                    "application/json": {
                      "examples": {
                        "diffs": [],
                        "rules": [],
                      },
                      "fields": {
                        "/schema/properties/id": {
                          "diffs": [],
                          "rules": [
                            {
                              "error": "cannot remove response property 'id'. This is a breaking change.",
                              "exempted": false,
                              "location": {
                                "jsonPath": "/paths/~1api~1filler-route/post/responses/201/content/application~1json/schema/properties/id",
                                "spec": "before",
                              },
                              "name": "prevent removing response property",
                              "passed": false,
                              "severity": 2,
                              "trail": "",
                              "type": "removed",
                              "where": "POST /api/filler-route response 201 response body: application/json property id",
                            },
                          ],
                        },
                      },
                    },
                  },
                  "diffs": [],
                  "headers": {
                    "diffs": [],
                    "rules": [],
                  },
                  "rules": [
                    {
                      "error": "must not remove response status code 201. This is a breaking change.",
                      "exempted": false,
                      "location": {
                        "jsonPath": "/paths/~1api~1filler-route/post/responses/201",
                        "spec": "before",
                      },
                      "name": "prevent response status code removal",
                      "passed": false,
                      "severity": 2,
                      "trail": "",
                      "type": "removed",
                      "where": "POST /api/filler-route response 201",
                    },
                  ],
                },
              },
              "rules": [
                {
                  "error": "cannot remove an operation. This is a breaking change.",
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1api~1filler-route/post",
                    "spec": "before",
                  },
                  "name": "prevent operation removal",
                  "passed": false,
                  "severity": 2,
                  "trail": "",
                  "type": "removed",
                  "where": "POST /api/filler-route",
                },
              ],
            },
            "/filler_route-~_~-POST": {
              "cookieParameters": {},
              "diffs": [
                {
                  "before": "/paths/~1filler_route/post",
                  "change": "removed",
                  "trail": "",
                },
              ],
              "headerParameters": {},
              "method": "POST",
              "path": "/filler_route",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {
                "201": {
                  "contents": {
                    "application/json": {
                      "examples": {
                        "diffs": [],
                        "rules": [],
                      },
                      "fields": {
                        "/schema/properties/id": {
                          "diffs": [],
                          "rules": [
                            {
                              "error": "cannot remove response property 'id'. This is a breaking change.",
                              "exempted": false,
                              "location": {
                                "jsonPath": "/paths/~1filler_route/post/responses/201/content/application~1json/schema/properties/id",
                                "spec": "before",
                              },
                              "name": "prevent removing response property",
                              "passed": false,
                              "severity": 2,
                              "trail": "",
                              "type": "removed",
                              "where": "POST /filler_route response 201 response body: application/json property id",
                            },
                          ],
                        },
                      },
                    },
                  },
                  "diffs": [],
                  "headers": {
                    "diffs": [],
                    "rules": [],
                  },
                  "rules": [
                    {
                      "error": "must not remove response status code 201. This is a breaking change.",
                      "exempted": false,
                      "location": {
                        "jsonPath": "/paths/~1filler_route/post/responses/201",
                        "spec": "before",
                      },
                      "name": "prevent response status code removal",
                      "passed": false,
                      "severity": 2,
                      "trail": "",
                      "type": "removed",
                      "where": "POST /filler_route response 201",
                    },
                  ],
                },
              },
              "rules": [
                {
                  "error": "cannot remove an operation. This is a breaking change.",
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1filler_route/post",
                    "spec": "before",
                  },
                  "name": "prevent operation removal",
                  "passed": false,
                  "severity": 2,
                  "trail": "",
                  "type": "removed",
                  "where": "POST /filler_route",
                },
              ],
            },
          },
          "specification": {
            "diffs": [
              {
                "before": "/x-optic-url",
                "change": "removed",
                "pathReconciliation": [],
                "trail": "/x-optic-url",
              },
              {
                "before": "/info/description",
                "change": "removed",
                "pathReconciliation": [],
                "trail": "/info/description",
              },
            ],
            "rules": [],
          },
        },
        "results": [
          {
            "error": "cannot remove an operation. This is a breaking change.",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1filler_route/post",
              "spec": "before",
            },
            "name": "prevent operation removal",
            "passed": false,
            "severity": 2,
            "type": "removed",
            "where": "POST /filler_route",
          },
          {
            "error": "cannot remove response property 'id'. This is a breaking change.",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1filler_route/post/responses/201/content/application~1json/schema/properties/id",
              "spec": "before",
            },
            "name": "prevent removing response property",
            "passed": false,
            "severity": 2,
            "type": "removed",
            "where": "POST /filler_route response 201 response body: application/json property id",
          },
          {
            "error": "must not remove response status code 201. This is a breaking change.",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1filler_route/post/responses/201",
              "spec": "before",
            },
            "name": "prevent response status code removal",
            "passed": false,
            "severity": 2,
            "type": "removed",
            "where": "POST /filler_route response 201",
          },
          {
            "error": "cannot remove an operation. This is a breaking change.",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1api~1filler-route/post",
              "spec": "before",
            },
            "name": "prevent operation removal",
            "passed": false,
            "severity": 2,
            "type": "removed",
            "where": "POST /api/filler-route",
          },
          {
            "error": "cannot remove response property 'id'. This is a breaking change.",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1api~1filler-route/post/responses/201/content/application~1json/schema/properties/id",
              "spec": "before",
            },
            "name": "prevent removing response property",
            "passed": false,
            "severity": 2,
            "type": "removed",
            "where": "POST /api/filler-route response 201 response body: application/json property id",
          },
          {
            "error": "must not remove response status code 201. This is a breaking change.",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1api~1filler-route/post/responses/201",
              "spec": "before",
            },
            "name": "prevent response status code removal",
            "passed": false,
            "severity": 2,
            "type": "removed",
            "where": "POST /api/filler-route response 201",
          },
        ],
      },
      "opticWebUrl": "http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id",
      "specUrl": null,
      "warnings": [],
    },
    {
      "apiName": "specwithkey.json",
      "comparison": {
        "groupedDiffs": {
          "endpoints": {
            "/example-~_~-GET": {
              "cookieParameters": {},
              "diffs": [],
              "headerParameters": {},
              "method": "GET",
              "path": "/example",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1example/get",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": true,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "GET /example",
                },
              ],
            },
            "/example-~_~-PATCH": {
              "cookieParameters": {},
              "diffs": [],
              "headerParameters": {},
              "method": "PATCH",
              "path": "/example",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1example/patch",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": true,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "PATCH /example",
                },
              ],
            },
            "/example-~_~-POST": {
              "cookieParameters": {},
              "diffs": [],
              "headerParameters": {},
              "method": "POST",
              "path": "/example",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1example/post",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": true,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "POST /example",
                },
              ],
            },
            "/example-~_~-PUT": {
              "cookieParameters": {},
              "diffs": [],
              "headerParameters": {},
              "method": "PUT",
              "path": "/example",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1example/put",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": true,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "PUT /example",
                },
              ],
            },
          },
          "specification": {
            "diffs": [],
            "rules": [],
          },
        },
        "results": [
          {
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1example/get",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": true,
            "severity": 2,
            "type": "requirement",
            "where": "GET /example",
          },
          {
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1example/patch",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": true,
            "severity": 2,
            "type": "requirement",
            "where": "PATCH /example",
          },
          {
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1example/post",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": true,
            "severity": 2,
            "type": "requirement",
            "where": "POST /example",
          },
          {
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1example/put",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": true,
            "severity": 2,
            "type": "requirement",
            "where": "PUT /example",
          },
        ],
      },
      "opticWebUrl": "http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id",
      "specUrl": "http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded",
      "warnings": [],
    },
    {
      "apiName": "specwithkey.yml",
      "comparison": {
        "groupedDiffs": {
          "endpoints": {
            "/filler_route-~_~-POST": {
              "cookieParameters": {},
              "diffs": [],
              "headerParameters": {},
              "method": "POST",
              "path": "/filler_route",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "error": "filler_route is not camelCase",
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1filler_route/post",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": false,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "POST /filler_route",
                },
              ],
            },
          },
          "specification": {
            "diffs": [],
            "rules": [],
          },
        },
        "results": [
          {
            "error": "filler_route is not camelCase",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1filler_route/post",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": false,
            "severity": 2,
            "type": "requirement",
            "where": "POST /filler_route",
          },
        ],
      },
      "opticWebUrl": "http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id",
      "specUrl": "http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded",
      "warnings": [],
    },
    {
      "apiName": "movedspec.yml",
      "comparison": {
        "groupedDiffs": {
          "endpoints": {
            "/api/filler-route-~_~-POST": {
              "cookieParameters": {},
              "diffs": [
                {
                  "after": "/paths/~1api~1filler-route/post",
                  "change": "added",
                  "trail": "",
                },
              ],
              "headerParameters": {},
              "method": "POST",
              "path": "/api/filler-route",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "error": "filler-route is not camelCase",
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1api~1filler-route/post",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": false,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "POST /api/filler-route",
                },
              ],
            },
            "/filler_route-~_~-POST": {
              "cookieParameters": {},
              "diffs": [
                {
                  "after": "/paths/~1filler_route/post",
                  "change": "added",
                  "trail": "",
                },
              ],
              "headerParameters": {},
              "method": "POST",
              "path": "/filler_route",
              "pathParameters": {},
              "queryParameters": {},
              "request": {
                "contents": {},
                "diffs": [],
                "rules": [],
              },
              "responses": {},
              "rules": [
                {
                  "error": "filler_route is not camelCase",
                  "exempted": false,
                  "location": {
                    "jsonPath": "/paths/~1filler_route/post",
                    "spec": "after",
                  },
                  "name": "operation path component naming check",
                  "passed": false,
                  "severity": 2,
                  "trail": "",
                  "type": "requirement",
                  "where": "POST /filler_route",
                },
              ],
            },
          },
          "specification": {
            "diffs": [
              {
                "after": "/openapi",
                "before": "/openapi",
                "change": "changed",
                "trail": "/openapi",
              },
              {
                "after": "/x-optic-url",
                "change": "added",
                "trail": "/x-optic-url",
              },
              {
                "after": "/info/version",
                "before": "/info/version",
                "change": "changed",
                "trail": "/info/version",
              },
              {
                "after": "/info/title",
                "before": "/info/title",
                "change": "changed",
                "trail": "/info/title",
              },
              {
                "after": "/info/description",
                "change": "added",
                "trail": "/info/description",
              },
            ],
            "rules": [],
          },
        },
        "results": [
          {
            "error": "filler_route is not camelCase",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1filler_route/post",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": false,
            "severity": 2,
            "type": "requirement",
            "where": "POST /filler_route",
          },
          {
            "error": "filler-route is not camelCase",
            "exempted": false,
            "location": {
              "jsonPath": "/paths/~1api~1filler-route/post",
              "spec": "after",
            },
            "name": "operation path component naming check",
            "passed": false,
            "severity": 2,
            "type": "requirement",
            "where": "POST /api/filler-route",
          },
        ],
      },
      "opticWebUrl": "http://localhost:3001/organizations/org-id/apis/api-id/runs/run-id",
      "specUrl": "http://localhost:3001/organizations/org-id/apis/api-id?specId=already-uploaded",
      "warnings": [],
    },
  ],
  "failed": [],
  "noop": [],
  "severity": 2,
}
`;

exports[`diff-all diffs all files in a workspace without --upload 1`] = `
"[34mDiffing HEAD~1:mvspec.yml to empty spec[39m

[31mx [39m[1mEmpty[22m [90mHEAD~1:mvspec.yml[39m
[1mPreview docs: [22m https://useoptic.com/docs/cloud-get-started
[1mOperations: [22m2 operations removed
[31mx [39m [1mChecks:[22m 0/6 passed 

specification details:
- /info/description [31mremoved[39m

[31mx [1mPOST[22m /filler_route[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L8
  
  - response [1m201[22m: 
    [31m[1mx [prevent response status code removal][22m must not remove response status code 201. This is a breaking change.[39m
    at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L11
    
    - body [1mapplication/json[22m: 
      - property [1m/schema/properties/id[22m: 
      
        [31m[1mx [prevent removing response property][22m cannot remove response property 'id'. This is a breaking change.[39m
        at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L18
        

[31mx [1mPOST[22m /api/filler-route[39m: [31mremoved[39m
  
  [31m[1mx [prevent operation removal][22m cannot remove an operation. This is a breaking change.[39m
  at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L23
  
  - response [1m201[22m: 
    [31m[1mx [prevent response status code removal][22m must not remove response status code 201. This is a breaking change.[39m
    at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L26
    
    - body [1mapplication/json[22m: 
      - property [1m/schema/properties/id[22m: 
      
        [31m[1mx [prevent removing response property][22m cannot remove response property 'id'. This is a breaking change.[39m
        at https://github.com/User/UserRepo/tree/COMMIT-HASH/mvspec.yml#L33
        


[34mDiffing empty spec to movedspec.yml[39m

[32mâœ” [39m[1ma spec[22m [90mmovedspec.yml[39m
[1mPreview docs: [22m https://useoptic.com/docs/cloud-get-started
[1mOperations: [22m2 operations added

specification details:
- /info/description [32madded[39m
- /openapi, /info/version, /info/title [33mchanged[39m

[32mâœ” [1mPOST[22m /filler_route[39m: [32madded[39m
  

[32mâœ” [1mPOST[22m /api/filler-route[39m: [32madded[39m
  

...and 2 other endpoints



 [1m[33mFinish setting up Optic by adding your OPTIC_TOKEN. Create one here: [39m[22m[34m[4mhttps://app.useoptic.com/[24m[39m
 â†’ Add API Review Tools to your Pull Requests 
[2m   Preview Docs | Visual Diffs | Notify Consumers | Sharable links | API Changelogs | Stats[22m
"
`;

exports[`diff-all diffs all files with --json 1`] = `
"{"results":{"folder/in-folder.yml":{"operations":[]},"mvspec.yml":{"operations":[{"name":"POST /filler_route","change":"removed","attributes":[{"key":"","before":{"operationId":"create","responses":{"201":{"description":"Created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"d5b640e5-d88c-4c17-9bf0-93597b7a1ce2"}}}}}}}},"change":"removed"}],"parameters":[],"responses":[]},{"name":"POST /api/filler-route","change":"removed","attributes":[{"key":"","before":{"operationId":"create","responses":{"201":{"description":"Created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"d5b640e5-d88c-4c17-9bf0-93597b7a1ce2"}}}}}}}},"change":"removed"}],"parameters":[],"responses":[]}]},"specwithkey.json":{"operations":[]},"specwithkey.yml":{"operations":[]},"movedspec.yml":{"operations":[{"name":"POST /filler_route","change":"added","attributes":[{"key":"","after":{"operationId":"create","responses":{"201":{"description":"Created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"d5b640e5-d88c-4c17-9bf0-93597b7a1ce2"}}}}}}}},"change":"added"}],"parameters":[],"responses":[]},{"name":"POST /api/filler-route","change":"added","attributes":[{"key":"","after":{"operationId":"create","responses":{"201":{"description":"Created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","format":"uuid","example":"d5b640e5-d88c-4c17-9bf0-93597b7a1ce2"}}}}}}}},"change":"added"}],"parameters":[],"responses":[]}]}},"warnings":{"missingOpticUrl":[{"path":"spec-with-invalid-url.yml"},{"path":"specwithoutkey.json"},{"path":"specwithoutkey.yml"}],"unparseableFromSpec":[],"unparseableToSpec":[]}}
"
`;

exports[`diff-all diffs all in an empty folder 1`] = `
"[31m[1mNo OpenAPI specs were detected - exiting with error code 1[22m[39m


 [1m[33mFinish setting up Optic by adding your OPTIC_TOKEN. Create one here: [39m[22m[34m[4mhttps://app.useoptic.com/[24m[39m
 â†’ Add API Review Tools to your Pull Requests 
[2m   Preview Docs | Visual Diffs | Notify Consumers | Sharable links | API Changelogs | Stats[22m
"
`;
