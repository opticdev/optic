// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`end-end-tests fails when breaking param change 1`] = `
Array [
  Object {
    "change": null,
    "condition": "not be allowed",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "error": "expected added query parameter to not be required",
    "isMust": true,
    "isShould": false,
    "passed": false,
    "sourcemap": Object {
      "endLine": 81,
      "endPosition": 3732,
      "filePath": "/api-standards/resources/thing/2021-11-10/001-fail-breaking-param-change.yaml",
      "preview": "",
      "startLine": 77,
      "startPosition": 3632,
    },
    "where": "added query-parameter: org_id",
  },
]
`;

exports[`end-end-tests fails when operation is removed 1`] = `
Array [
  Object {
    "change": null,
    "condition": "not be allowed",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "error": "expected operation to not be removed",
    "isMust": true,
    "isShould": false,
    "passed": false,
    "sourcemap": Object {
      "filePath": undefined,
      "preview": "",
    },
    "where": "removed operation: PATCH /thing/{thing_id}",
  },
]
`;

exports[`end-end-tests passes when property field added to response 1`] = `
Array [
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 212,
      "endPosition": 9799,
      "filePath": "/api-standards/resources/thing/2021-11-10/001-ok-add-property-field.yaml",
      "preview": "",
      "startLine": 209,
      "startPosition": 9646,
    },
    "where": "added field: strangeness",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 212,
      "endPosition": 9799,
      "filePath": "/api-standards/resources/thing/2021-11-10/001-ok-add-property-field.yaml",
      "preview": "",
      "startLine": 209,
      "startPosition": 9646,
    },
    "where": "added field: strangeness",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 212,
      "endPosition": 9799,
      "filePath": "/api-standards/resources/thing/2021-11-10/001-ok-add-property-field.yaml",
      "preview": "",
      "startLine": 209,
      "startPosition": 9646,
    },
    "where": "added field: strangeness",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 212,
      "endPosition": 9799,
      "filePath": "/api-standards/resources/thing/2021-11-10/001-ok-add-property-field.yaml",
      "preview": "",
      "startLine": 209,
      "startPosition": 9646,
    },
    "where": "added field: strangeness",
  },
]
`;

exports[`end-end-tests passes when property operation added 1`] = `
Array [
  Object {
    "change": null,
    "condition": "not be allowed",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 7,
      "endPosition": 156,
      "filePath": "/api-standards/components/parameters/version.yaml",
      "preview": "",
      "startLine": 1,
      "startPosition": 0,
    },
    "where": "added query-parameter: version",
  },
  Object {
    "change": null,
    "condition": "not be allowed",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 80,
      "endPosition": 3707,
      "filePath": "/api-standards/resources/thing/2021-11-10/002-ok-add-operation.yaml",
      "preview": "",
      "startLine": 74,
      "startPosition": 3559,
    },
    "where": "added query-parameter: thing_ids",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 233,
      "endPosition": 10659,
      "filePath": "/api-standards/resources/thing/2021-11-10/002-ok-add-operation.yaml",
      "preview": "",
      "startLine": 231,
      "startPosition": 10528,
    },
    "where": "added field: strangeness",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 233,
      "endPosition": 10659,
      "filePath": "/api-standards/resources/thing/2021-11-10/002-ok-add-operation.yaml",
      "preview": "",
      "startLine": 231,
      "startPosition": 10528,
    },
    "where": "added field: strangeness",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 7,
      "endPosition": 123,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 1,
      "startPosition": 0,
    },
    "where": "added field: jsonapi",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 5,
      "endPosition": 69,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 4,
      "startPosition": 42,
    },
    "where": "added field: version",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 8,
      "endPosition": 172,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 5,
      "startPosition": 96,
    },
    "where": "added field: errors",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 17,
      "endPosition": 320,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 15,
      "startPosition": 279,
    },
    "where": "added field: id",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 19,
      "endPosition": 351,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 18,
      "startPosition": 325,
    },
    "where": "added field: status",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 21,
      "endPosition": 382,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 20,
      "startPosition": 356,
    },
    "where": "added field: detail",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 29,
      "endPosition": 547,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 22,
      "startPosition": 387,
    },
    "where": "added field: source",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 26,
      "endPosition": 471,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 25,
      "startPosition": 440,
    },
    "where": "added field: pointer",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 28,
      "endPosition": 513,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 27,
      "startPosition": 480,
    },
    "where": "added field: parameter",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 32,
      "endPosition": 609,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 30,
      "startPosition": 552,
    },
    "where": "added field: meta",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 7,
      "endPosition": 123,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 1,
      "startPosition": 0,
    },
    "where": "added field: jsonapi",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 5,
      "endPosition": 69,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 4,
      "startPosition": 42,
    },
    "where": "added field: version",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 8,
      "endPosition": 172,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 5,
      "startPosition": 96,
    },
    "where": "added field: errors",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 17,
      "endPosition": 320,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 15,
      "startPosition": 279,
    },
    "where": "added field: id",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 19,
      "endPosition": 351,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 18,
      "startPosition": 325,
    },
    "where": "added field: status",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 21,
      "endPosition": 382,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 20,
      "startPosition": 356,
    },
    "where": "added field: detail",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 29,
      "endPosition": 547,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 22,
      "startPosition": 387,
    },
    "where": "added field: source",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 26,
      "endPosition": 471,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 25,
      "startPosition": 440,
    },
    "where": "added field: pointer",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 28,
      "endPosition": 513,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 27,
      "startPosition": 480,
    },
    "where": "added field: parameter",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 32,
      "endPosition": 609,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 30,
      "startPosition": 552,
    },
    "where": "added field: meta",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 7,
      "endPosition": 123,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 1,
      "startPosition": 0,
    },
    "where": "added field: jsonapi",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 5,
      "endPosition": 69,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 4,
      "startPosition": 42,
    },
    "where": "added field: version",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 8,
      "endPosition": 172,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 5,
      "startPosition": 96,
    },
    "where": "added field: errors",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 17,
      "endPosition": 320,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 15,
      "startPosition": 279,
    },
    "where": "added field: id",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 19,
      "endPosition": 351,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 18,
      "startPosition": 325,
    },
    "where": "added field: status",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 21,
      "endPosition": 382,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 20,
      "startPosition": 356,
    },
    "where": "added field: detail",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 29,
      "endPosition": 547,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 22,
      "startPosition": 387,
    },
    "where": "added field: source",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 26,
      "endPosition": 471,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 25,
      "startPosition": 440,
    },
    "where": "added field: pointer",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 28,
      "endPosition": 513,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 27,
      "startPosition": 480,
    },
    "where": "added field: parameter",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 32,
      "endPosition": 609,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 30,
      "startPosition": 552,
    },
    "where": "added field: meta",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 7,
      "endPosition": 123,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 1,
      "startPosition": 0,
    },
    "where": "added field: jsonapi",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 5,
      "endPosition": 69,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 4,
      "startPosition": 42,
    },
    "where": "added field: version",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 8,
      "endPosition": 172,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 5,
      "startPosition": 96,
    },
    "where": "added field: errors",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 17,
      "endPosition": 320,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 15,
      "startPosition": 279,
    },
    "where": "added field: id",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 19,
      "endPosition": 351,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 18,
      "startPosition": 325,
    },
    "where": "added field: status",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 21,
      "endPosition": 382,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 20,
      "startPosition": 356,
    },
    "where": "added field: detail",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 29,
      "endPosition": 547,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 22,
      "startPosition": 387,
    },
    "where": "added field: source",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 26,
      "endPosition": 471,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 25,
      "startPosition": 440,
    },
    "where": "added field: pointer",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 28,
      "endPosition": 513,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 27,
      "startPosition": 480,
    },
    "where": "added field: parameter",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 32,
      "endPosition": 609,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 30,
      "startPosition": 552,
    },
    "where": "added field: meta",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 7,
      "endPosition": 123,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 1,
      "startPosition": 0,
    },
    "where": "added field: jsonapi",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 5,
      "endPosition": 69,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 4,
      "startPosition": 42,
    },
    "where": "added field: version",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 8,
      "endPosition": 172,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 5,
      "startPosition": 96,
    },
    "where": "added field: errors",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 17,
      "endPosition": 320,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 15,
      "startPosition": 279,
    },
    "where": "added field: id",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 19,
      "endPosition": 351,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 18,
      "startPosition": 325,
    },
    "where": "added field: status",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 21,
      "endPosition": 382,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 20,
      "startPosition": 356,
    },
    "where": "added field: detail",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 29,
      "endPosition": 547,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 22,
      "startPosition": 387,
    },
    "where": "added field: source",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 26,
      "endPosition": 471,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 25,
      "startPosition": 440,
    },
    "where": "added field: pointer",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 28,
      "endPosition": 513,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 27,
      "startPosition": 480,
    },
    "where": "added field: parameter",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 32,
      "endPosition": 609,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 30,
      "startPosition": 552,
    },
    "where": "added field: meta",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 7,
      "endPosition": 123,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 1,
      "startPosition": 0,
    },
    "where": "added field: jsonapi",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 5,
      "endPosition": 69,
      "filePath": "/api-standards/components/common.yaml",
      "preview": "",
      "startLine": 4,
      "startPosition": 42,
    },
    "where": "added field: version",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 8,
      "endPosition": 172,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 5,
      "startPosition": 96,
    },
    "where": "added field: errors",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 17,
      "endPosition": 320,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 15,
      "startPosition": 279,
    },
    "where": "added field: id",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 19,
      "endPosition": 351,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 18,
      "startPosition": 325,
    },
    "where": "added field: status",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 21,
      "endPosition": 382,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 20,
      "startPosition": 356,
    },
    "where": "added field: detail",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 29,
      "endPosition": 547,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 22,
      "startPosition": 387,
    },
    "where": "added field: source",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 26,
      "endPosition": 471,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 25,
      "startPosition": 440,
    },
    "where": "added field: pointer",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 28,
      "endPosition": 513,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 27,
      "startPosition": 480,
    },
    "where": "added field: parameter",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 32,
      "endPosition": 609,
      "filePath": "/api-standards/components/errors.yaml",
      "preview": "",
      "startLine": 30,
      "startPosition": 552,
    },
    "where": "added field: meta",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 233,
      "endPosition": 10659,
      "filePath": "/api-standards/resources/thing/2021-11-10/002-ok-add-operation.yaml",
      "preview": "",
      "startLine": 231,
      "startPosition": 10528,
    },
    "where": "added field: strangeness",
  },
  Object {
    "change": null,
    "condition": "not be required",
    "docsLink": undefined,
    "effectiveOnDate": undefined,
    "isMust": true,
    "isShould": false,
    "passed": true,
    "sourcemap": Object {
      "endLine": 233,
      "endPosition": 10659,
      "filePath": "/api-standards/resources/thing/2021-11-10/002-ok-add-operation.yaml",
      "preview": "",
      "startLine": 231,
      "startPosition": 10528,
    },
    "where": "added field: strangeness",
  },
]
`;

exports[`failing case 1: adding a camelCase when pascalCase is required 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "header": "exampleParam",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "parameters",
            "header",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/parameters/0",
          "kind": "header-parameter",
        },
        "value": Object {
          "in": "header",
          "name": "exampleParam",
          "required": false,
        },
      },
      "condition": "have PascalCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "exampleParam is not PascalCase",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "requirement for header-parameter: exampleParam",
    },
  ],
}
`;

exports[`failing case 1: adding a camelCase when pascalCase is required 2`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "header": "exampleParam",
              "statusCode": "200",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "headers",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/headers/exampleParam",
          "kind": "response-header",
        },
        "value": Object {
          "name": "exampleParam",
          "required": false,
        },
      },
      "condition": "have PascalCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "exampleParam is not PascalCase",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "requirement for response-header: exampleParam",
    },
  ],
}
`;

exports[`failing case 1: adding a camelCase when pascalCase is required 3`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "examplePropertyName",
            ],
            "method": "post",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "post",
            "application/json",
            "examplePropertyName",
          ],
          "jsonPath": "/paths/~1example/post/requestBody/content/application~1json/schema/properties/examplePropertyName",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "examplePropertyName",
          "required": false,
        },
      },
      "condition": "have PascalCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "examplePropertyName is not PascalCase",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "requirement for field: request body 'examplePropertyName'",
    },
  ],
}
`;

exports[`failing case 1: adding a camelCase when pascalCase is required 4`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "examplePropertyName",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "examplePropertyName",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/examplePropertyName",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "examplePropertyName",
          "required": false,
        },
      },
      "condition": "have PascalCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "examplePropertyName is not PascalCase",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "requirement for field: response body 'examplePropertyName'",
    },
  ],
}
`;

exports[`failing case 1: adding a camelCase when pascalCase is required 5`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "query": "exampleParam",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "parameters",
            "query",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/parameters/0",
          "kind": "query-parameter",
        },
        "value": Object {
          "in": "query",
          "name": "exampleParam",
          "required": false,
        },
      },
      "condition": "have PascalCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "exampleParam is not PascalCase",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "requirement for query-parameter: exampleParam",
    },
  ],
}
`;

exports[`failing case 1: adding a required property 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "added": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "email",
          "required": true,
        },
        "changeType": "added",
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "email",
            ],
            "method": "post",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "post",
            "application/json",
            "email",
          ],
          "jsonPath": "/paths/~1example/post/requestBody/content/application~1json/schema/properties/email",
          "kind": "field",
        },
      },
      "condition": "not be required",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected request body property to not be required",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "added field: email",
    },
  ],
}
`;

exports[`failing case 1: adding required 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "added": Object {
          "in": "query",
          "name": "exampleParam",
          "required": true,
        },
        "changeType": "added",
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "query": "exampleParam",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "parameters",
            "query",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/parameters/0",
          "kind": "query-parameter",
        },
      },
      "condition": "not be allowed",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected added query parameter to not be required",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "added query-parameter: exampleParam",
    },
  ],
}
`;

exports[`failing case 1: changing from optional to required 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "changed",
        "changed": Object {
          "after": Object {
            "in": "query",
            "name": "exampleParam",
            "required": true,
          },
          "before": Object {
            "in": "query",
            "name": "exampleParam",
            "required": false,
          },
        },
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "query": "exampleParam",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "parameters",
            "query",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/parameters/0",
          "kind": "query-parameter",
        },
      },
      "condition": "not allow changing from optional to required",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected query parameter to be not be required",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "updated query-parameter: exampleParam",
    },
  ],
}
`;

exports[`failing case 1: changing optional to required 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "changed",
        "changed": Object {
          "after": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": true,
          },
          "before": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "post",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "post",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/post/requestBody/content/application~1json/schema/properties/name",
          "kind": "field",
        },
      },
      "condition": "not change from optional to required",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected body property to be optional",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "updated field: name",
    },
  ],
}
`;

exports[`failing case 1: changing required to optional 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "changed",
        "changed": Object {
          "after": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
          "before": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": true,
          },
        },
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
          "kind": "field",
        },
      },
      "condition": "not change from required to optional",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected body property to be required",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "updated field: name",
    },
  ],
}
`;

exports[`failing case 1: changing type 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "changed",
        "changed": Object {
          "after": Object {
            "in": "query",
            "name": "exampleParam",
            "schema": Object {
              "type": "number",
            },
          },
          "before": Object {
            "in": "query",
            "name": "exampleParam",
            "schema": Object {
              "type": "string",
            },
          },
        },
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "query": "exampleParam",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "parameters",
            "query",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/parameters/0",
          "kind": "query-parameter",
        },
      },
      "condition": "not change the type",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected query parameter to not change type",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "updated query-parameter: exampleParam",
    },
  ],
}
`;

exports[`failing case 1: changing type 2`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "changed",
        "changed": Object {
          "after": Object {
            "flatSchema": Object {
              "type": "number",
            },
            "key": "name",
            "required": false,
          },
          "before": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "post",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "post",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/post/requestBody/content/application~1json/schema/properties/name",
          "kind": "field",
        },
      },
      "condition": "not allow changing types",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected property to not change type",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "updated field: name",
    },
  ],
}
`;

exports[`failing case 1: changing type 3`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "changed",
        "changed": Object {
          "after": Object {
            "flatSchema": Object {
              "type": "number",
            },
            "key": "name",
            "required": false,
          },
          "before": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
          "kind": "field",
        },
      },
      "condition": "not allow changing types",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected property to not change type",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "updated field: name",
    },
  ],
}
`;

exports[`failing case 1: removing operation 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "removed",
        "location": Object {
          "conceptualLocation": Object {
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
          ],
          "jsonPath": "/paths/~1example/get",
          "kind": "operation",
        },
        "removed": Object {
          "before": Object {
            "method": "get",
            "pathPattern": "/example",
          },
        },
      },
      "condition": "not be allowed",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected operation to not be removed",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "removed operation: GET /example",
    },
  ],
}
`;

exports[`failing case 1: removing property 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "removed",
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
          "kind": "field",
        },
        "removed": Object {
          "before": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
      },
      "condition": "not be allowed",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected response property to not be removed",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "removed field: name",
    },
  ],
}
`;

exports[`failing case 1: removing status code 1`] = `
Object {
  "passed": false,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "removed",
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "statusCode": "200",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
          ],
          "jsonPath": "/paths/~1example/get/responses/200",
          "kind": "response",
        },
        "removed": Object {
          "before": Object {
            "description": "",
            "statusCode": "200",
          },
        },
      },
      "condition": "not be allowed",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected response to not be removed",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "removed response: 200",
    },
  ],
}
`;

exports[`passing case 1: adding a camelCase when camelCase is required 1`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "header": "exampleParam",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "parameters",
            "header",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/parameters/0",
          "kind": "header-parameter",
        },
        "value": Object {
          "in": "header",
          "name": "exampleParam",
          "required": false,
        },
      },
      "condition": "have camelCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "requirement for header-parameter: exampleParam",
    },
  ],
}
`;

exports[`passing case 1: adding a camelCase when camelCase is required 2`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "header": "exampleParam",
              "statusCode": "200",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "headers",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/headers/exampleParam",
          "kind": "response-header",
        },
        "value": Object {
          "name": "exampleParam",
          "required": false,
        },
      },
      "condition": "have camelCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "requirement for response-header: exampleParam",
    },
  ],
}
`;

exports[`passing case 1: adding a camelCase when camelCase is required 3`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "camelCase",
            ],
            "method": "post",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "post",
            "application/json",
            "camelCase",
          ],
          "jsonPath": "/paths/~1example/post/requestBody/content/application~1json/schema/properties/camelCase",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "camelCase",
          "required": false,
        },
      },
      "condition": "have camelCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "requirement for field: request body 'camelCase'",
    },
  ],
}
`;

exports[`passing case 1: adding a camelCase when camelCase is required 4`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "camelCase",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "camelCase",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/camelCase",
          "kind": "field",
        },
        "value": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "camelCase",
          "required": false,
        },
      },
      "condition": "have camelCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "requirement for field: response body 'camelCase'",
    },
  ],
}
`;

exports[`passing case 1: adding a camelCase when camelCase is required 5`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "query": "exampleParam",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "parameters",
            "query",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/parameters/0",
          "kind": "query-parameter",
        },
        "value": Object {
          "in": "query",
          "name": "exampleParam",
          "required": false,
        },
      },
      "condition": "have camelCase name",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "requirement for query-parameter: exampleParam",
    },
  ],
}
`;

exports[`passing case 1: adding an optional property 1`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "added": Object {
          "flatSchema": Object {
            "type": "string",
          },
          "key": "email",
          "required": false,
        },
        "changeType": "added",
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "email",
            ],
            "method": "post",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "post",
            "application/json",
            "email",
          ],
          "jsonPath": "/paths/~1example/post/requestBody/content/application~1json/schema/properties/email",
          "kind": "field",
        },
      },
      "condition": "not be required",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "added field: email",
    },
  ],
}
`;

exports[`passing case 1: adding optional 1`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "added": Object {
          "in": "query",
          "name": "exampleParam",
          "required": false,
        },
        "changeType": "added",
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "query": "exampleParam",
            },
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "parameters",
            "query",
            "exampleParam",
          ],
          "jsonPath": "/paths/~1example/get/parameters/0",
          "kind": "query-parameter",
        },
      },
      "condition": "not be allowed",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "added query-parameter: exampleParam",
    },
  ],
}
`;

exports[`passing case 1: changing optional to required 1`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "changed",
        "changed": Object {
          "after": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": true,
          },
          "before": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
        },
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/name",
          "kind": "field",
        },
      },
      "condition": "not change from required to optional",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "updated field: name",
    },
  ],
}
`;

exports[`passing case 1: changing required to optional 1`] = `
Object {
  "passed": true,
  "results": Array [
    Object {
      "change": Object {
        "changeType": "changed",
        "changed": Object {
          "after": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": false,
          },
          "before": Object {
            "flatSchema": Object {
              "type": "string",
            },
            "key": "name",
            "required": true,
          },
        },
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "name",
            ],
            "method": "post",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "post",
            "application/json",
            "name",
          ],
          "jsonPath": "/paths/~1example/post/requestBody/content/application~1json/schema/properties/name",
          "kind": "field",
        },
      },
      "condition": "not change from optional to required",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "isMust": true,
      "isShould": false,
      "passed": true,
      "where": "updated field: name",
    },
  ],
}
`;

exports[`passing case 2: wrong case ok if it is already there 1`] = `
Object {
  "passed": true,
  "results": Array [],
}
`;

exports[`passing case 2: wrong case ok if it is already there 2`] = `
Object {
  "passed": true,
  "results": Array [],
}
`;

exports[`passing case 2: wrong case ok if it is already there 3`] = `
Object {
  "passed": true,
  "results": Array [],
}
`;

exports[`passing case 2: wrong case ok if it is already there 4`] = `
Object {
  "passed": true,
  "results": Array [],
}
`;

exports[`passing case 2: wrong case ok if it is already there 5`] = `
Object {
  "passed": true,
  "results": Array [],
}
`;
