# Linting rules for compiled API.next OpenAPI documents.

extends:
  - - spectral:oas
    - all
  - './jsonapi.yaml'
  - './naming.yaml'
  - './responses.yaml'
  - './spec.yaml'
  - './versioning.yaml'

functions:
  - equals

rules:
  openapi-tags: off
  operation-tags: off
  info-contact: off
  info-description: off
  info-license: off
  license-url: off

  # Compiled specs must provide their own OpenAPI specification

  openapi-get-versions:
    description: APIs must list the available versioned OpenAPI specifications.
    severity: error
    given: $.paths[/openapi]
    then:
      field: get
      function: truthy

  openapi-get-version:
    description: APIs must provide versioned OpenAPI specifications.
    severity: error
    given: $.paths[/openapi/{version}]
    then:
      field: get
      function: truthy

  # Here for now. Probably a better place to put it
  apinext-route-tenant-uuids:
    description: APIs must use UUIDs where org or group tenants are specified
    severity: error
    given: $.paths[*][*].parameters[?(@.name.match(/org_id|group_id/))].schema
    then:
      - field: type
        function: enumeration
        functionOptions:
          values:
            - string

      - field: format
        function: truthy

      - field: format
        function: enumeration
        functionOptions:
          values:
            - uuid

  apinext-paths-tenants:
    description: APIs must have an org or group tenant
    severity: error
    given: $.paths
    then:
      field: '@key'
      function: pattern
      functionOptions:
        match: '^\/(orgs\/{org_id}|groups\/{group_id})'


  # Require Examples for user defined response objects - in an array
  apinext-operation-response-array-examples:
    description: Responses must have an enum or examples field and be non-empty
    severity: error
    given: $.paths[*][*].responses[*].content[*].schema.properties.data.items.properties.attributes..[properties][?(!@.type.match(/object|boolean/))]
    then:
      function: xor
      functionOptions:
        properties:
          - enum
          - example

  # Require Examples for user defined response objects - single objects
  apinext-operation-response-single-examples:
    description: Responses must have an enum or examples field and be non-empty
    severity: error
    given: $.paths[*][*].responses[*].content[*].schema.properties.data.properties.attributes..[properties][?(!@.type.match(/object|boolean/))]
    then:
      function: xor
      functionOptions:
        properties:
          - enum
          - example

  apinext-date-property-formatting:
    description: Date-time properties require correct date-time format
    severity: error
    given: $.paths[*][*].responses[*].content[*].schema..properties[?(@property.match(/created|updated|deleted/))]
    then:
      - field: format
        function: equals
        functionOptions:
          value: date-time

  apinext-tags-name-description:
    description: Tags must have a name and description
    severity: error
    given: $.tags[*]
    then:
      - field: name
        function: truthy
      - field: description
        function: truthy

  apinext-operation-summary:
      description: Path operations must include a summary
      severity: error
      given: $.paths[*][*]
      then:
        field: summary
        function: truthy

  apinext-operation-tags:
      description: Path operations must include tags
      severity: error
      given: $.paths[*][*]
      then:
        field: tags
        function: truthy

