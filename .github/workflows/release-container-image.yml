name: release-container-image

on:
  workflow_dispatch:
    inputs:
      optic_version:
        required: true
        type: string
        description: >
          The Optic version to package in the image. Any NPM dist tag or published semver version is technically
          supported, but this value is also used as the image tag, so avoid using 'latest'.
  workflow_call:
    inputs:
      optic_version:
        required: true
        type: string
        description: >
          The Optic version to package in the image. Any NPM dist tag or published semver version is technically
          supported, but this value is also used as the image tag, so avoid using 'latest'.
    secrets:
      BUILD_BOT_SLACK_WEBHOOK_URL_RELEASES:
        required: true
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_TOKEN:
        required: true
      OPTIC_REPO_AWS_ACCESS_KEY_ID:
        required: true
      OPTIC_REPO_AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

env:
  SKIP_ANNOUNCE: 'false'
  SKIP_PUBLISH: 'false'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2

      - name: Install Task
        run: curl -sL https://taskfile.dev/install.sh | sudo bash -s -- -b /usr/local/bin/

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          aws-access-key-id: ${{ secrets.OPTIC_REPO_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OPTIC_REPO_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@9149ade017c57f86dea2f76a01f8b2d5bd06b10f # v1.5.1
        with:
          registry-type: public

      - name: Build and publish
        run: task docker:build:release OPTIC_CLI_VERSION="${{ inputs.optic_version }}" -- --push

      - name: Announce success
        uses: Ilshidur/action-slack@689ad44a9c9092315abd286d0e3a9a74d31ab78a # v2.1.0
        if: success()
        env:
          SLACK_WEBHOOK: ${{ secrets.BUILD_BOT_SLACK_WEBHOOK_URL_RELEASES }}
        with:
          args: '{{ GITHUB_ACTOR }}: âœ… container images `docker.io/useoptic/optic:${{ inputs.optic_version }}`, `public.ecr.aws/optic/optic:${{ inputs.optic_version }}` published!'

      - name: Announce failure
        uses: Ilshidur/action-slack@689ad44a9c9092315abd286d0e3a9a74d31ab78a # v2.1.0
        if: failure()
        env:
          SLACK_WEBHOOK: ${{ secrets.BUILD_BOT_SLACK_WEBHOOK_URL_RELEASES }}
        with:
          args: '{{ GITHUB_ACTOR }}: ðŸš« container images failed to publish.'
