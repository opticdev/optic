name: Deploy Demo
on:
  push:
    branches:
      - feature/demo
      - release
jobs:
  build-demo-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Set branch name
        run: echo "BRANCH=$GITHUB_REF" >> $GITHUB_ENV

      - name: Set contextual vars
        run: |
          if [ "$BRANCH" = "refs/heads/release" ]; then
            echo "BUCKET=optic-demo-website-production" >> $GITHUB_ENV
            echo "SITE_URL=https://demo.useoptic.com" >> $GITHUB_ENV
          elif [ "$BRANCH" = "refs/heads/feature/demo" ]; then
            echo "BUCKET=optic-demo-website-staging" >> $GITHUB_ENV
            echo "SITE_URL=https://demo.o3c.info" >> $GITHUB_ENV
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@c0243dfafd0e99b12caca0d56b6de8e7fb8d20db # https://github.com/aws-actions/configure-aws-credentials/commits/v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
      - uses: actions/setup-node@56899e050abffc08c2b3b61f3ec6a79a9dc3223d # v1.4.4
        with:
          node-version: 12
      - name: Checkout Optic Repository
        uses: actions/checkout@28c7f3d2b5162b5ddd3dfd9a45aa55eaf396478b # https://github.com/actions/checkout/commits/v2
        with:
            ref: feature/demo
            path: demoRepo
            token: ${{ github.token }}
      - name: Install Dependencies and Build Optic
        run:  |
          sudo apt-get update
          sudo apt-get install apt-transport-https -y
          echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
          curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
          sudo apt-get update
          sudo apt-get install sbt -y
          source ./sourceme.sh && optic_build_for_release
        working-directory: ./demoRepo
      - name: Build Demo Site
        run: yarn build-demo
        working-directory: ./demoRepo
        env:
          PUBLIC_URL: ${{ env.SITE_URL }}
          CI: false # required since otherwise the warnings in react cause a fail to compile

      # `--acl=public-read` is neceesary because the prod account is uploading the files to the staging bucket,
      # which prevents the default bucket policy from applying to these objects
      - name: Upload to S3
        run: |
          aws s3 cp ./demoRepo/workspaces/ui/build/index.html "s3://$BUCKET" \
            --sse=AES256 \
            --acl=public-read \
            --metadata='{"Cache-Control":"no-store"}' \
            --cache-control=no-store
          aws s3 cp ./demoRepo/workspaces/ui/build/ "s3://$BUCKET/" \
            --recursive \
            --exclude=index.html \
            --sse=AES256 \
            --acl=public-read
