name: Test Regression Scenarios

on: push

jobs:

  local-cli-regression-:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        interaction-count: [0, 1, 100, 1000, 10000]
        rust-diff-engine: ["true"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-node@56899e050abffc08c2b3b61f3ec6a79a9dc3223d # https://github.com/actions/setup-node/releases/tag/v1.4.4
        with:
          node-version: 12

      - name: 'Set CARGO_HOME and RUSTUP_HOME'
        run: |
          echo "RUSTUP_HOME=$HOME/.rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=$HOME/.cargo" >> $GITHUB_ENV

      - name: 'Checkout source'
        uses: actions/checkout@28c7f3d2b5162b5ddd3dfd9a45aa55eaf396478b # https://github.com/actions/checkout/commits/v2
      - name: restore cached node_modules
        id: workspace-node-modules
        uses: actions/cache@d1255ad9362389eac595a9ae406b8e8cb3331f16 # v2.1.2
        with:
          path: |
            node_modules/
          key: workspace-node-modules-${{ runner.os }}-${{ hashFiles('yarn.lock') }}-v1
      - name: 'Install test dependencies'
        shell: bash
        run: |
          set -x
          set -v
          source sourceme.sh
          optic_build_for_release
      - name: 'display yarn error log'
        shell: bash
        run: cat yarn-error.log
        if: ${{ failure() }}

      - name: 'restore cached cargo registry'
        uses: actions/cache@d1255ad9362389eac595a9ae406b8e8cb3331f16 # https://github.com/actions/cache/commits/v2
        with:
          path: |
            ${{ env.CARGO_HOME }}/registry
            ${{ env.CARGO_HOME }}/git
            target
          key: '${{ runner.os }}-cargo-${{ hashFiles(''**/Cargo.lock'') }}-v4'
      - name: 'Rust toolchain'
        uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f # https://github.com/actions-rs/toolchain/commits/v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      # @TODO: build and use the release binary as opposed to the debug binary
      - name: 'Build'
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # https://github.com/actions-rs/cargo/commits/v1
        with:
          command: build
          args: --workspace --all-features
      - name: 'Test'
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # https://github.com/actions-rs/cargo/commits/v1
        with:
          command: test
      - name: 'Flush Cargo cache to disk on macOS'
        if: runner.os == 'macOS'
        run: sudo /usr/sbin/purge

      - name: 'run scenario'
        shell: bash
        timeout-minutes: 2
        run: |
          source sourceme.sh
          optic_ci_standard_streams_regression ${{ matrix.interaction-count }} ${{ matrix.rust-diff-engine }}


      - name: 'display diff output'
        shell: bash
        run: |
          source sourceme.sh
          optic_ci_standard_streams_regression__on_failure
        if: ${{ always() }}
